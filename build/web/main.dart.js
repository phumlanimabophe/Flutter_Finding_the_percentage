// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const html = dart_sdk.html;
  const js_util = dart_sdk.js_util;
  const collection = dart_sdk.collection;
  const _http = dart_sdk._http;
  const _internal = dart_sdk._internal;
  const typed_data = dart_sdk.typed_data;
  const convert = dart_sdk.convert;
  const math = dart_sdk.math;
  const _native_typed_data = dart_sdk._native_typed_data;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const colors = flutter_sdk.src__material__colors;
  const text = flutter_sdk.src__widgets__text;
  const icon_button = flutter_sdk.src__material__icon_button;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const framework = flutter_sdk.src__widgets__framework;
  const basic = flutter_sdk.src__widgets__basic;
  const container = flutter_sdk.src__widgets__container;
  const alignment = flutter_sdk.src__painting__alignment;
  const transitions = flutter_sdk.src__widgets__transitions;
  const animations = flutter_sdk.src__animation__animations;
  const image = flutter_sdk.src__widgets__image;
  const box_fit = flutter_sdk.src__painting__box_fit;
  const flex = flutter_sdk.src__rendering__flex;
  const progress_indicator = flutter_sdk.src__material__progress_indicator;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const card = flutter_sdk.src__material__card;
  const dropdown = flutter_sdk.src__material__dropdown;
  const text_style = flutter_sdk.src__painting__text_style;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const rounded_rectangle_border = flutter_sdk.src__painting__rounded_rectangle_border;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const list_tile = flutter_sdk.src__material__list_tile;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const binding = flutter_sdk.src__widgets__binding;
  const plugin_registry = flutter_sdk.src__plugin_registry;
  const iterable_extensions = flutter_sdk.src__iterable_extensions;
  const equality = flutter_sdk.src__equality;
  const platform = flutter_sdk.src__foundation__platform;
  const system_navigator = flutter_sdk.src__services__system_navigator;
  const message_codec = flutter_sdk.src__services__message_codec;
  const message_codecs = flutter_sdk.src__services__message_codecs;
  const stack = flutter_sdk.src__rendering__stack;
  const platform_view = flutter_sdk.src__widgets__platform_view;
  const basic_types = flutter_sdk.src__foundation__basic_types;
  const recognizer = flutter_sdk.src__gestures__recognizer;
  const platform_view$ = flutter_sdk.src__rendering__platform_view;
  const platform_views = flutter_sdk.src__services__platform_views;
  const system_channels = flutter_sdk.src__services__system_channels;
  const url_strategy = flutter_sdk.src__navigation__url_strategy;
  const events = flutter_sdk.src__gestures__events;
  const platform_channel = flutter_sdk.src__services__platform_channel;
  const binary_messenger = flutter_sdk.src__services__binary_messenger;
  const deprecated = flutter_sdk.src__deprecated;
  const string_scanner = flutter_sdk.src__string_scanner;
  const canonicalized_map = flutter_sdk.src__canonicalized_map;
  const span_exception = flutter_sdk.src__span_exception;
  const queue_list = flutter_sdk.src__queue_list;
  const serialization = flutter_sdk.src__foundation__serialization;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var firebase_auth_web = Object.create(dart.library);
  var firebase_core_web = Object.create(dart.library);
  var url_launcher_web = Object.create(dart.library);
  var firebase_auth_platform_interface = Object.create(dart.library);
  var firebase_auth_web_multi_factor = Object.create(dart.library);
  var utils = Object.create(dart.library);
  var web_utils = Object.create(dart.library);
  var firebase_core = Object.create(dart.library);
  var firebase_core_web_interop = Object.create(dart.library);
  var firebase_auth_web_confirmation_result = Object.create(dart.library);
  var firebase_auth_web_recaptcha_verifier_factory = Object.create(dart.library);
  var firebase_auth_web_user = Object.create(dart.library);
  var firebase_auth_web_user_credential = Object.create(dart.library);
  var auth$ = Object.create(dart.library);
  var multi_factor = Object.create(dart.library);
  var firebase_core_platform_interface = Object.create(dart.library);
  var js$ = Object.create(dart.library);
  var core$ = Object.create(dart.library);
  var link = Object.create(dart.library);
  var url_launcher_platform_interface = Object.create(dart.library);
  var link$ = Object.create(dart.library);
  var dart_ui = Object.create(dart.library);
  var action_code_info = Object.create(dart.library);
  var action_code_settings = Object.create(dart.library);
  var additional_user_info = Object.create(dart.library);
  var auth_credential = Object.create(dart.library);
  var auth_provider = Object.create(dart.library);
  var firebase_auth_exception = Object.create(dart.library);
  var firebase_auth_multi_factor_exception = Object.create(dart.library);
  var id_token_result = Object.create(dart.library);
  var messages$46pigeon = Object.create(dart.library);
  var platform_interface_confirmation_result = Object.create(dart.library);
  var platform_interface_firebase_auth = Object.create(dart.library);
  var platform_interface_multi_factor = Object.create(dart.library);
  var platform_interface_recaptcha_verifier_factory = Object.create(dart.library);
  var platform_interface_user = Object.create(dart.library);
  var platform_interface_user_credential = Object.create(dart.library);
  var apple_auth = Object.create(dart.library);
  var email_auth = Object.create(dart.library);
  var facebook_auth = Object.create(dart.library);
  var github_auth = Object.create(dart.library);
  var google_auth = Object.create(dart.library);
  var microsoft_auth = Object.create(dart.library);
  var oauth = Object.create(dart.library);
  var phone_auth = Object.create(dart.library);
  var saml_auth = Object.create(dart.library);
  var twitter_auth = Object.create(dart.library);
  var yahoo_auth = Object.create(dart.library);
  var types = Object.create(dart.library);
  var user_info = Object.create(dart.library);
  var user_metadata = Object.create(dart.library);
  var es6_interop = Object.create(dart.library);
  var func = Object.create(dart.library);
  var js$0 = Object.create(dart.library);
  var js_interop = Object.create(dart.library);
  var utils$ = Object.create(dart.library);
  var http_parser = Object.create(dart.library);
  var auth_interop = Object.create(dart.library);
  var messages$46pigeon$ = Object.create(dart.library);
  var plugin_platform_interface = Object.create(dart.library);
  var mocks = Object.create(dart.library);
  var test_api = Object.create(dart.library);
  var app$ = Object.create(dart.library);
  var core_interop = Object.create(dart.library);
  var app_interop = Object.create(dart.library);
  var types$ = Object.create(dart.library);
  var url_launcher_platform = Object.create(dart.library);
  var dart_ui_real = Object.create(dart.library);
  var method_channel_firebase_auth = Object.create(dart.library);
  var method_channel_multi_factor = Object.create(dart.library);
  var authentication_challenge = Object.create(dart.library);
  var case_insensitive_map = Object.create(dart.library);
  var chunked_coding = Object.create(dart.library);
  var http_date = Object.create(dart.library);
  var media_type = Object.create(dart.library);
  var method_channel_url_launcher = Object.create(dart.library);
  var _flutterfire_internals = Object.create(dart.library);
  var convert_auth_provider = Object.create(dart.library);
  var method_channel_user = Object.create(dart.library);
  var method_channel_user_credential = Object.create(dart.library);
  var exception$ = Object.create(dart.library);
  var pigeon_helper = Object.create(dart.library);
  var scan = Object.create(dart.library);
  var utils$0 = Object.create(dart.library);
  var decoder = Object.create(dart.library);
  var encoder = Object.create(dart.library);
  var exception$0 = Object.create(dart.library);
  var typed_data$ = Object.create(dart.library);
  var charcodes = Object.create(dart.library);
  var typed_queue = Object.create(dart.library);
  var typed_buffers = Object.create(dart.library);
  var typed_buffer = Object.create(dart.library);
  var $toString = dartx.toString;
  var $modulo = dartx['%'];
  var $length = dartx.length;
  var $_get = dartx._get;
  var $isNotEmpty = dartx.isNotEmpty;
  var $reduce = dartx.reduce;
  var $toStringAsFixed = dartx.toStringAsFixed;
  var $keys = dartx.keys;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $elementAt = dartx.elementAt;
  var $addAll = dartx.addAll;
  var $_set = dartx._set;
  var $location = dartx.location;
  var $sessionStorage = dartx.sessionStorage;
  var $contains = dartx.contains;
  var $putIfAbsent = dartx.putIfAbsent;
  var $type = dartx.type;
  var $text = dartx.text;
  var $head = dartx.head;
  var $append = dartx.append;
  var $values = dartx.values;
  var $split = dartx.split;
  var $replaceAll = dartx.replaceAll;
  var $navigator = dartx.navigator;
  var $open = dartx.open;
  var $startsWith = dartx.startsWith;
  var $userAgent = dartx.userAgent;
  var $replaceFirst = dartx.replaceFirst;
  var $forEach = dartx.forEach;
  var $hashCode = dartx.hashCode;
  var $isEmpty = dartx.isEmpty;
  var $document = dartx.document;
  var $remove = dartx.remove;
  var $children = dartx.children;
  var $id = dartx.id;
  var $add = dartx.add;
  var $containsKey = dartx.containsKey;
  var $where = dartx.where;
  var $cast = dartx.cast;
  var $_equals = dartx._equals;
  var $onClick = dartx.onClick;
  var $style = dartx.style;
  var $opacity = dartx.opacity;
  var $display = dartx.display;
  var $width = dartx.width;
  var $height = dartx.height;
  var $cursor = dartx.cursor;
  var $setAttribute = dartx.setAttribute;
  var $removeAttribute = dartx.removeAttribute;
  var $target = dartx.target;
  var $shadowRoot = dartx.shadowRoot;
  var $tagName = dartx.tagName;
  var $toLowerCase = dartx.toLowerCase;
  var $indexOf = dartx.indexOf;
  var $replaceAllMapped = dartx.replaceAllMapped;
  var $last = dartx.last;
  var $substring = dartx.substring;
  var $asUint8List = dartx.asUint8List;
  var $toRadixString = dartx.toRadixString;
  var $toUpperCase = dartx.toUpperCase;
  var $codeUnits = dartx.codeUnits;
  var $setRange = dartx.setRange;
  var $fillRange = dartx.fillRange;
  var $rightShift = dartx['>>'];
  var $sublist = dartx.sublist;
  var $elementSizeInBytes = dartx.elementSizeInBytes;
  var $offsetInBytes = dartx.offsetInBytes;
  var $buffer = dartx.buffer;
  var $insertAll = dartx.insertAll;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T$ = {
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T$.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T$.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ListOfString()])))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T$.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T$.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T$.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    FutureOfNull: () => (T$.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    TimerTovoid: () => (T$.TimerTovoid = dart.constFn(dart.fnType(dart.void, [async.Timer])))(),
    ListOfWidget: () => (T$.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    AlwaysStoppedAnimationOfdouble: () => (T$.AlwaysStoppedAnimationOfdouble = dart.constFn(animations.AlwaysStoppedAnimation$(core.double)))(),
    intToCenter: () => (T$.intToCenter = dart.constFn(dart.fnType(basic.Center, [core.int])))(),
    FnTovoid: () => (T$.FnTovoid = dart.constFn(dart.fnType(dart.void, [T$.VoidTovoid()])))(),
    BuildContextAndFnToContainer: () => (T$.BuildContextAndFnToContainer = dart.constFn(dart.fnType(container.Container, [framework.BuildContext, T$.FnTovoid()])))(),
    BuildContextToStatefulBuilder: () => (T$.BuildContextToStatefulBuilder = dart.constFn(dart.fnType(basic.StatefulBuilder, [framework.BuildContext])))(),
    BuildContextAndFnToWidget: () => (T$.BuildContextAndFnToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.FnTovoid()])))(),
    JSArrayOfint: () => (T$.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))(),
    ListOfint: () => (T$.ListOfint = dart.constFn(core.List$(core.int)))(),
    IdentityMapOfString$ListOfint: () => (T$.IdentityMapOfString$ListOfint = dart.constFn(_js_helper.IdentityMap$(core.String, T$.ListOfint())))(),
    intAndintToint: () => (T$.intAndintToint = dart.constFn(dart.fnType(core.int, [core.int, core.int])))(),
    DropdownButtonOfString: () => (T$.DropdownButtonOfString = dart.constFn(dropdown.DropdownButton$(core.String)))(),
    DropdownMenuItemOfString: () => (T$.DropdownMenuItemOfString = dart.constFn(dropdown.DropdownMenuItem$(core.String)))(),
    StringToDropdownMenuItemOfString: () => (T$.StringToDropdownMenuItemOfString = dart.constFn(dart.fnType(T$.DropdownMenuItemOfString(), [core.String])))(),
    StringN: () => (T$.StringN = dart.constFn(dart.nullable(core.String)))(),
    StringNTovoid: () => (T$.StringNTovoid = dart.constFn(dart.fnType(dart.void, [T$.StringN()])))(),
    BuildContextAndintToCard: () => (T$.BuildContextAndintToCard = dart.constFn(dart.fnType(card.Card, [framework.BuildContext, core.int])))(),
    CompleterOfvoid: () => (T$.CompleterOfvoid = dart.constFn(async.Completer$(dart.void)))(),
    UserPlatformN: () => (T$.UserPlatformN = dart.constFn(dart.nullable(platform_interface_user.UserPlatform)))(),
    StreamControllerOfUserPlatformN: () => (T$.StreamControllerOfUserPlatformN = dart.constFn(async.StreamController$(T$.UserPlatformN())))(),
    UserWebN: () => (T$.UserWebN = dart.constFn(dart.nullable(firebase_auth_web_user.UserWeb)))(),
    UserN: () => (T$.UserN = dart.constFn(dart.nullable(auth$.User)))(),
    UserNToUserWebN: () => (T$.UserNToUserWebN = dart.constFn(dart.fnType(T$.UserWebN(), [T$.UserN()])))(),
    UserWebNTovoid: () => (T$.UserWebNTovoid = dart.constFn(dart.fnType(dart.void, [T$.UserWebN()])))(),
    FutureOfvoid: () => (T$.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    AppToFutureOfvoid: () => (T$.AppToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [app$.App])))(),
    _AsyncStarImplOfUserPlatformN: () => (T$._AsyncStarImplOfUserPlatformN = dart.constFn(async._AsyncStarImpl$(T$.UserPlatformN())))(),
    IdentityMapOfString$dynamic: () => (T$.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    ObjectNToObjectN: () => (T$.ObjectNToObjectN = dart.constFn(dart.fnType(T$.ObjectN(), [T$.ObjectN()])))(),
    ListOfObjectN: () => (T$.ListOfObjectN = dart.constFn(core.List$(T$.ObjectN())))(),
    PigeonUserDetailsN: () => (T$.PigeonUserDetailsN = dart.constFn(dart.nullable(messages$46pigeon.PigeonUserDetails)))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    ExpandoOfObject: () => (T$.ExpandoOfObject = dart.constFn(core.Expando$(core.Object)))(),
    IdentityMapOfString$StreamControllerOfUserPlatformN: () => (T$.IdentityMapOfString$StreamControllerOfUserPlatformN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StreamControllerOfUserPlatformN())))(),
    VoidToFirebaseWebService: () => (T$.VoidToFirebaseWebService = dart.constFn(dart.fnType(firebase_core_web.FirebaseWebService, [])))(),
    dynamicToString: () => (T$.dynamicToString = dart.constFn(dart.fnType(core.String, [dart.dynamic])))(),
    StringToString: () => (T$.StringToString = dart.constFn(dart.fnType(core.String, [core.String])))(),
    FirebaseWebServiceToFutureOfvoid: () => (T$.FirebaseWebServiceToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [firebase_core_web.FirebaseWebService])))(),
    ListOfFirebaseAppPlatform: () => (T$.ListOfFirebaseAppPlatform = dart.constFn(core.List$(firebase_core_platform_interface.FirebaseAppPlatform)))(),
    AppToFirebaseAppPlatform: () => (T$.AppToFirebaseAppPlatform = dart.constFn(dart.fnType(firebase_core_platform_interface.FirebaseAppPlatform, [app$.App])))(),
    VoidToListOfFirebaseAppPlatform: () => (T$.VoidToListOfFirebaseAppPlatform = dart.constFn(dart.fnType(T$.ListOfFirebaseAppPlatform(), [])))(),
    VoidToString: () => (T$.VoidToString = dart.constFn(dart.fnType(core.String, [])))(),
    VoidToApp: () => (T$.VoidToApp = dart.constFn(dart.fnType(app$.App, [])))(),
    IdentityMapOfString$FirebaseWebService: () => (T$.IdentityMapOfString$FirebaseWebService = dart.constFn(_js_helper.IdentityMap$(core.String, firebase_core_web.FirebaseWebService)))(),
    ObjectAndStackTraceToNever: () => (T$.ObjectAndStackTraceToNever = dart.constFn(dart.fnType(dart.Never, [core.Object, core.StackTrace])))(),
    LinkInfoToWebLinkDelegate: () => (T$.LinkInfoToWebLinkDelegate = dart.constFn(dart.fnType(link$.WebLinkDelegate, [link.LinkInfo])))(),
    FutureOfbool: () => (T$.FutureOfbool = dart.constFn(async.Future$(core.bool)))(),
    LinkedHashSetOfString: () => (T$.LinkedHashSetOfString = dart.constFn(collection.LinkedHashSet$(core.String)))(),
    MultiFactorInfoOfMultiFactorInfoJsImpl: () => (T$.MultiFactorInfoOfMultiFactorInfoJsImpl = dart.constFn(multi_factor.MultiFactorInfo$(dart.packageJSType("MultiFactorInfoJsImpl", false))))(),
    MultiFactorInfoOfMultiFactorInfoJsImplToMultiFactorInfo: () => (T$.MultiFactorInfoOfMultiFactorInfoJsImplToMultiFactorInfo = dart.constFn(dart.fnType(platform_interface_multi_factor.MultiFactorInfo, [T$.MultiFactorInfoOfMultiFactorInfoJsImpl()])))(),
    ListOfMultiFactorInfo: () => (T$.ListOfMultiFactorInfo = dart.constFn(core.List$(platform_interface_multi_factor.MultiFactorInfo)))(),
    boolN: () => (T$.boolN = dart.constFn(dart.nullable(core.bool)))(),
    FirebaseAppPlatformToFirebaseApp: () => (T$.FirebaseAppPlatformToFirebaseApp = dart.constFn(dart.fnType(firebase_core.FirebaseApp, [firebase_core_platform_interface.FirebaseAppPlatform])))(),
    ObjectToNull: () => (T$.ObjectToNull = dart.constFn(dart.fnType(core.Null, [core.Object])))(),
    JSArrayOfStringN: () => (T$.JSArrayOfStringN = dart.constFn(_interceptors.JSArray$(T$.StringN())))(),
    intN: () => (T$.intN = dart.constFn(dart.nullable(core.int)))(),
    MapOfString$dynamic: () => (T$.MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))(),
    UserInfoOfUserInfoJsImpl: () => (T$.UserInfoOfUserInfoJsImpl = dart.constFn(auth$.UserInfo$(dart.packageJSType("UserInfoJsImpl", false))))(),
    UserInfoOfUserInfoJsImplToMapOfString$dynamic: () => (T$.UserInfoOfUserInfoJsImplToMapOfString$dynamic = dart.constFn(dart.fnType(T$.MapOfString$dynamic(), [T$.UserInfoOfUserInfoJsImpl()])))(),
    MapOfObjectN$ObjectN: () => (T$.MapOfObjectN$ObjectN = dart.constFn(core.Map$(T$.ObjectN(), T$.ObjectN())))(),
    JSArrayOfUserInfo: () => (T$.JSArrayOfUserInfo = dart.constFn(_interceptors.JSArray$(user_info.UserInfo)))(),
    dynamicToUserInfoOfUserInfoJsImpl: () => (T$.dynamicToUserInfoOfUserInfoJsImpl = dart.constFn(dart.fnType(T$.UserInfoOfUserInfoJsImpl(), [dart.dynamic])))(),
    UserCredentialJsImplToUserCredential: () => (T$.UserCredentialJsImplToUserCredential = dart.constFn(dart.fnType(auth$.UserCredential, [dart.packageJSType("UserCredentialJsImpl", false)])))(),
    ConfirmationResultJsImplToConfirmationResult: () => (T$.ConfirmationResultJsImplToConfirmationResult = dart.constFn(dart.fnType(auth$.ConfirmationResult, [dart.packageJSType("firebase_auth.ConfirmationResult", false)])))(),
    UserJsImplToUser: () => (T$.UserJsImplToUser = dart.constFn(dart.fnType(auth$.User, [dart.packageJSType("UserJsImpl", false)])))(),
    IdTokenResultImplToIdTokenResult: () => (T$.IdTokenResultImplToIdTokenResult = dart.constFn(dart.fnType(auth$.IdTokenResult, [dart.packageJSType("IdTokenResultImpl", false)])))(),
    ExpandoOfUser: () => (T$.ExpandoOfUser = dart.constFn(core.Expando$(auth$.User)))(),
    MapNOfString$dynamic: () => (T$.MapNOfString$dynamic = dart.constFn(dart.nullable(T$.MapOfString$dynamic())))(),
    UserJsImplNToNull: () => (T$.UserJsImplNToNull = dart.constFn(dart.fnType(core.Null, [dart.nullable(dart.packageJSType("UserJsImpl", false))])))(),
    dynamicTovoid: () => (T$.dynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic])))(),
    StreamControllerOfUserN: () => (T$.StreamControllerOfUserN = dart.constFn(async.StreamController$(T$.UserN())))(),
    Iterable__ToListOfE: () => (T$.Iterable__ToListOfE = dart.constFn(dart.gFnType(E => [core.List$(E), [core.Iterable], {growable: core.bool}, {}], E => [T$.ObjectN()])))(),
    ExpandoOfAuth: () => (T$.ExpandoOfAuth = dart.constFn(core.Expando$(auth$.Auth)))(),
    JSArrayOfPersistence: () => (T$.JSArrayOfPersistence = dart.constFn(_interceptors.JSArray$(dart.packageJSType("firebase_auth.Persistence", false))))(),
    TToMultiFactorInfoOfT: () => (T$.TToMultiFactorInfoOfT = dart.constFn(dart.gFnType(T => [multi_factor.MultiFactorInfo$(T), [T]], T => [dart.packageJSType("MultiFactorInfoJsImpl", false)])))(),
    MultiFactorSessionJsImplToMultiFactorSession: () => (T$.MultiFactorSessionJsImplToMultiFactorSession = dart.constFn(dart.fnType(multi_factor.MultiFactorSession, [dart.packageJSType("MultiFactorSessionJsImpl", false)])))(),
    ExpandoOfMultiFactorUser: () => (T$.ExpandoOfMultiFactorUser = dart.constFn(core.Expando$(multi_factor.MultiFactorUser)))(),
    MultiFactorInfoJsImplToMultiFactorInfoOfMultiFactorInfoJsImpl: () => (T$.MultiFactorInfoJsImplToMultiFactorInfoOfMultiFactorInfoJsImpl = dart.constFn(dart.fnType(T$.MultiFactorInfoOfMultiFactorInfoJsImpl(), [dart.packageJSType("MultiFactorInfoJsImpl", false)])))(),
    IdentityMapOfString$StringN: () => (T$.IdentityMapOfString$StringN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StringN())))(),
    DefaultEqualityOfNever: () => (T$.DefaultEqualityOfNever = dart.constFn(equality.DefaultEquality$(dart.Never)))(),
    PigeonInitializeResponseN: () => (T$.PigeonInitializeResponseN = dart.constFn(dart.nullable(messages$46pigeon$.PigeonInitializeResponse)))(),
    PigeonInitializeResponseNTobool: () => (T$.PigeonInitializeResponseNTobool = dart.constFn(dart.fnType(core.bool, [T$.PigeonInitializeResponseN()])))(),
    IdentityMapOfString$MethodChannelFirebaseApp: () => (T$.IdentityMapOfString$MethodChannelFirebaseApp = dart.constFn(_js_helper.IdentityMap$(core.String, firebase_core_platform_interface.MethodChannelFirebaseApp)))(),
    MapNOfObjectN$ObjectN: () => (T$.MapNOfObjectN$ObjectN = dart.constFn(dart.nullable(T$.MapOfObjectN$ObjectN())))(),
    ObjectNAndObjectNAndObjectN__Tovoid: () => (T$.ObjectNAndObjectNAndObjectN__Tovoid = dart.constFn(dart.fnType(dart.void, [T$.ObjectN()], [T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN()])))(),
    StringAndDomTrustedTypePolicyOptionsNToDomTrustedTypePolicy: () => (T$.StringAndDomTrustedTypePolicyOptionsNToDomTrustedTypePolicy = dart.constFn(dart.fnType(dart.packageJSType("DomTrustedTypePolicy", true), [core.String, dart.nullable(dart.packageJSType("DomTrustedTypePolicyOptions", true))])))(),
    StringToDomTrustedScriptUrl: () => (T$.StringToDomTrustedScriptUrl = dart.constFn(dart.fnType(dart.packageJSType("DomTrustedScriptUrl", true), [core.String])))(),
    dynamicToApp: () => (T$.dynamicToApp = dart.constFn(dart.fnType(app$.App, [dart.dynamic])))(),
    CompleterOfByteData: () => (T$.CompleterOfByteData = dart.constFn(async.Completer$(typed_data.ByteData)))(),
    FutureOrOfByteData: () => (T$.FutureOrOfByteData = dart.constFn(async.FutureOr$(typed_data.ByteData)))(),
    FutureOrNOfByteData: () => (T$.FutureOrNOfByteData = dart.constFn(dart.nullable(T$.FutureOrOfByteData())))(),
    FutureOrNOfByteDataTovoid: () => (T$.FutureOrNOfByteDataTovoid = dart.constFn(dart.fnType(dart.void, [], [T$.FutureOrNOfByteData()])))(),
    PlatformViewCreationParamsToLinkViewController: () => (T$.PlatformViewCreationParamsToLinkViewController = dart.constFn(dart.fnType(link$.LinkViewController, [platform_view.PlatformViewCreationParams])))(),
    FactoryOfOneSequenceGestureRecognizer: () => (T$.FactoryOfOneSequenceGestureRecognizer = dart.constFn(basic_types.Factory$(recognizer.OneSequenceGestureRecognizer)))(),
    BuildContextAndPlatformViewControllerToPlatformViewSurface: () => (T$.BuildContextAndPlatformViewControllerToPlatformViewSurface = dart.constFn(dart.fnType(platform_view.PlatformViewSurface, [framework.BuildContext, platform_views.PlatformViewController])))(),
    MouseEventTovoid: () => (T$.MouseEventTovoid = dart.constFn(dart.fnType(dart.void, [html.MouseEvent])))(),
    voidToNull: () => (T$.voidToNull = dart.constFn(dart.fnType(core.Null, [dart.void])))(),
    IdentityMapOfint$LinkViewController: () => (T$.IdentityMapOfint$LinkViewController = dart.constFn(_js_helper.IdentityMap$(core.int, link$.LinkViewController)))(),
    intToElement: () => (T$.intToElement = dart.constFn(dart.fnType(html.Element, [core.int])))(),
    IdentityMapOfString$ObjectN: () => (T$.IdentityMapOfString$ObjectN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.ObjectN())))(),
    LinkedHashMapOfString$dynamic: () => (T$.LinkedHashMapOfString$dynamic = dart.constFn(collection.LinkedHashMap$(core.String, dart.dynamic)))(),
    JSArrayOfObjectN: () => (T$.JSArrayOfObjectN = dart.constFn(_interceptors.JSArray$(T$.ObjectN())))(),
    ListNOfObjectN: () => (T$.ListNOfObjectN = dart.constFn(dart.nullable(T$.ListOfObjectN())))(),
    BasicMessageChannelOfObjectN: () => (T$.BasicMessageChannelOfObjectN = dart.constFn(platform_channel.BasicMessageChannel$(T$.ObjectN())))(),
    PigeonActionCodeInfoN: () => (T$.PigeonActionCodeInfoN = dart.constFn(dart.nullable(messages$46pigeon.PigeonActionCodeInfo)))(),
    PigeonUserCredentialN: () => (T$.PigeonUserCredentialN = dart.constFn(dart.nullable(messages$46pigeon.PigeonUserCredential)))(),
    ListOfStringN: () => (T$.ListOfStringN = dart.constFn(core.List$(T$.StringN())))(),
    PigeonIdTokenResultN: () => (T$.PigeonIdTokenResultN = dart.constFn(dart.nullable(messages$46pigeon.PigeonIdTokenResult)))(),
    PigeonMultiFactorSessionN: () => (T$.PigeonMultiFactorSessionN = dart.constFn(dart.nullable(messages$46pigeon.PigeonMultiFactorSession)))(),
    PigeonMultiFactorInfoN: () => (T$.PigeonMultiFactorInfoN = dart.constFn(dart.nullable(messages$46pigeon.PigeonMultiFactorInfo)))(),
    ListOfPigeonMultiFactorInfoN: () => (T$.ListOfPigeonMultiFactorInfoN = dart.constFn(core.List$(T$.PigeonMultiFactorInfoN())))(),
    IdentityMapOfString$String: () => (T$.IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))(),
    dynamicTodynamic: () => (T$.dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.dynamic])))(),
    dynamicAnddynamicTovoid: () => (T$.dynamicAnddynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic, dart.dynamic])))(),
    ObjectTodynamic: () => (T$.ObjectTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.Object])))(),
    ListOfPigeonInitializeResponseN: () => (T$.ListOfPigeonInitializeResponseN = dart.constFn(core.List$(T$.PigeonInitializeResponseN())))(),
    PigeonFirebaseOptionsN: () => (T$.PigeonFirebaseOptionsN = dart.constFn(dart.nullable(messages$46pigeon$.PigeonFirebaseOptions)))(),
    IdentityMapOfStringN$ObjectN: () => (T$.IdentityMapOfStringN$ObjectN = dart.constFn(_js_helper.IdentityMap$(T$.StringN(), T$.ObjectN())))(),
    JSArrayOfPigeonInitializeResponseN: () => (T$.JSArrayOfPigeonInitializeResponseN = dart.constFn(_interceptors.JSArray$(T$.PigeonInitializeResponseN())))(),
    FutureOfListOfObjectN: () => (T$.FutureOfListOfObjectN = dart.constFn(async.Future$(T$.ListOfObjectN())))(),
    ObjectNToFutureOfListOfObjectN: () => (T$.ObjectNToFutureOfListOfObjectN = dart.constFn(dart.fnType(T$.FutureOfListOfObjectN(), [T$.ObjectN()])))(),
    ExpandoOfApp: () => (T$.ExpandoOfApp = dart.constFn(core.Expando$(app$.App)))(),
    ObjectAndStackTrace__ToNever: () => (T$.ObjectAndStackTrace__ToNever = dart.constFn(dart.fnType(dart.Never, [core.Object, core.StackTrace], {fromPigeon: core.bool}, {})))(),
    StringToNull: () => (T$.StringToNull = dart.constFn(dart.fnType(core.Null, [core.String])))(),
    _ValueWrapperOfUserPlatform: () => (T$._ValueWrapperOfUserPlatform = dart.constFn(method_channel_firebase_auth._ValueWrapper$(platform_interface_user.UserPlatform)))(),
    VoidToMethodChannelFirebaseAuth: () => (T$.VoidToMethodChannelFirebaseAuth = dart.constFn(dart.fnType(method_channel_firebase_auth.MethodChannelFirebaseAuth, [])))(),
    _ValueWrapperOfUserPlatformToUserPlatformN: () => (T$._ValueWrapperOfUserPlatformToUserPlatformN = dart.constFn(dart.fnType(T$.UserPlatformN(), [T$._ValueWrapperOfUserPlatform()])))(),
    MapN: () => (T$.MapN = dart.constFn(dart.nullable(core.Map)))(),
    IdentityMapOfString$MethodChannelFirebaseAuth: () => (T$.IdentityMapOfString$MethodChannelFirebaseAuth = dart.constFn(_js_helper.IdentityMap$(core.String, method_channel_firebase_auth.MethodChannelFirebaseAuth)))(),
    IdentityMapOfString$MethodChannelMultiFactor: () => (T$.IdentityMapOfString$MethodChannelMultiFactor = dart.constFn(_js_helper.IdentityMap$(core.String, method_channel_multi_factor.MethodChannelMultiFactor)))(),
    StreamControllerOf_ValueWrapperOfUserPlatform: () => (T$.StreamControllerOf_ValueWrapperOfUserPlatform = dart.constFn(async.StreamController$(T$._ValueWrapperOfUserPlatform())))(),
    IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform: () => (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StreamControllerOf_ValueWrapperOfUserPlatform())))(),
    UnmodifiableMapViewOfString$String: () => (T$.UnmodifiableMapViewOfString$String = dart.constFn(collection.UnmodifiableMapView$(core.String, core.String)))(),
    CaseInsensitiveMapOfString: () => (T$.CaseInsensitiveMapOfString = dart.constFn(case_insensitive_map.CaseInsensitiveMap$(core.String)))(),
    ListOfAuthenticationChallenge: () => (T$.ListOfAuthenticationChallenge = dart.constFn(core.List$(authentication_challenge.AuthenticationChallenge)))(),
    VoidToAuthenticationChallenge: () => (T$.VoidToAuthenticationChallenge = dart.constFn(dart.fnType(authentication_challenge.AuthenticationChallenge, [])))(),
    VoidToListOfAuthenticationChallenge: () => (T$.VoidToListOfAuthenticationChallenge = dart.constFn(dart.fnType(T$.ListOfAuthenticationChallenge(), [])))(),
    VoidToDateTime: () => (T$.VoidToDateTime = dart.constFn(dart.fnType(core.DateTime, [])))(),
    VoidToMediaType: () => (T$.VoidToMediaType = dart.constFn(dart.fnType(media_type.MediaType, [])))(),
    LinkedHashMapOfString$String: () => (T$.LinkedHashMapOfString$String = dart.constFn(collection.LinkedHashMap$(core.String, core.String)))(),
    MatchToString: () => (T$.MatchToString = dart.constFn(dart.fnType(core.String, [core.Match])))(),
    StringAndStringTovoid: () => (T$.StringAndStringTovoid = dart.constFn(dart.fnType(dart.void, [core.String, core.String])))(),
    IdentityMapOfString$Object: () => (T$.IdentityMapOfString$Object = dart.constFn(_js_helper.IdentityMap$(core.String, core.Object)))(),
    boolNTobool: () => (T$.boolNTobool = dart.constFn(dart.fnType(core.bool, [T$.boolN()])))(),
    VoidToRN: () => (T$.VoidToRN = dart.constFn(dart.gFnType(R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [__t$RN(), []];
    }, R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [T$.ObjectN()];
    })))(),
    dynamicAnddynamicToNever: () => (T$.dynamicAnddynamicToNever = dart.constFn(dart.fnType(dart.Never, [dart.dynamic, dart.dynamic])))(),
    ObjectNTobool: () => (T$.ObjectNTobool = dart.constFn(dart.fnType(core.bool, [T$.ObjectN()])))(),
    MethodChannelUserN: () => (T$.MethodChannelUserN = dart.constFn(dart.nullable(method_channel_user.MethodChannelUser)))(),
    ObjectToPigeonMultiFactorInfo: () => (T$.ObjectToPigeonMultiFactorInfo = dart.constFn(dart.fnType(messages$46pigeon.PigeonMultiFactorInfo, [core.Object])))(),
    PigeonMultiFactorInfoToMultiFactorInfo: () => (T$.PigeonMultiFactorInfoToMultiFactorInfo = dart.constFn(dart.fnType(platform_interface_multi_factor.MultiFactorInfo, [messages$46pigeon.PigeonMultiFactorInfo])))(),
    StreamControllerOfListOfint: () => (T$.StreamControllerOfListOfint = dart.constFn(async.StreamController$(T$.ListOfint())))(),
    SinkOfListOfint: () => (T$.SinkOfListOfint = dart.constFn(core.Sink$(T$.ListOfint())))(),
    intAndStringTovoid: () => (T$.intAndStringTovoid = dart.constFn(dart.fnType(dart.void, [core.int, core.String])))(),
    LinkedHashMapOfString$Object: () => (T$.LinkedHashMapOfString$Object = dart.constFn(collection.LinkedHashMap$(core.String, core.Object)))(),
    ObjectAndStackTraceTodynamic: () => (T$.ObjectAndStackTraceTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.Object, core.StackTrace])))(),
    __ToStream: () => (T$.__ToStream = dart.constFn(dart.fnType(async.Stream, [], {arguments: dart.dynamic, onError: T$.ObjectAndStackTraceTodynamic()}, {})))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T$.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 30000000
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: core.Object.prototype
      });
    },
    get C4() {
      return C[4] = dart.fn(firebase_core_web._createFromJsApp, T$.AppToFirebaseAppPlatform());
    },
    get C5() {
      return C[5] = dart.fn(firebase_core_web._handleException, T$.ObjectAndStackTraceToNever());
    },
    get C6() {
      return C[6] = dart.constMap(core.String, core.String, []);
    },
    get C7() {
      return C[7] = dart.constSet(core.String, ["mailto", "tel", "sms"]);
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.prototype,
        [_Enum__name]: "compact",
        [_Enum_index]: 1
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.prototype,
        [_Enum__name]: "normal",
        [_Enum_index]: 0
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.prototype,
        [_Enum__name]: "dark",
        [_Enum_index]: 1
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.prototype,
        [_Enum__name]: "light",
        [_Enum_index]: 0
      });
    },
    get C12() {
      return C[12] = dart.fn(firebase_core.FirebaseApp['_#_#tearOff'], T$.FirebaseAppPlatformToFirebaseApp());
    },
    get C13() {
      return C[13] = dart.fn(auth$.UserCredential['_#fromJsObject#tearOff'], T$.UserCredentialJsImplToUserCredential());
    },
    get C14() {
      return C[14] = dart.fn(auth$.ConfirmationResult['_#fromJsObject#tearOff'], T$.ConfirmationResultJsImplToConfirmationResult());
    },
    get C15() {
      return C[15] = dart.fn(auth$.IdTokenResult['_#_fromJsObject#tearOff'], T$.IdTokenResultImplToIdTokenResult());
    },
    get C17() {
      return C[17] = dart.fn(core.List['_#from#tearOff'], T$.Iterable__ToListOfE());
    },
    get C16() {
      return C[16] = dart.const(dart.gbind(C[17] || CT.C17, core.String));
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: types.Persistence.prototype,
        [_Enum__name]: "LOCAL",
        [_Enum_index]: 0
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: types.Persistence.prototype,
        [_Enum__name]: "INDEXED_DB",
        [_Enum_index]: 1
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: types.Persistence.prototype,
        [_Enum__name]: "SESSION",
        [_Enum_index]: 3
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: types.Persistence.prototype,
        [_Enum__name]: "NONE",
        [_Enum_index]: 2
      });
    },
    get C23() {
      return C[23] = dart.fn(multi_factor.MultiFactorInfo['_#fromJsObject#tearOff'], T$.TToMultiFactorInfoOfT());
    },
    get C22() {
      return C[22] = dart.const(dart.gbind(C[23] || CT.C23, dart.packageJSType("MultiFactorInfoJsImpl", false)));
    },
    get C24() {
      return C[24] = dart.fn(multi_factor.MultiFactorSession['_#fromJsObject#tearOff'], T$.MultiFactorSessionJsImplToMultiFactorSession());
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: T$.DefaultEqualityOfNever().prototype
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: equality.MapEquality.prototype,
        [MapEquality__valueEquality]: C[26] || CT.C26,
        [MapEquality__keyEquality]: C[26] || CT.C26
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: link.LinkTarget.prototype,
        [debugLabel$]: "defaultTarget"
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: link.LinkTarget.prototype,
        [debugLabel$]: "self"
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: link.LinkTarget.prototype,
        [debugLabel$]: "blank"
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: message_codecs.JSONMethodCodec.prototype
      });
    },
    get C31() {
      return C[31] = dart.constSet(T$.FactoryOfOneSequenceGestureRecognizer(), []);
    },
    get C32() {
      return C[32] = dart.fn(link$.LinkViewController._onGlobalClick, T$.MouseEventTovoid());
    },
    get C33() {
      return C[33] = dart.fn(link$.LinkViewController._viewFactory, T$.intToElement());
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: messages$46pigeon.ActionCodeInfoOperation.prototype,
        [_Enum__name]: "unknown",
        [_Enum_index]: 0
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: messages$46pigeon.ActionCodeInfoOperation.prototype,
        [_Enum__name]: "passwordReset",
        [_Enum_index]: 1
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: messages$46pigeon.ActionCodeInfoOperation.prototype,
        [_Enum__name]: "verifyEmail",
        [_Enum_index]: 2
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: messages$46pigeon.ActionCodeInfoOperation.prototype,
        [_Enum__name]: "recoverEmail",
        [_Enum_index]: 3
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: messages$46pigeon.ActionCodeInfoOperation.prototype,
        [_Enum__name]: "emailSignIn",
        [_Enum_index]: 4
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: messages$46pigeon.ActionCodeInfoOperation.prototype,
        [_Enum__name]: "verifyAndChangeEmail",
        [_Enum_index]: 5
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: messages$46pigeon.ActionCodeInfoOperation.prototype,
        [_Enum__name]: "revertSecondFactorAddition",
        [_Enum_index]: 6
      });
    },
    get C34() {
      return C[34] = dart.constList([C[35] || CT.C35, C[36] || CT.C36, C[37] || CT.C37, C[38] || CT.C38, C[39] || CT.C39, C[40] || CT.C40, C[41] || CT.C41], messages$46pigeon.ActionCodeInfoOperation);
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: messages$46pigeon._FirebaseAuthHostApiCodec.prototype
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: messages$46pigeon._FirebaseAuthUserHostApiCodec.prototype
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: messages$46pigeon._MultiFactorUserHostApiCodec.prototype
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: messages$46pigeon._MultiFactoResolverHostApiCodec.prototype
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: messages$46pigeon._GenerateInterfacesCodec.prototype
      });
    },
    get C47() {
      return C[47] = dart.constList([C[9] || CT.C9, C[8] || CT.C8], platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize);
    },
    get C48() {
      return C[48] = dart.constList([C[11] || CT.C11, C[10] || CT.C10], platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme);
    },
    get C49() {
      return C[49] = dart.constList([C[18] || CT.C18, C[19] || CT.C19, C[21] || CT.C21, C[20] || CT.C20], types.Persistence);
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: messages$46pigeon$._FirebaseCoreHostApiCodec.prototype
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: message_codecs.StandardMessageCodec.prototype
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: test_api._TestFirebaseCoreHostApiCodec.prototype
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: types$.PreferredLaunchMode.prototype,
        [_Enum__name]: "platformDefault",
        [_Enum_index]: 0
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: types$.PreferredLaunchMode.prototype,
        [_Enum__name]: "inAppWebView",
        [_Enum_index]: 1
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: types$.PreferredLaunchMode.prototype,
        [_Enum__name]: "externalApplication",
        [_Enum_index]: 2
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: types$.PreferredLaunchMode.prototype,
        [_Enum__name]: "externalNonBrowserApplication",
        [_Enum_index]: 3
      });
    },
    get C53() {
      return C[53] = dart.constList([C[54] || CT.C54, C[55] || CT.C55, C[56] || CT.C56, C[57] || CT.C57], types$.PreferredLaunchMode);
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: types$.InAppWebViewConfiguration.prototype,
        [headers$]: C[6] || CT.C6,
        [enableDomStorage$]: true,
        [enableJavaScript$]: true
      });
    },
    get C59() {
      return C[59] = dart.fn(exception$.convertPlatformException, T$.ObjectAndStackTrace__ToNever());
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: T$._ValueWrapperOfUserPlatform().prototype,
        [_ValueWrapper_value]: null
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [StandardMethodCodec_messageCodec]: C[51] || CT.C51
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [MethodChannel__binaryMessenger]: null,
        [MethodChannel_codec]: C[62] || CT.C62,
        [MethodChannel_name]: "plugins.flutter.io/firebase_auth"
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: chunked_coding.ChunkedCodingCodec.prototype
      });
    },
    get C64() {
      return C[64] = dart.constList(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], core.String);
    },
    get C65() {
      return C[65] = dart.constList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], core.String);
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [MethodChannel__binaryMessenger]: null,
        [MethodChannel_codec]: C[62] || CT.C62,
        [MethodChannel_name]: "plugins.flutter.io/url_launcher"
      });
    },
    get C67() {
      return C[67] = dart.fn(_flutterfire_internals._testException, T$.ObjectNTobool());
    },
    get C68() {
      return C[68] = dart.fn(messages$46pigeon.PigeonMultiFactorInfo.decode, T$.ObjectToPigeonMultiFactorInfo());
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "boundary"
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "size"
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "size before LF"
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "body"
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "body before CR"
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "body before LF"
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "end before CR"
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "end before LF"
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "end"
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: decoder.ChunkedCodingDecoder.prototype
      });
    },
    get C79() {
      return C[79] = dart.constList([], core.int);
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: encoder.ChunkedCodingEncoder.prototype
      });
    },
    get C81() {
      return C[81] = dart.const(new _js_helper.PrivateSymbol.new('_add', _add));
    },
    get C82() {
      return C[82] = dart.const(new _js_helper.PrivateSymbol.new('_head', _head$));
    },
    get C83() {
      return C[83] = dart.const(new _js_helper.PrivateSymbol.new('_writeToList', _writeToList));
    },
    get C84() {
      return C[84] = dart.const(new _js_helper.PrivateSymbol.new('_grow', _grow));
    },
    get C85() {
      return C[85] = dart.const(new _js_helper.PrivateSymbol.new('_preGrow', _preGrow));
    },
    get C86() {
      return C[86] = dart.const(new _js_helper.PrivateSymbol.new('_table', _table$));
    },
    get C87() {
      return C[87] = dart.const(new _js_helper.PrivateSymbol.new('_tail', _tail$));
    },
    get C88() {
      return C[88] = dart.const(new _js_helper.PrivateSymbol.new('_head=', _head_));
    },
    get C89() {
      return C[89] = dart.const(new _js_helper.PrivateSymbol.new('_table=', _table_));
    },
    get C90() {
      return C[90] = dart.const(new _js_helper.PrivateSymbol.new('_tail=', _tail_));
    }
  }, false);
  var C = Array(91).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.6.1/lib/firebase_auth_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.5/lib/plugin_platform_interface.dart",
    "package:plugin_platform_interface/plugin_platform_interface.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_firebase_auth.dart",
    "package:firebase_auth_web/firebase_auth_web.dart",
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart",
    "package:firebase_core_web/firebase_core_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.6.0/lib/src/firebase_core_web.dart",
    "package:url_launcher_platform_interface/src/url_launcher_platform.dart",
    "package:url_launcher_web/url_launcher_web.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_multi_factor.dart",
    "package:firebase_auth_web/src/firebase_auth_web_multi_factor.dart",
    "package:firebase_core/firebase_core.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_confirmation_result.dart",
    "package:firebase_auth_web/src/firebase_auth_web_confirmation_result.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.6.1/lib/src/firebase_auth_web_recaptcha_verifier_factory.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_recaptcha_verifier_factory.dart",
    "package:firebase_auth_web/src/firebase_auth_web_recaptcha_verifier_factory.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user.dart",
    "package:firebase_auth_web/src/firebase_auth_web_user.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user_credential.dart",
    "package:firebase_auth_web/src/firebase_auth_web_user_credential.dart",
    "package:firebase_core_web/src/interop/utils/js.dart",
    "package:firebase_auth_web/src/interop/auth.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.6.1/lib/src/interop/auth.dart",
    "package:firebase_auth_web/src/interop/multi_factor.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.8.0/lib/src/method_channel/method_channel_firebase.dart",
    "package:url_launcher_platform_interface/link.dart",
    "package:url_launcher_web/src/link.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/url_launcher_web-2.0.18/lib/src/link.dart",
    "package:firebase_auth_platform_interface/src/action_code_info.dart",
    "package:firebase_auth_platform_interface/src/action_code_settings.dart",
    "package:firebase_auth_platform_interface/src/additional_user_info.dart",
    "package:firebase_auth_platform_interface/src/auth_credential.dart",
    "package:firebase_auth_platform_interface/src/auth_provider.dart",
    "package:firebase_auth_platform_interface/src/firebase_auth_exception.dart",
    "package:firebase_auth_platform_interface/src/firebase_auth_multi_factor_exception.dart",
    "package:firebase_auth_platform_interface/src/id_token_result.dart",
    "package:firebase_auth_platform_interface/src/pigeon/messages.pigeon.dart",
    "package:firebase_auth_platform_interface/src/providers/apple_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/oauth.dart",
    "package:firebase_auth_platform_interface/src/providers/email_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/facebook_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/github_auth.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/providers/google_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/google_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/microsoft_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/phone_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/saml_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/twitter_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/yahoo_auth.dart",
    "package:firebase_auth_platform_interface/src/types.dart",
    "package:firebase_auth_platform_interface/src/user_info.dart",
    "package:firebase_auth_platform_interface/src/user_metadata.dart",
    "package:firebase_core_platform_interface/src/pigeon/messages.pigeon.dart",
    "package:firebase_core_platform_interface/src/pigeon/mocks.dart",
    "package:firebase_core_platform_interface/src/pigeon/test_api.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.8.0/lib/src/pigeon/test_api.dart",
    "package:firebase_core_web/src/interop/app.dart",
    "package:url_launcher_platform_interface/src/types.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/method_channel/method_channel_firebase_auth.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_firebase_auth.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_multi_factor.dart",
    "package:http_parser/src/authentication_challenge.dart",
    "package:http_parser/src/case_insensitive_map.dart",
    "package:http_parser/src/chunked_coding.dart",
    "package:http_parser/src/media_type.dart",
    "package:url_launcher_platform_interface/method_channel_url_launcher.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.3.4/lib/_flutterfire_internals.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user_credential.dart",
    "package:http_parser/src/chunked_coding/decoder.dart",
    "package:http_parser/src/chunked_coding/encoder.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_queue.dart",
    "package:typed_data/src/typed_queue.dart",
    "package:typed_data/src/typed_buffer.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T$.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T$.ListOfStringTodynamic().as(C[0] || CT.C0)(T$.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T$.dynamicToNull()));
      }
    }, T$.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T$.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T$.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T$.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T$.VoidToNull())});
    });
  };
  var loading = dart.privateName(main, "MyApp.loading");
  var stateSet = dart.privateName(main, "MyApp.stateSet");
  main.MyApp = class MyApp extends framework.StatelessWidget {
    get loading() {
      return this[loading];
    }
    set loading(value) {
      this[loading] = value;
    }
    get stateSet() {
      return this[stateSet];
    }
    set stateSet(value) {
      this[stateSet] = value;
    }
    build(context) {
      return new app.MaterialApp.new({debugShowCheckedModeBanner: false, home: new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({backgroundColor: colors.Colors.black.withOpacity(0.8), title: new text.Text.new("Average Marks Calculator"), actions: T$.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: new icon.Icon.new(icons.Icons.refresh), onPressed: dart.fn(() => {
                  dart.dsend(this, 'stateSet', [dart.fn(() => {
                      this.loading = true;
                    }, T$.VoidToNull())]);
                  T$.FutureOfNull().delayed(new core.Duration.new({seconds: 5}), dart.fn(() => {
                    dart.dsend(this, 'stateSet', [dart.fn(() => {
                        this.loading = false;
                      }, T$.VoidToNull())]);
                  }, T$.VoidToNull()));
                }, T$.VoidTovoid())})])}), body: new basic.Stack.new({children: T$.JSArrayOfWidget().of([new basic.Positioned.new({top: 0, bottom: 0, left: 0, right: 0, child: new basic.Builder.new({builder: dart.fn(context => {
                    let currentImageIndex = 0;
                    let setContext = null;
                    let imageUrls = T$.JSArrayOfString().of(["https://images.pexels.com/photos/13381062/pexels-photo-13381062.jpeg", "https://images.pexels.com/photos/13905748/pexels-photo-13905748.jpeg", "https://images.pexels.com/photos/12778064/pexels-photo-12778064.jpeg"]);
                    async.Timer.periodic(new core.Duration.new({seconds: 10}), dart.fn(timer => {
                      try {
                        currentImageIndex = (currentImageIndex + 1)[$modulo](imageUrls[$length]);
                        framework.Element.as(setContext).markNeedsBuild();
                      } catch (e$) {
                        let e = dart.getThrown(e$);
                        if (core.Object.is(e)) {
                        } else
                          throw e$;
                      }
                    }, T$.TimerTovoid()));
                    return new basic.StatefulBuilder.new({builder: dart.fn((context, setState) => {
                        setContext = context;
                        return new container.Container.new({color: colors.Colors.blue, child: new basic.IndexedStack.new({alignment: alignment.Alignment.center, index: currentImageIndex, children: T$.ListOfWidget().generate(imageUrls[$length], dart.fn(index => new basic.Center.new({child: new basic.SizedBox.expand({child: new transitions.FadeTransition.new({opacity: new (T$.AlwaysStoppedAnimationOfdouble()).new(index === currentImageIndex ? 1 : 0), child: new image.Image.network(imageUrls[$_get](index), {fit: box_fit.BoxFit.cover})})})}), T$.intToCenter()))})});
                      }, T$.BuildContextAndFnToContainer())});
                  }, T$.BuildContextToStatefulBuilder())})}), new basic.StatefulBuilder.new({builder: dart.fn((context, state) => {
                  this.stateSet = state;
                  if (this.loading) {
                    return new basic.Positioned.new({top: 0, bottom: 0, left: 0, right: 0, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new progress_indicator.CircularProgressIndicator.new(), new text.Text.new("Loading")])})});
                  }
                  return new main.AverageMarksCalculator.new();
                }, T$.BuildContextAndFnToWidget())})])})})});
    }
    static ['_#new#tearOff']() {
      return new main.MyApp.new();
    }
  };
  (main.MyApp.new = function() {
    this[loading] = false;
    this[stateSet] = null;
    main.MyApp.__proto__.new.call(this);
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  dart.setFieldSignature(main.MyApp, () => ({
    __proto__: dart.getFields(main.MyApp.__proto__),
    loading: dart.fieldType(core.bool),
    stateSet: dart.fieldType(dart.dynamic)
  }));
  main.AverageMarksCalculator = class AverageMarksCalculator extends framework.StatefulWidget {
    createState() {
      return new main._AverageMarksCalculatorState.new();
    }
    static ['_#new#tearOff']() {
      return new main.AverageMarksCalculator.new();
    }
  };
  (main.AverageMarksCalculator.new = function() {
    main.AverageMarksCalculator.__proto__.new.call(this);
    ;
  }).prototype = main.AverageMarksCalculator.prototype;
  dart.addTypeTests(main.AverageMarksCalculator);
  dart.addTypeCaches(main.AverageMarksCalculator);
  dart.setMethodSignature(main.AverageMarksCalculator, () => ({
    __proto__: dart.getMethods(main.AverageMarksCalculator.__proto__),
    createState: dart.fnType(main._AverageMarksCalculatorState, [])
  }));
  dart.setLibraryUri(main.AverageMarksCalculator, I[0]);
  var _selectedStudent = dart.privateName(main, "_selectedStudent");
  var _averageMarksResult = dart.privateName(main, "_averageMarksResult");
  var _calculateAverageMarks = dart.privateName(main, "_calculateAverageMarks");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  main._AverageMarksCalculatorState = class _AverageMarksCalculatorState extends framework.State$(main.AverageMarksCalculator) {
    [_calculateAverageMarks]() {
      this.setState(dart.fn(() => {
        if (this[_selectedStudent][$isNotEmpty]) {
          let marks = this.studentMarks[$_get](this[_selectedStudent]);
          for (let v of dart.nullCheck(marks)) {
            if (v < 0 || v > 100) {
              this[_averageMarksResult] = "0 <= v <= 100: failed!";
              return;
            }
          }
          if (marks[$length] !== "3") {
            let averageMarks = marks[$reduce](dart.fn((a, b) => a + b, T$.intAndintToint())) / marks[$length];
            this[_averageMarksResult] = averageMarks[$toStringAsFixed](2);
          } else {
            this[_averageMarksResult] = "length of marks array = 3: failed!";
          }
        } else {
          this[_averageMarksResult] = "Please select a student!";
        }
      }, T$.VoidTovoid()));
    }
    build(context) {
      return new basic.Padding.new({padding: C[1] || CT.C1, child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([this.buildStudentMarksTable(this.studentMarks), new container.Container.new({width: 400, child: new card.Card.new({color: colors.Colors.black.withOpacity(0.5), child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new (T$.DropdownButtonOfString()).new({dropdownColor: colors.Colors.black, value: this[_selectedStudent][$isNotEmpty] ? this[_selectedStudent] : null, hint: new text.Text.new("Select a student", {style: new text_style.TextStyle.new({color: colors.Colors.white})}), items: this.studentMarks[$keys][$map](T$.DropdownMenuItemOfString(), dart.fn(student => new (T$.DropdownMenuItemOfString()).new({value: student, child: new text.Text.new(student, {style: new text_style.TextStyle.new({color: colors.Colors.white})})}), T$.StringToDropdownMenuItemOfString()))[$toList](), onChanged: dart.fn(newValue => {
                        this.setState(dart.fn(() => {
                          let t1;
                          this[_selectedStudent] = (t1 = newValue, t1 == null ? "" : t1);
                        }, T$.VoidTovoid()));
                      }, T$.StringNTovoid())}), new basic.SizedBox.new({height: 16}), new elevated_button.ElevatedButton.new({onPressed: dart.bind(this, _calculateAverageMarks), child: new text.Text.new("Calculate Average Marks")}), new basic.SizedBox.new({height: 16}), new text.Text.new("Average Marks: " + this[_averageMarksResult], {style: new text_style.TextStyle.new({fontSize: 20, fontWeight: ui.FontWeight.bold, color: colors.Colors.white})})])})})})])})});
    }
    buildStudentMarksTable(studentMarks) {
      return new basic.Expanded.new({child: new scaffold.Scaffold.new({backgroundColor: colors.Colors.black.withOpacity(0.5), appBar: new app_bar.AppBar.new({backgroundColor: colors.Colors.black.withOpacity(0.8), title: new text.Text.new("Student Marks"), centerTitle: true}), body: new basic.Padding.new({padding: C[1] || CT.C1, child: new scroll_view.ListView.builder({itemCount: studentMarks[$length], itemBuilder: dart.fn((context, index) => {
                let studentName = studentMarks[$keys][$elementAt](index);
                let marks = dart.nullCheck(studentMarks[$_get](studentName));
                return new card.Card.new({elevation: 4, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(10)}), child: new list_tile.ListTile.new({contentPadding: new edge_insets.EdgeInsets.all(16), title: new text.Text.new(studentName, {style: new text_style.TextStyle.new({fontSize: 18, fontWeight: ui.FontWeight.bold, color: colors.Colors.indigo})}), subtitle: new basic.Wrap.new({spacing: 8, runSpacing: 8, children: (() => {
                        let t1 = T$.JSArrayOfWidget().of([]);
                        for (let mark of marks)
                          t1[$addAll](T$.JSArrayOfWidget().of([new container.Container.new({padding: new edge_insets.EdgeInsets.symmetric({horizontal: 12, vertical: 6}), decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.blue, borderRadius: new border_radius.BorderRadius.circular(20)}), child: new text.Text.new(dart.str(mark), {style: new text_style.TextStyle.new({color: colors.Colors.white, fontWeight: ui.FontWeight.bold, fontSize: 14})})})]));
                        return t1;
                      })()})})});
              }, T$.BuildContextAndintToCard())})})})});
    }
    static ['_#new#tearOff']() {
      return new main._AverageMarksCalculatorState.new();
    }
  };
  (main._AverageMarksCalculatorState.new = function() {
    this[_selectedStudent] = "";
    this[_averageMarksResult] = "";
    this.studentMarks = new (T$.IdentityMapOfString$ListOfint()).from(["Krishna", T$.JSArrayOfint().of([67, 68, 69]), "Arjun", T$.JSArrayOfint().of([70, 98, 63]), "Malika", T$.JSArrayOfint().of([52, 56, 60])]);
    main._AverageMarksCalculatorState.__proto__.new.call(this);
    ;
  }).prototype = main._AverageMarksCalculatorState.prototype;
  dart.addTypeTests(main._AverageMarksCalculatorState);
  dart.addTypeCaches(main._AverageMarksCalculatorState);
  dart.setMethodSignature(main._AverageMarksCalculatorState, () => ({
    __proto__: dart.getMethods(main._AverageMarksCalculatorState.__proto__),
    [_calculateAverageMarks]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    buildStudentMarksTable: dart.fnType(framework.Widget, [core.Map$(core.String, core.List$(core.int))])
  }));
  dart.setLibraryUri(main._AverageMarksCalculatorState, I[0]);
  dart.setFieldSignature(main._AverageMarksCalculatorState, () => ({
    __proto__: dart.getFields(main._AverageMarksCalculatorState.__proto__),
    [_selectedStudent]: dart.fieldType(core.String),
    [_averageMarksResult]: dart.fieldType(core.String),
    studentMarks: dart.fieldType(core.Map$(core.String, core.List$(core.int)))
  }));
  main.main = function main$0() {
    binding.runApp(new main.MyApp.new());
  };
  web_plugin_registrant.registerPlugins = function registerPlugins(pluginRegistrar = null) {
    let t2;
    let registrar = (t2 = pluginRegistrar, t2 == null ? plugin_registry.webPluginRegistrar : t2);
    firebase_auth_web.FirebaseAuthWeb.registerWith(registrar);
    firebase_core_web.FirebaseCoreWeb.registerWith(registrar);
    url_launcher_web.UrlLauncherPlugin.registerWith(registrar);
    registrar.registerMessageHandler();
  };
  var _initialized = dart.privateName(firebase_auth_web, "_initialized");
  var _persistence = dart.privateName(firebase_auth_web, "_persistence");
  var _webAuth = dart.privateName(firebase_auth_web, "_webAuth");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var appInstance$ = dart.privateName(platform_interface_firebase_auth, "FirebaseAuthPlatform.appInstance");
  var tenantId = dart.privateName(platform_interface_firebase_auth, "FirebaseAuthPlatform.tenantId");
  plugin_platform_interface.PlatformInterface = class PlatformInterface extends core.Object {
    static verify(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: true});
    }
    static verifyToken(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: false});
    }
    static _verify(instance, token, opts) {
      let preventConstObject = opts && 'preventConstObject' in opts ? opts.preventConstObject : null;
      if (plugin_platform_interface.MockPlatformInterfaceMixin.is(instance)) {
        let assertionsEnabled = false;
        if (!dart.fn(() => {
          assertionsEnabled = true;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 92, 14, "() {\n        assertionsEnabled = true;\n        return true;\n      }()");
        if (!assertionsEnabled) {
          dart.throw(new core.AssertionError.new("`MockPlatformInterfaceMixin` is not intended for use in release builds."));
        }
        return;
      }
      if (preventConstObject && plugin_platform_interface.PlatformInterface._instanceTokens._get(instance) === (C[3] || CT.C3)) {
        dart.throw(new core.AssertionError.new("`const Object()` cannot be used as the token."));
      }
      if (token !== plugin_platform_interface.PlatformInterface._instanceTokens._get(instance)) {
        dart.throw(new core.AssertionError.new("Platform interfaces must not be implemented with `implements`"));
      }
    }
  };
  (plugin_platform_interface.PlatformInterface.new = function(opts) {
    let token = opts && 'token' in opts ? opts.token : null;
    plugin_platform_interface.PlatformInterface._instanceTokens._set(this, token);
  }).prototype = plugin_platform_interface.PlatformInterface.prototype;
  dart.addTypeTests(plugin_platform_interface.PlatformInterface);
  dart.addTypeCaches(plugin_platform_interface.PlatformInterface);
  dart.setStaticMethodSignature(plugin_platform_interface.PlatformInterface, () => ['verify', 'verifyToken', '_verify']);
  dart.setLibraryUri(plugin_platform_interface.PlatformInterface, I[3]);
  dart.setStaticFieldSignature(plugin_platform_interface.PlatformInterface, () => ['_instanceTokens']);
  dart.defineLazy(plugin_platform_interface.PlatformInterface, {
    /*plugin_platform_interface.PlatformInterface._instanceTokens*/get _instanceTokens() {
      return new (T$.ExpandoOfObject()).new();
    }
  }, false);
  platform_interface_firebase_auth.FirebaseAuthPlatform = class FirebaseAuthPlatform extends plugin_platform_interface.PlatformInterface {
    get appInstance() {
      return this[appInstance$];
    }
    set appInstance(value) {
      super.appInstance = value;
    }
    get tenantId() {
      return this[tenantId];
    }
    set tenantId(value) {
      this[tenantId] = value;
    }
    get app() {
      if (this.appInstance == null) {
        return firebase_core.Firebase.app();
      }
      return dart.nullCheck(this.appInstance);
    }
    static ['_#instanceFor#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      return platform_interface_firebase_auth.FirebaseAuthPlatform.instanceFor({app: app, pluginConstants: pluginConstants, persistence: persistence});
    }
    static instanceFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      let currentUser = pluginConstants[$_get]("APP_CURRENT_USER");
      if (currentUser != null) {
        T$.ListOfObjectN().as(currentUser);
        currentUser = messages$46pigeon.PigeonUserDetails.decode(currentUser);
      }
      return platform_interface_firebase_auth.FirebaseAuthPlatform.instance.delegateFor({app: app, persistence: persistence}).setInitialValues({languageCode: T$.StringN().as(pluginConstants[$_get]("APP_LANGUAGE_CODE")), currentUser: T$.PigeonUserDetailsN().as(currentUser)});
    }
    static get instance() {
      platform_interface_firebase_auth.FirebaseAuthPlatform._instance == null ? platform_interface_firebase_auth.FirebaseAuthPlatform._instance = method_channel_firebase_auth.MethodChannelFirebaseAuth.instance : null;
      return dart.nullCheck(platform_interface_firebase_auth.FirebaseAuthPlatform._instance);
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_firebase_auth.FirebaseAuthPlatform._token);
      platform_interface_firebase_auth.FirebaseAuthPlatform._instance = instance;
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      dart.throw(new core.UnimplementedError.new("delegateFor() is not implemented"));
    }
    setInitialValues(opts) {
      let currentUser = opts && 'currentUser' in opts ? opts.currentUser : null;
      let languageCode = opts && 'languageCode' in opts ? opts.languageCode : null;
      dart.throw(new core.UnimplementedError.new("setInitialValues() is not implemented"));
    }
    get currentUser() {
      dart.throw(new core.UnimplementedError.new("get.currentUser is not implemented"));
    }
    set currentUser(userPlatform) {
      dart.throw(new core.UnimplementedError.new("set.currentUser is not implemented"));
    }
    get languageCode() {
      dart.throw(new core.UnimplementedError.new("languageCode is not implemented"));
    }
    sendAuthChangesEvent(appName, userPlatform) {
      dart.throw(new core.UnimplementedError.new("sendAuthChangesEvent() is not implemented"));
    }
    useAuthEmulator(host, port) {
      dart.throw(new core.UnimplementedError.new("useAuthEmulator() is not implemented"));
    }
    applyActionCode(code) {
      dart.throw(new core.UnimplementedError.new("applyActionCode() is not implemented"));
    }
    checkActionCode(code) {
      dart.throw(new core.UnimplementedError.new("checkActionCode() is not implemented"));
    }
    confirmPasswordReset(code, newPassword) {
      dart.throw(new core.UnimplementedError.new("confirmPasswordReset() is not implemented"));
    }
    createUserWithEmailAndPassword(email, password) {
      dart.throw(new core.UnimplementedError.new("createUserWithEmailAndPassword() is not implemented"));
    }
    fetchSignInMethodsForEmail(email) {
      dart.throw(new core.UnimplementedError.new("fetchSignInMethodsForEmail() is not implemented"));
    }
    getRedirectResult() {
      dart.throw(new core.UnimplementedError.new("getRedirectResult() is not implemented"));
    }
    isSignInWithEmailLink(emailLink) {
      return (emailLink[$contains]("mode=signIn") || emailLink[$contains]("mode%3DsignIn")) && (emailLink[$contains]("oobCode=") || emailLink[$contains]("oobCode%3D"));
    }
    authStateChanges() {
      dart.throw(new core.UnimplementedError.new("authStateChanges() is not implemented"));
    }
    idTokenChanges() {
      dart.throw(new core.UnimplementedError.new("idTokenChanges() is not implemented"));
    }
    userChanges() {
      dart.throw(new core.UnimplementedError.new("userChanges() is not implemented"));
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      dart.throw(new core.UnimplementedError.new("sendPasswordResetEmail() is not implemented"));
    }
    sendSignInLinkToEmail(email, actionCodeSettings) {
      dart.throw(new core.UnimplementedError.new("sendSignInLinkToEmail() is not implemented"));
    }
    setLanguageCode(languageCode) {
      dart.throw(new core.UnimplementedError.new("setLanguageCode() is not implemented"));
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : false;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      dart.throw(new core.UnimplementedError.new("setSettings() is not implemented"));
    }
    setPersistence(persistence) {
      return async.async(dart.void, function* setPersistence() {
        dart.throw(new core.UnimplementedError.new("setPersistence() is not implemented"));
      });
    }
    signInAnonymously() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInAnonymously() {
        dart.throw(new core.UnimplementedError.new("signInAnonymously() is not implemented"));
      });
    }
    signInWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithCredential() {
        dart.throw(new core.UnimplementedError.new("signInWithCredential() is not implemented"));
      });
    }
    signInWithCustomToken(token) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithCustomToken() {
        dart.throw(new core.UnimplementedError.new("signInWithCustomToken() is not implemented"));
      });
    }
    signInWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithEmailAndPassword() {
        dart.throw(new core.UnimplementedError.new("signInWithEmailAndPassword() is not implemented"));
      });
    }
    signInWithEmailLink(email, emailLink) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithEmailLink() {
        dart.throw(new core.UnimplementedError.new("signInWithEmailLink() is not implemented"));
      });
    }
    signInWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithProvider() {
        dart.throw(new core.UnimplementedError.new("signInWithProvider() is not implemented"));
      });
    }
    signInWithPhoneNumber(phoneNumber, applicationVerifier) {
      return async.async(platform_interface_confirmation_result.ConfirmationResultPlatform, function* signInWithPhoneNumber() {
        dart.throw(new core.UnimplementedError.new("signInWithPhoneNumber() is not implemented"));
      });
    }
    signInWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithPopup() is not implemented"));
    }
    signInWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithRedirect() is not implemented"));
    }
    signOut() {
      return async.async(dart.void, function* signOut() {
        dart.throw(new core.UnimplementedError.new("signOut() is not implemented"));
      });
    }
    verifyPasswordResetCode(code) {
      dart.throw(new core.UnimplementedError.new("verifyPasswordResetCode() is not implemented"));
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[2] || CT.C2;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let multiFactorSession = opts && 'multiFactorSession' in opts ? opts.multiFactorSession : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      dart.throw(new core.UnimplementedError.new("verifyPhoneNumber() is not implemented"));
    }
  };
  (platform_interface_firebase_auth.FirebaseAuthPlatform.new = function(opts) {
    let appInstance = opts && 'appInstance' in opts ? opts.appInstance : null;
    this[tenantId] = null;
    this[appInstance$] = appInstance;
    platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__.new.call(this, {token: platform_interface_firebase_auth.FirebaseAuthPlatform._token});
    ;
  }).prototype = platform_interface_firebase_auth.FirebaseAuthPlatform.prototype;
  dart.addTypeTests(platform_interface_firebase_auth.FirebaseAuthPlatform);
  dart.addTypeCaches(platform_interface_firebase_auth.FirebaseAuthPlatform);
  dart.setMethodSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    delegateFor: dart.fnType(platform_interface_firebase_auth.FirebaseAuthPlatform, [], {persistence: dart.nullable(types.Persistence)}, {app: firebase_core.FirebaseApp}),
    setInitialValues: dart.fnType(platform_interface_firebase_auth.FirebaseAuthPlatform, [], {currentUser: dart.nullable(messages$46pigeon.PigeonUserDetails), languageCode: dart.nullable(core.String)}, {}),
    sendAuthChangesEvent: dart.fnType(dart.void, [core.String, dart.nullable(platform_interface_user.UserPlatform)]),
    useAuthEmulator: dart.fnType(async.Future$(dart.void), [core.String, core.int]),
    applyActionCode: dart.fnType(async.Future$(dart.void), [core.String]),
    checkActionCode: dart.fnType(async.Future$(action_code_info.ActionCodeInfo), [core.String]),
    confirmPasswordReset: dart.fnType(async.Future$(dart.void), [core.String, core.String]),
    createUserWithEmailAndPassword: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String, core.String]),
    fetchSignInMethodsForEmail: dart.fnType(async.Future$(core.List$(core.String)), [core.String]),
    getRedirectResult: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), []),
    isSignInWithEmailLink: dart.fnType(core.bool, [core.String]),
    authStateChanges: dart.fnType(async.Stream$(dart.nullable(platform_interface_user.UserPlatform)), []),
    idTokenChanges: dart.fnType(async.Stream$(dart.nullable(platform_interface_user.UserPlatform)), []),
    userChanges: dart.fnType(async.Stream$(dart.nullable(platform_interface_user.UserPlatform)), []),
    sendPasswordResetEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)]),
    sendSignInLinkToEmail: dart.fnType(async.Future$(dart.void), [core.String, action_code_settings.ActionCodeSettings]),
    setLanguageCode: dart.fnType(async.Future$(dart.void), [dart.nullable(core.String)]),
    setSettings: dart.fnType(async.Future$(dart.void), [], {appVerificationDisabledForTesting: core.bool, forceRecaptchaFlow: dart.nullable(core.bool), phoneNumber: dart.nullable(core.String), smsCode: dart.nullable(core.String), userAccessGroup: dart.nullable(core.String)}, {}),
    setPersistence: dart.fnType(async.Future$(dart.void), [types.Persistence]),
    signInAnonymously: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), []),
    signInWithCredential: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_credential.AuthCredential]),
    signInWithCustomToken: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String]),
    signInWithEmailAndPassword: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String, core.String]),
    signInWithEmailLink: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String, core.String]),
    signInWithProvider: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    signInWithPhoneNumber: dart.fnType(async.Future$(platform_interface_confirmation_result.ConfirmationResultPlatform), [core.String, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform]),
    signInWithPopup: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    signInWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider.AuthProvider]),
    signOut: dart.fnType(async.Future$(dart.void), []),
    verifyPasswordResetCode: dart.fnType(async.Future$(core.String), [core.String]),
    verifyPhoneNumber: dart.fnType(async.Future$(dart.void), [], {autoRetrievedSmsCodeForTesting: dart.nullable(core.String), forceResendingToken: dart.nullable(core.int), multiFactorInfo: dart.nullable(platform_interface_multi_factor.PhoneMultiFactorInfo), multiFactorSession: dart.nullable(platform_interface_multi_factor.MultiFactorSession), phoneNumber: dart.nullable(core.String), timeout: core.Duration}, {codeAutoRetrievalTimeout: dart.fnType(dart.void, [core.String]), codeSent: dart.fnType(dart.void, [core.String, dart.nullable(core.int)]), verificationCompleted: dart.fnType(dart.void, [phone_auth.PhoneAuthCredential]), verificationFailed: dart.fnType(dart.void, [firebase_auth_exception.FirebaseAuthException])})
  }));
  dart.setStaticMethodSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['instanceFor']);
  dart.setGetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    app: firebase_core.FirebaseApp,
    currentUser: dart.nullable(platform_interface_user.UserPlatform),
    languageCode: dart.nullable(core.String)
  }));
  dart.setSetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getSetters(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    currentUser: dart.nullable(platform_interface_user.UserPlatform)
  }));
  dart.setStaticGetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_firebase_auth.FirebaseAuthPlatform, I[4]);
  dart.setFieldSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getFields(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    appInstance: dart.finalFieldType(dart.nullable(firebase_core.FirebaseApp)),
    tenantId: dart.fieldType(dart.nullable(core.String))
  }));
  dart.setStaticFieldSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['_token', '_instance']);
  dart.defineLazy(platform_interface_firebase_auth.FirebaseAuthPlatform, {
    /*platform_interface_firebase_auth.FirebaseAuthPlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*platform_interface_firebase_auth.FirebaseAuthPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {}
  }, false);
  firebase_auth_web.FirebaseAuthWeb = class FirebaseAuthWeb extends platform_interface_firebase_auth.FirebaseAuthPlatform {
    static ['_#_#tearOff']() {
      return new firebase_auth_web.FirebaseAuthWeb.__();
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      return new firebase_auth_web.FirebaseAuthWeb.new({app: app, persistence: persistence});
    }
    static registerWith(registrar) {
      firebase_core_web.FirebaseCoreWeb.registerService("auth", {ensurePluginInitialized: dart.fn(firebaseApp => async.async(dart.void, function*() {
          let authDelegate = auth$.getAuthInstance(firebaseApp);
          if (html.window[$location].hostname === "localhost" && true) {
            let emulatorOrigin = html.window[$sessionStorage][$_get](firebase_auth_web.getOriginName(firebaseApp.name));
            if (emulatorOrigin != null) {
              try {
                authDelegate.useAuthEmulator(emulatorOrigin);
                core.print("Using previously configured Auth emulator at " + dart.str(emulatorOrigin) + " for " + firebaseApp.name + " \nTo switch back to production, restart your app with the emulator turned off.");
              } catch (e$) {
                let e = dart.getThrown(e$);
                if (core.Object.is(e)) {
                  if (e[$toString]()[$contains]("sooner")) {
                    core.print("Auth emulator is already configured at " + dart.str(emulatorOrigin) + " for " + firebaseApp.name + " and kept across hot reload.\nTo switch back to production, restart your app with the emulator turned off.");
                  } else {
                    dart.rethrow(e$);
                  }
                } else
                  throw e$;
              }
            }
          }
          yield authDelegate.onWaitInitState();
        }), T$.AppToFutureOfvoid())});
      platform_interface_firebase_auth.FirebaseAuthPlatform.instance = firebase_auth_web.FirebaseAuthWeb.instance;
      platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.instance = new firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.new();
      platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.instance = firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.instance;
    }
    static get instance() {
      return new firebase_auth_web.FirebaseAuthWeb.__();
    }
    get delegate() {
      this[_webAuth] == null ? this[_webAuth] = auth$.getAuthInstance(core$.app(this.app.name), {persistence: this[_persistence]}) : null;
      return dart.nullCheck(this[_webAuth]);
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      return new firebase_auth_web.FirebaseAuthWeb.new({app: app, persistence: persistence});
    }
    setInitialValues(opts) {
      let currentUser = opts && 'currentUser' in opts ? opts.currentUser : null;
      let languageCode = opts && 'languageCode' in opts ? opts.languageCode : null;
      return this;
    }
    get currentUser() {
      let webCurrentUser = this.delegate.currentUser;
      if (webCurrentUser == null) {
        return null;
      }
      return new firebase_auth_web_user.UserWeb.new(this, new firebase_auth_web_multi_factor.MultiFactorWeb.new(this, multi_factor.multiFactor(dart.nullCheck(this.delegate.currentUser))), dart.nullCheck(this.delegate.currentUser), this[_webAuth]);
    }
    set currentUser(value) {
      super.currentUser = value;
    }
    get tenantId() {
      return this.delegate.tenantId;
    }
    set tenantId(tenantId) {
      this.delegate.tenantId = tenantId;
    }
    sendAuthChangesEvent(appName, userPlatform) {
      if (!(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[$_get](appName) != null)) dart.assertFailed(null, I[1], 199, 12, "_userChangesListeners[appName] != null");
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[$_get](appName)).add(userPlatform);
    }
    applyActionCode(code) {
      return async.async(dart.void, (function* applyActionCode() {
        try {
          yield this.delegate.applyActionCode(code);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    checkActionCode(code) {
      return async.async(action_code_info.ActionCodeInfo, (function* checkActionCode() {
        try {
          return dart.nullCheck(web_utils.convertWebActionCodeInfo(yield this.delegate.checkActionCode(code)));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    confirmPasswordReset(code, newPassword) {
      return async.async(dart.void, (function* confirmPasswordReset() {
        try {
          yield this.delegate.confirmPasswordReset(code, newPassword);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    createUserWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* createUserWithEmailAndPassword() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.createUserWithEmailAndPassword(email, password), this[_webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return async.async(T$.ListOfString(), (function* fetchSignInMethodsForEmail() {
        try {
          return yield this.delegate.fetchSignInMethodsForEmail(email);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getRedirectResult() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* getRedirectResult() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.getRedirectResult(), this[_webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    authStateChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* authStateChanges(stream) {
        yield this[_initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    idTokenChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* idTokenChanges(stream) {
        yield this[_initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    userChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* userChanges(stream) {
        yield this[_initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      return async.async(dart.void, (function* sendPasswordResetEmail() {
        try {
          yield this.delegate.sendPasswordResetEmail(email, web_utils.convertPlatformActionCodeSettings(actionCodeSettings));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendSignInLinkToEmail(email, actionCodeSettings = null) {
      return async.async(dart.void, (function* sendSignInLinkToEmail() {
        try {
          yield this.delegate.sendSignInLinkToEmail(email, web_utils.convertPlatformActionCodeSettings(actionCodeSettings));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    get languageCode() {
      return this.delegate.languageCode;
    }
    setLanguageCode(languageCode) {
      return async.async(dart.void, (function* setLanguageCode() {
        this.delegate.languageCode = languageCode;
      }).bind(this));
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : null;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      return async.async(dart.void, (function* setSettings() {
        this.delegate.settings.appVerificationDisabledForTesting = appVerificationDisabledForTesting;
      }).bind(this));
    }
    setPersistence(persistence) {
      return async.async(dart.void, (function* setPersistence() {
        try {
          return this.delegate.setPersistence(persistence);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInAnonymously() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInAnonymously() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInAnonymously(), this[_webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCredential() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithCredential(dart.nullCheck(web_utils.convertPlatformCredential(credential))), this[_webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCustomToken(token) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCustomToken() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithCustomToken(token), this[_webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailAndPassword() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithEmailAndPassword(email, password), this[_webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailLink(email, emailLink) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailLink() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithEmailLink(email, emailLink), this[_webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPhoneNumber(phoneNumber, applicationVerifier) {
      return async.async(platform_interface_confirmation_result.ConfirmationResultPlatform, (function* signInWithPhoneNumber() {
        try {
          let verifier = auth$.RecaptchaVerifier.as(applicationVerifier.delegate);
          return new firebase_auth_web_confirmation_result.ConfirmationResultWeb.new(this, yield this.delegate.signInWithPhoneNumber(phoneNumber, verifier), this[_webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPopup(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithPopup() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithPopup(web_utils.convertPlatformAuthProvider(provider)), this[_webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithRedirect(provider) {
      return async.async(dart.void, (function* signInWithRedirect() {
        try {
          return this.delegate.signInWithRedirect(web_utils.convertPlatformAuthProvider(provider));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signOut() {
      return async.async(dart.void, (function* signOut() {
        try {
          yield this.delegate.signOut();
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    useAuthEmulator(host, port) {
      return async.async(dart.void, (function* useAuthEmulator() {
        try {
          let emulatorOrigin = html.window[$sessionStorage][$_get](firebase_auth_web.getOriginName(this.delegate.app.name));
          let origin = "http://" + host + ":" + dart.str(port);
          if (origin === emulatorOrigin) {
            return;
          }
          this.delegate.useAuthEmulator(origin);
          {
            html.window[$sessionStorage][$_set](firebase_auth_web.getOriginName(this.delegate.app.name), origin);
          }
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            if (dart.packageJSType("firebase_auth.Error", false).is(e)) {
              let code = e.code;
              if (code !== "auth/emulator-config-failed") {
                dart.throw(web_utils.getFirebaseAuthException(e));
              }
            } else {
              dart.rethrow(e$);
            }
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPasswordResetCode(code) {
      return async.async(core.String, (function* verifyPasswordResetCode() {
        try {
          return yield this.delegate.verifyPasswordResetCode(code);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[2] || CT.C2;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let multiFactorSession = opts && 'multiFactorSession' in opts ? opts.multiFactorSession : null;
      return async.async(dart.void, (function* verifyPhoneNumber() {
        let t23;
        try {
          let data = null;
          if (multiFactorSession != null) {
            let _webMultiFactorSession = firebase_auth_web_multi_factor.MultiFactorSessionWeb.as(multiFactorSession);
            if (multiFactorInfo != null) {
              data = new (T$.IdentityMapOfString$dynamic()).from(["multiFactorUid", multiFactorInfo.uid, "session", _webMultiFactorSession.webSession.jsObject]);
            } else {
              data = new (T$.IdentityMapOfString$dynamic()).from(["phoneNumber", phoneNumber, "session", _webMultiFactorSession.webSession.jsObject]);
            }
          }
          let phoneOptions = dart.nullCheck((t23 = data, t23 == null ? phoneNumber : t23));
          let provider = auth$.PhoneAuthProvider.new(this[_webAuth]);
          let verifier = new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new({auth: this}).delegate;
          let verificationId = (yield provider.verifyPhoneNumber(utils.jsify(phoneOptions, dart.fn(object => object, T$.ObjectNToObjectN())), verifier));
          codeSent(verificationId, null);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            verificationFailed(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web.FirebaseAuthWeb.__ = function() {
    this[_initialized] = T$.CompleterOfvoid().new();
    this[_persistence] = null;
    this[_webAuth] = null;
    firebase_auth_web.FirebaseAuthWeb.__proto__.new.call(this, {appInstance: null});
    ;
  }).prototype = firebase_auth_web.FirebaseAuthWeb.prototype;
  (firebase_auth_web.FirebaseAuthWeb.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    let persistence = opts && 'persistence' in opts ? opts.persistence : null;
    this[_initialized] = T$.CompleterOfvoid().new();
    this[_persistence] = null;
    this[_webAuth] = null;
    firebase_auth_web.FirebaseAuthWeb.__proto__.new.call(this, {appInstance: app});
    this[_persistence] = persistence;
    firebase_auth_web.FirebaseAuthWeb._userChangesListeners[$_set](app.name, T$.StreamControllerOfUserPlatformN().broadcast());
    firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[$_set](app.name, T$.StreamControllerOfUserPlatformN().broadcast());
    firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[$_set](app.name, T$.StreamControllerOfUserPlatformN().broadcast());
    this.delegate.onAuthStateChanged.map(T$.UserWebN(), dart.fn(webUser => {
      if (!this[_initialized].isCompleted) {
        this[_initialized].complete();
      }
      if (webUser == null) {
        return null;
      } else {
        return new firebase_auth_web_user.UserWeb.new(this, new firebase_auth_web_multi_factor.MultiFactorWeb.new(this, multi_factor.multiFactor(webUser)), webUser, this[_webAuth]);
      }
    }, T$.UserNToUserWebN())).listen(dart.fn(webUser => {
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[$_get](app.name)).add(webUser);
    }, T$.UserWebNTovoid()));
    this.delegate.onIdTokenChanged.map(T$.UserWebN(), dart.fn(webUser => {
      if (webUser == null) {
        return null;
      } else {
        return new firebase_auth_web_user.UserWeb.new(this, new firebase_auth_web_multi_factor.MultiFactorWeb.new(this, multi_factor.multiFactor(webUser)), webUser, this[_webAuth]);
      }
    }, T$.UserNToUserWebN())).listen(dart.fn(webUser => {
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[$_get](app.name)).add(webUser);
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[$_get](app.name)).add(webUser);
    }, T$.UserWebNTovoid()));
  }).prototype = firebase_auth_web.FirebaseAuthWeb.prototype;
  dart.addTypeTests(firebase_auth_web.FirebaseAuthWeb);
  dart.addTypeCaches(firebase_auth_web.FirebaseAuthWeb);
  dart.setMethodSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getMethods(firebase_auth_web.FirebaseAuthWeb.__proto__),
    setInitialValues: dart.fnType(firebase_auth_web.FirebaseAuthWeb, [], {currentUser: dart.nullable(messages$46pigeon.PigeonUserDetails), languageCode: dart.nullable(core.String)}, {}),
    sendSignInLinkToEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)]),
    setSettings: dart.fnType(async.Future$(dart.void), [], {appVerificationDisabledForTesting: dart.nullable(core.bool), forceRecaptchaFlow: dart.nullable(core.bool), phoneNumber: dart.nullable(core.String), smsCode: dart.nullable(core.String), userAccessGroup: dart.nullable(core.String)}, {})
  }));
  dart.setStaticMethodSignature(firebase_auth_web.FirebaseAuthWeb, () => ['registerWith']);
  dart.setGetterSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getGetters(firebase_auth_web.FirebaseAuthWeb.__proto__),
    delegate: auth$.Auth,
    tenantId: dart.nullable(core.String),
    languageCode: core.String
  }));
  dart.setSetterSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getSetters(firebase_auth_web.FirebaseAuthWeb.__proto__),
    tenantId: dart.nullable(core.String)
  }));
  dart.setStaticGetterSignature(firebase_auth_web.FirebaseAuthWeb, () => ['instance']);
  dart.setLibraryUri(firebase_auth_web.FirebaseAuthWeb, I[5]);
  dart.setFieldSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web.FirebaseAuthWeb.__proto__),
    [_initialized]: dart.fieldType(async.Completer$(dart.void)),
    [_persistence]: dart.fieldType(dart.nullable(types.Persistence)),
    [_webAuth]: dart.fieldType(dart.nullable(auth$.Auth))
  }));
  dart.setStaticFieldSignature(firebase_auth_web.FirebaseAuthWeb, () => ['_authStateChangesListeners', '_idTokenChangesListeners', '_userChangesListeners']);
  dart.defineLazy(firebase_auth_web.FirebaseAuthWeb, {
    /*firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners*/get _authStateChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _authStateChangesListeners(value) {},
    /*firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners*/get _idTokenChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _idTokenChangesListeners(value) {},
    /*firebase_auth_web.FirebaseAuthWeb._userChangesListeners*/get _userChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _userChangesListeners(value) {}
  }, false);
  firebase_auth_web.getOriginName = function getOriginName(appName) {
    return appName + "-firebaseEmulatorOrigin";
  };
  var _isAutomaticDataCollectionEnabled = dart.privateName(firebase_core_web, "_isAutomaticDataCollectionEnabled");
  var name$ = dart.privateName(firebase_core_platform_interface, "FirebaseAppPlatform.name");
  var options$ = dart.privateName(firebase_core_platform_interface, "FirebaseAppPlatform.options");
  var _isDefault = dart.privateName(firebase_core_platform_interface, "_isDefault");
  firebase_core_platform_interface.FirebaseAppPlatform = class FirebaseAppPlatform extends plugin_platform_interface.PlatformInterface {
    get name() {
      return this[name$];
    }
    set name(value) {
      super.name = value;
    }
    get options() {
      return this[options$];
    }
    set options(value) {
      super.options = value;
    }
    static ['_#new#tearOff'](name, options) {
      return new firebase_core_platform_interface.FirebaseAppPlatform.new(name, options);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, firebase_core_platform_interface.FirebaseAppPlatform._token);
    }
    get [_isDefault]() {
      return this.name === "[DEFAULT]";
    }
    get isAutomaticDataCollectionEnabled() {
      dart.throw(new core.UnimplementedError.new("isAutomaticDataCollectionEnabled has not been implemented."));
    }
    delete() {
      return async.async(dart.void, function* $delete() {
        dart.throw(new core.UnimplementedError.new("delete() has not been implemented."));
      });
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return async.async(dart.void, function* setAutomaticDataCollectionEnabled() {
        dart.throw(new core.UnimplementedError.new("setAutomaticDataCollectionEnabled() has not been implemented."));
      });
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return async.async(dart.void, function* setAutomaticResourceManagementEnabled() {
        dart.throw(new core.UnimplementedError.new("setAutomaticResourceManagementEnabled() has not been implemented."));
      });
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseAppPlatform.is(other)) return false;
      return other.name === this.name && other.options._equals(this.options);
    }
    get hashCode() {
      return core.Object.hash(this.name, this.options);
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core_platform_interface.FirebaseAppPlatform)) + "(" + this.name + ")";
    }
  };
  (firebase_core_platform_interface.FirebaseAppPlatform.new = function(name, options) {
    this[name$] = name;
    this[options$] = options;
    firebase_core_platform_interface.FirebaseAppPlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebaseAppPlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebaseAppPlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseAppPlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseAppPlatform);
  dart.setMethodSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.bool])
  }));
  dart.setStaticMethodSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ['verify']);
  dart.setGetterSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    [_isDefault]: core.bool,
    isAutomaticDataCollectionEnabled: core.bool
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseAppPlatform, I[6]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    name: dart.finalFieldType(core.String),
    options: dart.finalFieldType(firebase_core_platform_interface.FirebaseOptions)
  }));
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ['_token']);
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseAppPlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseAppPlatform, ['hashCode']);
  dart.defineLazy(firebase_core_platform_interface.FirebaseAppPlatform, {
    /*firebase_core_platform_interface.FirebaseAppPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_core_web.FirebaseAppWeb = class FirebaseAppWeb extends firebase_core_platform_interface.FirebaseAppPlatform {
    static ['_#_#tearOff'](name, options) {
      return new firebase_core_web.FirebaseAppWeb.__(name, options);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        yield core$.app(this.name).delete();
      }).bind(this));
    }
    get isAutomaticDataCollectionEnabled() {
      return this[_isAutomaticDataCollectionEnabled];
    }
    setAutomaticDataCollectionEnabled(enabled) {
      this[_isAutomaticDataCollectionEnabled] = enabled;
      return T$.FutureOfvoid().value();
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return T$.FutureOfvoid().value();
    }
  };
  (firebase_core_web.FirebaseAppWeb.__ = function(name, options) {
    this[_isAutomaticDataCollectionEnabled] = false;
    firebase_core_web.FirebaseAppWeb.__proto__.new.call(this, name, options);
    ;
  }).prototype = firebase_core_web.FirebaseAppWeb.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseAppWeb);
  dart.addTypeCaches(firebase_core_web.FirebaseAppWeb);
  dart.setLibraryUri(firebase_core_web.FirebaseAppWeb, I[7]);
  dart.setFieldSignature(firebase_core_web.FirebaseAppWeb, () => ({
    __proto__: dart.getFields(firebase_core_web.FirebaseAppWeb.__proto__),
    [_isAutomaticDataCollectionEnabled]: dart.fieldType(core.bool)
  }));
  var name$0 = dart.privateName(firebase_core_web, "FirebaseWebService.name");
  var override$ = dart.privateName(firebase_core_web, "FirebaseWebService.override");
  var ensurePluginInitialized$ = dart.privateName(firebase_core_web, "FirebaseWebService.ensurePluginInitialized");
  firebase_core_web.FirebaseWebService = class FirebaseWebService extends core.Object {
    get name() {
      return this[name$0];
    }
    set name(value) {
      this[name$0] = value;
    }
    get override() {
      return this[override$];
    }
    set override(value) {
      this[override$] = value;
    }
    get ensurePluginInitialized() {
      return this[ensurePluginInitialized$];
    }
    set ensurePluginInitialized(value) {
      this[ensurePluginInitialized$] = value;
    }
    static ['_#_#tearOff'](name, opts) {
      let override = opts && 'override' in opts ? opts.override : null;
      let ensurePluginInitialized = opts && 'ensurePluginInitialized' in opts ? opts.ensurePluginInitialized : null;
      return new firebase_core_web.FirebaseWebService.__(name, {override: override, ensurePluginInitialized: ensurePluginInitialized});
    }
  };
  (firebase_core_web.FirebaseWebService.__ = function(name, opts) {
    let override = opts && 'override' in opts ? opts.override : null;
    let ensurePluginInitialized = opts && 'ensurePluginInitialized' in opts ? opts.ensurePluginInitialized : null;
    this[name$0] = name;
    this[override$] = override;
    this[ensurePluginInitialized$] = ensurePluginInitialized;
    ;
  }).prototype = firebase_core_web.FirebaseWebService.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseWebService);
  dart.addTypeCaches(firebase_core_web.FirebaseWebService);
  dart.setLibraryUri(firebase_core_web.FirebaseWebService, I[7]);
  dart.setFieldSignature(firebase_core_web.FirebaseWebService, () => ({
    __proto__: dart.getFields(firebase_core_web.FirebaseWebService.__proto__),
    name: dart.fieldType(core.String),
    override: dart.fieldType(dart.nullable(core.String)),
    ensurePluginInitialized: dart.fieldType(dart.nullable(dart.fnType(async.Future$(dart.void), [app$.App])))
  }));
  var _defaultTrustedPolicyName = dart.privateName(firebase_core_web, "_defaultTrustedPolicyName");
  var _ignoredServiceScripts = dart.privateName(firebase_core_web, "_ignoredServiceScripts");
  var _initializeCore = dart.privateName(firebase_core_web, "_initializeCore");
  firebase_core_platform_interface.FirebasePlatform = class FirebasePlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      return firebase_core_platform_interface.FirebasePlatform._instance;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, firebase_core_platform_interface.FirebasePlatform._token);
      firebase_core_platform_interface.FirebasePlatform._instance = instance;
    }
    get apps() {
      dart.throw(new core.UnimplementedError.new("apps has not been implemented."));
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      dart.throw(new core.UnimplementedError.new("initializeApp() has not been implemented."));
    }
    app(name = "[DEFAULT]") {
      dart.throw(new core.UnimplementedError.new("app() has not been implemented."));
    }
  };
  (firebase_core_platform_interface.FirebasePlatform.new = function() {
    firebase_core_platform_interface.FirebasePlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebasePlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebasePlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebasePlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebasePlatform);
  dart.setMethodSignature(firebase_core_platform_interface.FirebasePlatform, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.FirebasePlatform.__proto__),
    initializeApp: dart.fnType(async.Future$(firebase_core_platform_interface.FirebaseAppPlatform), [], {name: dart.nullable(core.String), options: dart.nullable(firebase_core_platform_interface.FirebaseOptions)}, {}),
    app: dart.fnType(firebase_core_platform_interface.FirebaseAppPlatform, [], [core.String])
  }));
  dart.setGetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebasePlatform.__proto__),
    apps: core.List$(firebase_core_platform_interface.FirebaseAppPlatform)
  }));
  dart.setStaticGetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ['instance']);
  dart.setStaticSetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ['instance']);
  dart.setLibraryUri(firebase_core_platform_interface.FirebasePlatform, I[6]);
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebasePlatform, () => ['_token', '_instance']);
  dart.defineLazy(firebase_core_platform_interface.FirebasePlatform, {
    /*firebase_core_platform_interface.FirebasePlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*firebase_core_platform_interface.FirebasePlatform._instance*/get _instance() {
      return new firebase_core_platform_interface.MethodChannelFirebase.new();
    },
    set _instance(value) {}
  }, false);
  firebase_core_web.FirebaseCoreWeb = class FirebaseCoreWeb extends firebase_core_platform_interface.FirebasePlatform {
    static registerService(service, opts) {
      let productNameOverride = opts && 'productNameOverride' in opts ? opts.productNameOverride : null;
      let ensurePluginInitialized = opts && 'ensurePluginInitialized' in opts ? opts.ensurePluginInitialized : null;
      firebase_core_web.FirebaseCoreWeb._services[$putIfAbsent](service, dart.fn(() => new firebase_core_web.FirebaseWebService.__(service, {override: productNameOverride, ensurePluginInitialized: ensurePluginInitialized}), T$.VoidToFirebaseWebService()));
    }
    static registerWith(registrar) {
      firebase_core_platform_interface.FirebasePlatform.instance = new firebase_core_web.FirebaseCoreWeb.new();
    }
    get firebaseSDKVersion() {
      let t24;
      return core.String.as((t24 = js.context._get("flutterfire_web_sdk_version"), t24 == null ? "9.22.1" : t24));
    }
    get [_ignoredServiceScripts]() {
      try {
        let ignored = js.JsObject.fromBrowserObject(core.Object.as(js.context._get("flutterfire_ignore_scripts")));
        if (core.Iterable.is(ignored)) {
          return core.Iterable.as(ignored)[$map](core.String, dart.fn(e => dart.toString(e), T$.dynamicToString()))[$toList]({growable: false});
        }
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
        } else
          throw e$;
      }
      return T$.JSArrayOfString().of([]);
    }
    injectSrcScript(src, windowVar) {
      return async.async(dart.void, (function* injectSrcScript() {
        let trustedUrl = null;
        let trustedPolicyName = this[_defaultTrustedPolicyName] + windowVar;
        if (dart.global.trustedTypes != null) {
          js$['DomConsoleExtension|get#debug'](dart.global.console)("TrustedTypes available. Creating policy:", trustedPolicyName);
          let factory = dart.nullCheck(dart.global.trustedTypes);
          try {
            let policy = js$['DomTrustedTypePolicyFactoryExtension|createPolicy'](factory, trustedPolicyName, {createScriptURL: js.allowInterop(T$.StringToString(), dart.fn(url => src, T$.StringToString()))});
            trustedUrl = js$['DomTrustedTypePolicyExtension|createScriptURL'](policy, src);
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Object.is(e)) {
              dart.rethrow(e$);
            } else
              throw e$;
          }
        }
        let script = html.ScriptElement.new();
        script[$type] = "text/javascript";
        script.crossOrigin = "anonymous";
        script[$text] = "      window.ff_trigger_" + windowVar + " = async (callback) => {\n        console.debug(\"Initializing Firebase " + windowVar + "\");\n        callback(await import(\"" + dart.str(trustedUrl != null ? js_util._callMethodUnchecked0(dart.dynamic, trustedUrl, "toString") : src) + "\"));\n      };\n    ";
        if (!(html.document[$head] != null)) dart.assertFailed(null, I[8], 137, 12, "document.head != null");
        dart.nullCheck(html.document[$head])[$append](script);
        let completer = async.Completer.new();
        js.context.callMethod("ff_trigger_" + windowVar, [dart.fn(module => {
            js.context._set(windowVar, module);
            js.context.deleteProperty("ff_trigger_" + windowVar);
            completer.complete();
          }, T$.dynamicToNull())]);
        yield completer.future;
      }).bind(this));
    }
    [_initializeCore]() {
      return async.async(dart.void, (function* _initializeCore() {
        if (js.context._get("firebase_core") != null) {
          return;
        }
        let version = this.firebaseSDKVersion;
        let ignored = this[_ignoredServiceScripts];
        yield async.Future.wait(dart.void, firebase_core_web.FirebaseCoreWeb._services[$values][$map](T$.FutureOfvoid(), dart.fn(service => {
          let t26, t26$;
          if (ignored[$contains]((t26 = service.override, t26 == null ? service.name : t26))) {
            return async.Future.value();
          }
          return this.injectSrcScript("https://www.gstatic.com/firebasejs/" + version + "/firebase-" + service.name + ".js", "firebase_" + dart.str((t26$ = service.override, t26$ == null ? service.name : t26$)));
        }, T$.FirebaseWebServiceToFutureOfvoid())));
      }).bind(this));
    }
    get apps() {
      return firebase_core_web.guardNotInitialized(T$.ListOfFirebaseAppPlatform(), dart.fn(() => core$.apps[$map](firebase_core_platform_interface.FirebaseAppPlatform, C[4] || CT.C4)[$toList]({growable: false}), T$.VoidToListOfFirebaseAppPlatform()));
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core_platform_interface.FirebaseAppPlatform, (function* initializeApp() {
        yield this[_initializeCore]();
        firebase_core_web.guardNotInitialized(core.String, dart.fn(() => dart.global.firebase_core.SDK_VERSION, T$.VoidToString()));
        if (!dart.fn(() => {
          if (dart.global.firebase_core.SDK_VERSION !== "9.22.1") {
            core.print("            WARNING: FlutterFire for Web is explicitly tested against Firebase JS SDK version \"" + "9.22.1" + "\"\n            but your currently specifying \"" + dart.global.firebase_core.SDK_VERSION + "\" by either the imported Firebase JS SDKs in your web/index.html\n            file or by providing an override - this may lead to unexpected issues in your application. It is recommended that you change all of the versions of the\n            Firebase JS SDK version \"" + "9.22.1" + "\":\n\n            If you override the version manually:\n              change:\n                <script>window.flutterfire_web_sdk_version = '" + dart.global.firebase_core.SDK_VERSION + "';</script>\n              to:\n                <script>window.flutterfire_web_sdk_version = '" + "9.22.1" + "';</script>\n\n            If you import the Firebase scripts in index.html, instead allow FlutterFire to manage this for you by removing\n            any Firebase scripts in your web/index.html file:\n                e.g. remove: <script src=\"https://www.gstatic.com/firebasejs/" + dart.global.firebase_core.SDK_VERSION + "/firebase-app.js\"></script>\n          ");
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[8], 201, 7, "() {\n        if (firebase.SDK_VERSION != supportedFirebaseJsSdkVersion) {\n          // ignore: avoid_print\n          print(\n            '''\n            WARNING: FlutterFire for Web is explicitly tested against Firebase JS SDK version \"$supportedFirebaseJsSdkVersion\"\n            but your currently specifying \"${firebase.SDK_VERSION}\" by either the imported Firebase JS SDKs in your web/index.html\n            file or by providing an override - this may lead to unexpected issues in your application. It is recommended that you change all of the versions of the\n            Firebase JS SDK version \"$supportedFirebaseJsSdkVersion\":\n\n            If you override the version manually:\n              change:\n                <script>window.flutterfire_web_sdk_version = '${firebase.SDK_VERSION}';</script>\n              to:\n                <script>window.flutterfire_web_sdk_version = '$supportedFirebaseJsSdkVersion';</script>\n\n            If you import the Firebase scripts in index.html, instead allow FlutterFire to manage this for you by removing\n            any Firebase scripts in your web/index.html file:\n                e.g. remove: <script src=\"https://www.gstatic.com/firebasejs/${firebase.SDK_VERSION}/firebase-app.js\"></script>\n          ''',\n          );\n        }\n\n        return true;\n      }()");
        let app = null;
        if (name == null || name === "[DEFAULT]") {
          let defaultAppExists = false;
          try {
            app = core$.app();
            defaultAppExists = true;
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Object.is(e)) {
            } else
              throw e$;
          }
          if (defaultAppExists) {
            if (options != null) {
              if (options.apiKey !== dart.nullCheck(app).options.apiKey || options.databaseURL !== app.options.databaseURL || options.storageBucket !== app.options.storageBucket) {
                dart.throw(firebase_core_platform_interface.duplicateApp("[DEFAULT]"));
              }
            }
          } else {
            if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating the default app.", I[8], 255, 11, "options != null");
            app = core$.initializeApp({apiKey: dart.nullCheck(options).apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
          }
        }
        if (name != null && name !== "[DEFAULT]") {
          if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating a secondary Firebase app.", I[8], 277, 9, "options != null");
          try {
            app = core$.initializeApp({name: name, apiKey: dart.nullCheck(options).apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
          } catch (e$0) {
            let e = dart.getThrown(e$0);
            if (core.Object.is(e)) {
              if (firebase_core_web._getJSErrorCode(e) === "app/duplicate-app") {
                dart.throw(firebase_core_platform_interface.duplicateApp(name));
              }
              dart.throw(firebase_core_web._catchJSError(e));
            } else
              throw e$0;
          }
        }
        yield async.Future.wait(dart.void, firebase_core_web.FirebaseCoreWeb._services[$values][$map](T$.FutureOfvoid(), dart.fn(service => {
          let ensureInitializedFunction = service.ensurePluginInitialized;
          if (ensureInitializedFunction == null || app == null) {
            return async.Future.value();
          }
          return ensureInitializedFunction(app);
        }, T$.FirebaseWebServiceToFutureOfvoid())));
        return firebase_core_web._createFromJsApp(dart.nullCheck(app));
      }).bind(this));
    }
    app(name = "[DEFAULT]") {
      let app = null;
      try {
        app = firebase_core_web.guardNotInitialized(app$.App, dart.fn(() => core$.app(name), T$.VoidToApp()));
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          if (firebase_core_web._getJSErrorCode(e) === "app/no-app") {
            dart.throw(firebase_core_platform_interface.noAppExists(name));
          }
          dart.throw(firebase_core_web._catchJSError(e));
        } else
          throw e$;
      }
      return firebase_core_web._createFromJsApp(app);
    }
    static ['_#new#tearOff']() {
      return new firebase_core_web.FirebaseCoreWeb.new();
    }
  };
  (firebase_core_web.FirebaseCoreWeb.new = function() {
    this[_defaultTrustedPolicyName] = "flutterfire-";
    firebase_core_web.FirebaseCoreWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_core_web.FirebaseCoreWeb.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseCoreWeb);
  dart.addTypeCaches(firebase_core_web.FirebaseCoreWeb);
  dart.setMethodSignature(firebase_core_web.FirebaseCoreWeb, () => ({
    __proto__: dart.getMethods(firebase_core_web.FirebaseCoreWeb.__proto__),
    injectSrcScript: dart.fnType(async.Future$(dart.void), [core.String, core.String]),
    [_initializeCore]: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(firebase_core_web.FirebaseCoreWeb, () => ['registerService', 'registerWith']);
  dart.setGetterSignature(firebase_core_web.FirebaseCoreWeb, () => ({
    __proto__: dart.getGetters(firebase_core_web.FirebaseCoreWeb.__proto__),
    firebaseSDKVersion: core.String,
    [_ignoredServiceScripts]: core.List$(core.String)
  }));
  dart.setLibraryUri(firebase_core_web.FirebaseCoreWeb, I[7]);
  dart.setFieldSignature(firebase_core_web.FirebaseCoreWeb, () => ({
    __proto__: dart.getFields(firebase_core_web.FirebaseCoreWeb.__proto__),
    [_defaultTrustedPolicyName]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(firebase_core_web.FirebaseCoreWeb, () => ['_services']);
  dart.defineLazy(firebase_core_web.FirebaseCoreWeb, {
    /*firebase_core_web.FirebaseCoreWeb._services*/get _services() {
      return new (T$.IdentityMapOfString$FirebaseWebService()).from(["core", new firebase_core_web.FirebaseWebService.__("app", {override: "core"})]);
    },
    set _services(value) {}
  }, false);
  firebase_core_web._createFromJsApp = function _createFromJsApp(jsApp) {
    return new firebase_core_web.FirebaseAppWeb.__(jsApp.name, firebase_core_web._createFromJsOptions(jsApp.options));
  };
  firebase_core_web._createFromJsOptions = function _createFromJsOptions(options) {
    return new firebase_core_platform_interface.FirebaseOptions.new({apiKey: options.apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
  };
  firebase_core_web._getJSErrorCode = function _getJSErrorCode(e) {
    let t29;
    if (dart.equals(js_util.getProperty(dart.dynamic, core.Object.as(e), "name"), "FirebaseError")) {
      t29 = js_util.getProperty(T$.StringN(), core.Object.as(e), "code");
      return t29 == null ? "" : t29;
    }
    return "";
  };
  firebase_core_web._catchJSError = function _catchJSError(e) {
    let t29;
    if (dart.equals(js_util.getProperty(dart.dynamic, core.Object.as(e), "name"), "FirebaseError")) {
      let rawCode = js_util.getProperty(core.String, core.Object.as(e), "code");
      let code = rawCode;
      let message = (t29 = js_util.getProperty(T$.StringN(), core.Object.as(e), "message"), t29 == null ? "" : t29);
      if (code[$contains]("/")) {
        let chunks = code[$split]("/");
        code = chunks[$_get](chunks[$length] - 1);
      }
      return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: code, message: message[$replaceAll](" (" + rawCode + ")", "")});
    }
    dart.throw(e);
  };
  firebase_core_web._handleException = function _handleException(exception, stackTrace) {
    if (exception[$toString]()[$contains]("of undefined")) {
      dart.throw(firebase_core_platform_interface.coreNotInitialized());
    }
    core.Error.throwWithStackTrace(exception, stackTrace);
  };
  firebase_core_web.guardNotInitialized = function guardNotInitialized(R, cb) {
    try {
      let value = cb();
      if (async.Future.is(value)) {
        return R.as(value.catchError(C[5] || CT.C5));
      }
      return value;
    } catch (e) {
      let error = dart.getThrown(e);
      let stackTrace = dart.stackTrace(e);
      if (core.Object.is(error)) {
        firebase_core_web._handleException(error, stackTrace);
      } else
        throw e;
    }
  };
  dart.defineLazy(firebase_core_web, {
    /*firebase_core_web.supportedFirebaseJsSdkVersion*/get supportedFirebaseJsSdkVersion() {
      return "9.22.1";
    }
  }, false);
  var _isSafari = dart.privateName(url_launcher_web, "_isSafari");
  var _window = dart.privateName(url_launcher_web, "_window");
  url_launcher_platform.UrlLauncherPlatform = class UrlLauncherPlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      return url_launcher_platform.UrlLauncherPlatform._instance;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, url_launcher_platform.UrlLauncherPlatform._token);
      url_launcher_platform.UrlLauncherPlatform._instance = instance;
    }
    canLaunch(url) {
      dart.throw(new core.UnimplementedError.new("canLaunch() has not been implemented."));
    }
    launch(url, opts) {
      let useSafariVC = opts && 'useSafariVC' in opts ? opts.useSafariVC : null;
      let useWebView = opts && 'useWebView' in opts ? opts.useWebView : null;
      let enableJavaScript = opts && 'enableJavaScript' in opts ? opts.enableJavaScript : null;
      let enableDomStorage = opts && 'enableDomStorage' in opts ? opts.enableDomStorage : null;
      let universalLinksOnly = opts && 'universalLinksOnly' in opts ? opts.universalLinksOnly : null;
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
      dart.throw(new core.UnimplementedError.new("launch() has not been implemented."));
    }
    launchUrl(url, options) {
      let isWebURL = url[$startsWith]("http:") || url[$startsWith]("https:");
      let useWebView = options.mode === types$.PreferredLaunchMode.inAppWebView || isWebURL && options.mode === types$.PreferredLaunchMode.platformDefault;
      return this.launch(url, {useSafariVC: useWebView, useWebView: useWebView, enableJavaScript: options.webViewConfiguration.enableJavaScript, enableDomStorage: options.webViewConfiguration.enableDomStorage, universalLinksOnly: options.mode === types$.PreferredLaunchMode.externalNonBrowserApplication, headers: options.webViewConfiguration.headers, webOnlyWindowName: options.webOnlyWindowName});
    }
    closeWebView() {
      dart.throw(new core.UnimplementedError.new("closeWebView() has not been implemented."));
    }
  };
  (url_launcher_platform.UrlLauncherPlatform.new = function() {
    url_launcher_platform.UrlLauncherPlatform.__proto__.new.call(this, {token: url_launcher_platform.UrlLauncherPlatform._token});
    ;
  }).prototype = url_launcher_platform.UrlLauncherPlatform.prototype;
  dart.addTypeTests(url_launcher_platform.UrlLauncherPlatform);
  dart.addTypeCaches(url_launcher_platform.UrlLauncherPlatform);
  dart.setMethodSignature(url_launcher_platform.UrlLauncherPlatform, () => ({
    __proto__: dart.getMethods(url_launcher_platform.UrlLauncherPlatform.__proto__),
    canLaunch: dart.fnType(async.Future$(core.bool), [core.String]),
    launch: dart.fnType(async.Future$(core.bool), [core.String], {webOnlyWindowName: dart.nullable(core.String)}, {enableDomStorage: core.bool, enableJavaScript: core.bool, headers: core.Map$(core.String, core.String), universalLinksOnly: core.bool, useSafariVC: core.bool, useWebView: core.bool}),
    launchUrl: dart.fnType(async.Future$(core.bool), [core.String, types$.LaunchOptions]),
    closeWebView: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticGetterSignature(url_launcher_platform.UrlLauncherPlatform, () => ['instance']);
  dart.setStaticSetterSignature(url_launcher_platform.UrlLauncherPlatform, () => ['instance']);
  dart.setLibraryUri(url_launcher_platform.UrlLauncherPlatform, I[9]);
  dart.setStaticFieldSignature(url_launcher_platform.UrlLauncherPlatform, () => ['_token', '_instance']);
  dart.defineLazy(url_launcher_platform.UrlLauncherPlatform, {
    /*url_launcher_platform.UrlLauncherPlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*url_launcher_platform.UrlLauncherPlatform._instance*/get _instance() {
      return new method_channel_url_launcher.MethodChannelUrlLauncher.new();
    },
    set _instance(value) {}
  }, false);
  url_launcher_web.UrlLauncherPlugin = class UrlLauncherPlugin extends url_launcher_platform.UrlLauncherPlatform {
    static ['_#new#tearOff'](opts) {
      let debugWindow = opts && 'debugWindow' in opts ? opts.debugWindow : null;
      return new url_launcher_web.UrlLauncherPlugin.new({debugWindow: debugWindow});
    }
    static registerWith(registrar) {
      url_launcher_platform.UrlLauncherPlatform.instance = new url_launcher_web.UrlLauncherPlugin.new();
      ui.platformViewRegistry.registerViewFactory("__url_launcher::link", link$.linkViewFactory, {isVisible: false});
    }
    get linkDelegate() {
      return dart.fn(linkInfo => new link$.WebLinkDelegate.new(linkInfo), T$.LinkInfoToWebLinkDelegate());
    }
    openNewWindow(url, opts) {
      let t30;
      let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
      let target = (t30 = webOnlyWindowName, t30 == null ? this[_isSafari] && url_launcher_web._isSafariTargetTopScheme(url) ? "_top" : "" : t30);
      return this[_window][$open](url, target);
    }
    canLaunch(url) {
      return T$.FutureOfbool().value(url_launcher_web.UrlLauncherPlugin._supportedSchemes.contains(url_launcher_web._getUrlScheme(url)));
    }
    launch(url, opts) {
      let useSafariVC = opts && 'useSafariVC' in opts ? opts.useSafariVC : false;
      let useWebView = opts && 'useWebView' in opts ? opts.useWebView : false;
      let enableJavaScript = opts && 'enableJavaScript' in opts ? opts.enableJavaScript : false;
      let enableDomStorage = opts && 'enableDomStorage' in opts ? opts.enableDomStorage : false;
      let universalLinksOnly = opts && 'universalLinksOnly' in opts ? opts.universalLinksOnly : false;
      let headers = opts && 'headers' in opts ? opts.headers : C[6] || CT.C6;
      let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
      return async.async(core.bool, (function* launch() {
        this.openNewWindow(url, {webOnlyWindowName: webOnlyWindowName});
        return true;
      }).bind(this));
    }
  };
  (url_launcher_web.UrlLauncherPlugin.new = function(opts) {
    let t30;
    let debugWindow = opts && 'debugWindow' in opts ? opts.debugWindow : null;
    this[_isSafari] = false;
    this[_window] = (t30 = debugWindow, t30 == null ? html.window : t30);
    url_launcher_web.UrlLauncherPlugin.__proto__.new.call(this);
    this[_isSafari] = url_launcher_web._navigatorIsSafari(this[_window][$navigator]);
  }).prototype = url_launcher_web.UrlLauncherPlugin.prototype;
  dart.addTypeTests(url_launcher_web.UrlLauncherPlugin);
  dart.addTypeCaches(url_launcher_web.UrlLauncherPlugin);
  dart.setMethodSignature(url_launcher_web.UrlLauncherPlugin, () => ({
    __proto__: dart.getMethods(url_launcher_web.UrlLauncherPlugin.__proto__),
    openNewWindow: dart.fnType(html.WindowBase, [core.String], {webOnlyWindowName: dart.nullable(core.String)}, {}),
    launch: dart.fnType(async.Future$(core.bool), [core.String], {enableDomStorage: core.bool, enableJavaScript: core.bool, headers: core.Map$(core.String, core.String), universalLinksOnly: core.bool, useSafariVC: core.bool, useWebView: core.bool, webOnlyWindowName: dart.nullable(core.String)}, {})
  }));
  dart.setStaticMethodSignature(url_launcher_web.UrlLauncherPlugin, () => ['registerWith']);
  dart.setGetterSignature(url_launcher_web.UrlLauncherPlugin, () => ({
    __proto__: dart.getGetters(url_launcher_web.UrlLauncherPlugin.__proto__),
    linkDelegate: dart.fnType(framework.Widget, [link.LinkInfo])
  }));
  dart.setLibraryUri(url_launcher_web.UrlLauncherPlugin, I[10]);
  dart.setFieldSignature(url_launcher_web.UrlLauncherPlugin, () => ({
    __proto__: dart.getFields(url_launcher_web.UrlLauncherPlugin.__proto__),
    [_window]: dart.finalFieldType(html.Window),
    [_isSafari]: dart.fieldType(core.bool)
  }));
  dart.setStaticFieldSignature(url_launcher_web.UrlLauncherPlugin, () => ['_supportedSchemes']);
  dart.defineLazy(url_launcher_web.UrlLauncherPlugin, {
    /*url_launcher_web.UrlLauncherPlugin._supportedSchemes*/get _supportedSchemes() {
      return T$.LinkedHashSetOfString().from(["http", "https"]).union(url_launcher_web._safariTargetTopSchemes);
    }
  }, false);
  url_launcher_web._getUrlScheme = function _getUrlScheme(url) {
    let t30;
    t30 = core.Uri.tryParse(url);
    return t30 == null ? null : t30.scheme;
  };
  url_launcher_web._isSafariTargetTopScheme = function _isSafariTargetTopScheme(url) {
    return url_launcher_web._safariTargetTopSchemes.contains(url_launcher_web._getUrlScheme(url));
  };
  url_launcher_web._navigatorIsSafari = function _navigatorIsSafari(navigator) {
    return navigator[$userAgent][$contains]("Safari") && !navigator[$userAgent][$contains]("Chrome");
  };
  dart.defineLazy(url_launcher_web, {
    /*url_launcher_web._safariTargetTopSchemes*/get _safariTargetTopSchemes() {
      return C[7] || CT.C7;
    }
  }, false);
  var _webMultiFactorUser$ = dart.privateName(firebase_auth_web_multi_factor, "_webMultiFactorUser");
  var auth$0 = dart.privateName(platform_interface_multi_factor, "MultiFactorPlatform.auth");
  platform_interface_multi_factor.MultiFactorPlatform = class MultiFactorPlatform extends plugin_platform_interface.PlatformInterface {
    get auth() {
      return this[auth$0];
    }
    set auth(value) {
      super.auth = value;
    }
    enroll(assertion, opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      dart.throw(new core.UnimplementedError.new("enroll() is not implemented"));
    }
    getSession() {
      dart.throw(new core.UnimplementedError.new("getSession() is not implemented"));
    }
    unenroll(opts) {
      let factorUid = opts && 'factorUid' in opts ? opts.factorUid : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      dart.throw(new core.UnimplementedError.new("unenroll() is not implemented"));
    }
    getEnrolledFactors() {
      dart.throw(new core.UnimplementedError.new("getEnrolledFactors() is not implemented"));
    }
  };
  (platform_interface_multi_factor.MultiFactorPlatform.new = function(auth) {
    this[auth$0] = auth;
    platform_interface_multi_factor.MultiFactorPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.MultiFactorPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.MultiFactorPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.MultiFactorPlatform.__proto__),
    enroll: dart.fnType(async.Future$(dart.void), [platform_interface_multi_factor.MultiFactorAssertionPlatform], {displayName: dart.nullable(core.String)}, {}),
    getSession: dart.fnType(async.Future$(platform_interface_multi_factor.MultiFactorSession), []),
    unenroll: dart.fnType(async.Future$(dart.void), [], {factorUid: dart.nullable(core.String), multiFactorInfo: dart.nullable(platform_interface_multi_factor.MultiFactorInfo)}, {}),
    getEnrolledFactors: dart.fnType(async.Future$(core.List$(platform_interface_multi_factor.MultiFactorInfo)), [])
  }));
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorPlatform, I[11]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorPlatform, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorPlatform.__proto__),
    auth: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform)
  }));
  dart.setStaticFieldSignature(platform_interface_multi_factor.MultiFactorPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_multi_factor.MultiFactorPlatform, {
    /*platform_interface_multi_factor.MultiFactorPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.MultiFactorWeb = class MultiFactorWeb extends platform_interface_multi_factor.MultiFactorPlatform {
    static ['_#new#tearOff'](auth, _webMultiFactorUser) {
      return new firebase_auth_web_multi_factor.MultiFactorWeb.new(auth, _webMultiFactorUser);
    }
    getSession() {
      return async.async(platform_interface_multi_factor.MultiFactorSession, (function* getSession() {
        try {
          return web_utils.convertMultiFactorSession(yield this[_webMultiFactorUser$].session);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    enroll(assertion, opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      return async.async(dart.void, (function* enroll() {
        try {
          let webAssertion = firebase_auth_web_multi_factor.MultiFactorAssertionWeb.as(assertion);
          return yield this[_webMultiFactorUser$].enroll(webAssertion.assertion, displayName);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    unenroll(opts) {
      let factorUid = opts && 'factorUid' in opts ? opts.factorUid : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      return async.async(dart.void, (function* unenroll() {
        let t33, t32;
        let uidToUnenroll = (t32 = factorUid, t32 == null ? (t33 = multiFactorInfo, t33 == null ? null : t33.uid) : t32);
        if (uidToUnenroll == null) {
          dart.throw(new core.ArgumentError.new("Either factorUid or multiFactorInfo must not be null"));
        }
        try {
          yield this[_webMultiFactorUser$].unenroll(uidToUnenroll);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getEnrolledFactors() {
      return async.async(T$.ListOfMultiFactorInfo(), (function* getEnrolledFactors() {
        let data = this[_webMultiFactorUser$].enrolledFactors;
        return data[$map](platform_interface_multi_factor.MultiFactorInfo, dart.fn(e => new platform_interface_multi_factor.MultiFactorInfo.new({factorId: e.factorId, enrollmentTimestamp: _http.HttpDate.parse(e.enrollmentTime).millisecondsSinceEpoch / 1000, displayName: e.displayName, uid: e.uid}), T$.MultiFactorInfoOfMultiFactorInfoJsImplToMultiFactorInfo()))[$toList]();
      }).bind(this));
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorWeb.new = function(auth, _webMultiFactorUser) {
    this[_webMultiFactorUser$] = _webMultiFactorUser;
    firebase_auth_web_multi_factor.MultiFactorWeb.__proto__.new.call(this, auth);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorWeb, I[12]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorWeb.__proto__),
    [_webMultiFactorUser$]: dart.finalFieldType(multi_factor.MultiFactorUser)
  }));
  var assertion$ = dart.privateName(firebase_auth_web_multi_factor, "MultiFactorAssertionWeb.assertion");
  platform_interface_multi_factor.MultiFactorAssertionPlatform = class MultiFactorAssertionPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff']() {
      return new platform_interface_multi_factor.MultiFactorAssertionPlatform.new();
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_multi_factor.MultiFactorAssertionPlatform._token);
    }
  };
  (platform_interface_multi_factor.MultiFactorAssertionPlatform.new = function() {
    platform_interface_multi_factor.MultiFactorAssertionPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.MultiFactorAssertionPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorAssertionPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorAssertionPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorAssertionPlatform);
  dart.setStaticMethodSignature(platform_interface_multi_factor.MultiFactorAssertionPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorAssertionPlatform, I[11]);
  dart.setStaticFieldSignature(platform_interface_multi_factor.MultiFactorAssertionPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_multi_factor.MultiFactorAssertionPlatform, {
    /*platform_interface_multi_factor.MultiFactorAssertionPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.MultiFactorAssertionWeb = class MultiFactorAssertionWeb extends platform_interface_multi_factor.MultiFactorAssertionPlatform {
    get assertion() {
      return this[assertion$];
    }
    set assertion(value) {
      super.assertion = value;
    }
    static ['_#new#tearOff'](assertion) {
      return new firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new(assertion);
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new = function(assertion) {
    this[assertion$] = assertion;
    firebase_auth_web_multi_factor.MultiFactorAssertionWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorAssertionWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorAssertionWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorAssertionWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorAssertionWeb, I[12]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorAssertionWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorAssertionWeb.__proto__),
    assertion: dart.finalFieldType(multi_factor.MultiFactorAssertion$(dart.packageJSType("MultiFactorAssertionJsImpl", false)))
  }));
  var _auth$ = dart.privateName(firebase_auth_web_multi_factor, "_auth");
  var _webMultiFactorResolver$ = dart.privateName(firebase_auth_web_multi_factor, "_webMultiFactorResolver");
  var _webAuth$ = dart.privateName(firebase_auth_web_multi_factor, "_webAuth");
  var hints$ = dart.privateName(platform_interface_multi_factor, "MultiFactorResolverPlatform.hints");
  var session$ = dart.privateName(platform_interface_multi_factor, "MultiFactorResolverPlatform.session");
  platform_interface_multi_factor.MultiFactorResolverPlatform = class MultiFactorResolverPlatform extends plugin_platform_interface.PlatformInterface {
    get hints() {
      return this[hints$];
    }
    set hints(value) {
      super.hints = value;
    }
    get session() {
      return this[session$];
    }
    set session(value) {
      super.session = value;
    }
    static ['_#new#tearOff'](hints, session) {
      return new platform_interface_multi_factor.MultiFactorResolverPlatform.new(hints, session);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_multi_factor.MultiFactorResolverPlatform._token);
    }
    resolveSignIn(assertion) {
      dart.throw(new core.UnimplementedError.new("resolveSignIn() is not implemented"));
    }
  };
  (platform_interface_multi_factor.MultiFactorResolverPlatform.new = function(hints, session) {
    this[hints$] = hints;
    this[session$] = session;
    platform_interface_multi_factor.MultiFactorResolverPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.MultiFactorResolverPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorResolverPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorResolverPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorResolverPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.MultiFactorResolverPlatform.__proto__),
    resolveSignIn: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [platform_interface_multi_factor.MultiFactorAssertionPlatform])
  }));
  dart.setStaticMethodSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorResolverPlatform, I[11]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorResolverPlatform.__proto__),
    hints: dart.finalFieldType(core.List$(platform_interface_multi_factor.MultiFactorInfo)),
    session: dart.finalFieldType(platform_interface_multi_factor.MultiFactorSession)
  }));
  dart.setStaticFieldSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_multi_factor.MultiFactorResolverPlatform, {
    /*platform_interface_multi_factor.MultiFactorResolverPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.MultiFactorResolverWeb = class MultiFactorResolverWeb extends platform_interface_multi_factor.MultiFactorResolverPlatform {
    static ['_#new#tearOff'](hints, session, _auth, _webMultiFactorResolver, _webAuth) {
      return new firebase_auth_web_multi_factor.MultiFactorResolverWeb.new(hints, session, _auth, _webMultiFactorResolver, _webAuth);
    }
    resolveSignIn(assertion) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* resolveSignIn() {
        let webAssertion = firebase_auth_web_multi_factor.MultiFactorAssertionWeb.as(assertion);
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this[_auth$], yield this[_webMultiFactorResolver$].resolveSignIn(webAssertion.assertion), this[_webAuth$]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorResolverWeb.new = function(hints, session, _auth, _webMultiFactorResolver, _webAuth) {
    this[_auth$] = _auth;
    this[_webMultiFactorResolver$] = _webMultiFactorResolver;
    this[_webAuth$] = _webAuth;
    firebase_auth_web_multi_factor.MultiFactorResolverWeb.__proto__.new.call(this, hints, session);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorResolverWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorResolverWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorResolverWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorResolverWeb, I[12]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorResolverWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorResolverWeb.__proto__),
    [_webMultiFactorResolver$]: dart.finalFieldType(multi_factor.MultiFactorResolver),
    [_webAuth$]: dart.finalFieldType(dart.nullable(auth$.Auth)),
    [_auth$]: dart.finalFieldType(firebase_auth_web.FirebaseAuthWeb)
  }));
  var webSession$ = dart.privateName(firebase_auth_web_multi_factor, "MultiFactorSessionWeb.webSession");
  var id$ = dart.privateName(platform_interface_multi_factor, "MultiFactorSession.id");
  platform_interface_multi_factor.MultiFactorSession = class MultiFactorSession extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    static ['_#new#tearOff'](id) {
      return new platform_interface_multi_factor.MultiFactorSession.new(id);
    }
  };
  (platform_interface_multi_factor.MultiFactorSession.new = function(id) {
    this[id$] = id;
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorSession.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorSession);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorSession);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorSession, I[11]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorSession, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorSession.__proto__),
    id: dart.finalFieldType(core.String)
  }));
  firebase_auth_web_multi_factor.MultiFactorSessionWeb = class MultiFactorSessionWeb extends platform_interface_multi_factor.MultiFactorSession {
    get webSession() {
      return this[webSession$];
    }
    set webSession(value) {
      super.webSession = value;
    }
    static ['_#new#tearOff'](id, webSession) {
      return new firebase_auth_web_multi_factor.MultiFactorSessionWeb.new(id, webSession);
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorSessionWeb.new = function(id, webSession) {
    this[webSession$] = webSession;
    firebase_auth_web_multi_factor.MultiFactorSessionWeb.__proto__.new.call(this, id);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorSessionWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorSessionWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorSessionWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorSessionWeb, I[12]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorSessionWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorSessionWeb.__proto__),
    webSession: dart.finalFieldType(multi_factor.MultiFactorSession)
  }));
  platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform = class PhoneMultiFactorGeneratorPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff']() {
      return new platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.new();
    }
    static get instance() {
      platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance == null ? platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance = new method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.new() : null;
      return dart.nullCheck(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance);
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._token);
      platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance = instance;
    }
    getAssertion(credential) {
      dart.throw(new core.UnimplementedError.new("getAssertion() is not implemented"));
    }
  };
  (platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.new = function() {
    platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.__proto__),
    getAssertion: dart.fnType(platform_interface_multi_factor.MultiFactorAssertionPlatform, [phone_auth.PhoneAuthCredential])
  }));
  dart.setStaticGetterSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, I[11]);
  dart.setStaticFieldSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ['_instance', '_token']);
  dart.defineLazy(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, {
    /*platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {},
    /*platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb = class PhoneMultiFactorGeneratorWeb extends platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform {
    getAssertion(credential) {
      let verificationId = credential.verificationId;
      let verificationCode = credential.smsCode;
      if (verificationCode == null) {
        dart.throw(new core.ArgumentError.new("verificationCode must not be null"));
      }
      if (verificationId == null) {
        dart.throw(new core.ArgumentError.new("verificationId must not be null"));
      }
      let cred = auth$.PhoneAuthProvider.credential(verificationId, verificationCode);
      return new firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new(multi_factor.PhoneMultiFactorGenerator.assertion(cred));
    }
    static ['_#new#tearOff']() {
      return new firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.new();
    }
  };
  (firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.new = function() {
    firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb, I[12]);
  utils.dartify = function dartify(jsObject) {
    return utils$.dartify(jsObject);
  };
  utils.jsify = function jsify(dartObject, customJsify = null) {
    return utils$.jsify(dartObject, customJsify);
  };
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  web_utils.getFirebaseAuthException = function getFirebaseAuthException(exception, auth = null) {
    if (!dart.packageJSType("FirebaseError", false).is(exception)) {
      return new firebase_auth_exception.FirebaseAuthException.new({code: "unknown", message: "An unknown error occurred: " + dart.str(exception)});
    }
    let firebaseError = dart.packageJSType("firebase_auth.Error", false).as(exception);
    let code = firebaseError.code[$replaceFirst]("auth/", "");
    let message = firebaseError.message[$replaceFirst](" (" + firebaseError.code + ").", "")[$replaceFirst]("Firebase: ", "");
    if (code === "multi-factor-auth-required") {
      let _auth = auth;
      if (_auth == null) {
        dart.throw(new core.ArgumentError.new("Multi-factor authentication is required, but the auth instance is null. " + "Please ensure that the auth instance is not null before calling " + "`getFirebaseAuthException()`."));
      }
      let resolverWeb = multi_factor.getMultiFactorResolver(_auth, dart.packageJSType("MultiFactorError", false).as(firebaseError));
      return new firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new({code: code, message: message, email: firebaseError.email, phoneNumber: firebaseError.phoneNumber, tenantId: firebaseError.tenantId, resolver: new firebase_auth_web_multi_factor.MultiFactorResolverWeb.new(resolverWeb.hints[$map](platform_interface_multi_factor.MultiFactorInfo, dart.fn(e => {
          if (multi_factor.PhoneMultiFactorInfo.is(e)) {
            return new platform_interface_multi_factor.PhoneMultiFactorInfo.new({displayName: e.displayName, factorId: e.factorId, enrollmentTimestamp: _http.HttpDate.parse(e.enrollmentTime).millisecondsSinceEpoch / 1000, uid: e.uid, phoneNumber: e.phoneNumber});
          }
          return new platform_interface_multi_factor.MultiFactorInfo.new({displayName: e.displayName, factorId: e.factorId, enrollmentTimestamp: _http.HttpDate.parse(e.enrollmentTime).millisecondsSinceEpoch / 1000, uid: e.uid});
        }, T$.MultiFactorInfoOfMultiFactorInfoJsImplToMultiFactorInfo()))[$toList](), new firebase_auth_web_multi_factor.MultiFactorSessionWeb.new("web", resolverWeb.session), firebase_auth_web.FirebaseAuthWeb.instance, resolverWeb, auth)});
    }
    return new firebase_auth_exception.FirebaseAuthException.new({code: code, message: message, email: firebaseError.email, phoneNumber: firebaseError.phoneNumber, tenantId: firebaseError.tenantId});
  };
  web_utils.convertWebActionCodeInfo = function convertWebActionCodeInfo(webActionCodeInfo) {
    if (webActionCodeInfo == null) {
      return null;
    }
    return new action_code_info.ActionCodeInfo.new({operation: messages$46pigeon.ActionCodeInfoOperation.passwordReset, data: new action_code_info.ActionCodeInfoData.new({email: webActionCodeInfo.data.email, previousEmail: webActionCodeInfo.data.previousEmail})});
  };
  web_utils.convertWebAdditionalUserInfo = function convertWebAdditionalUserInfo(webAdditionalUserInfo) {
    if (webAdditionalUserInfo == null) {
      return null;
    }
    return new additional_user_info.AdditionalUserInfo.new({isNewUser: webAdditionalUserInfo.isNewUser, profile: webAdditionalUserInfo.profile, providerId: webAdditionalUserInfo.providerId, username: webAdditionalUserInfo.username});
  };
  web_utils.convertWebIdTokenResult = function convertWebIdTokenResult(webIdTokenResult) {
    return new id_token_result.IdTokenResult.new(new messages$46pigeon.PigeonIdTokenResult.new({claims: webIdTokenResult.claims, token: webIdTokenResult.token, authTimestamp: webIdTokenResult.authTime.millisecondsSinceEpoch, issuedAtTimestamp: webIdTokenResult.issuedAtTime.millisecondsSinceEpoch, expirationTimestamp: webIdTokenResult.expirationTime.millisecondsSinceEpoch, signInProvider: webIdTokenResult.signInProvider}));
  };
  web_utils.convertPlatformActionCodeSettings = function convertPlatformActionCodeSettings(actionCodeSettings) {
    if (actionCodeSettings == null) {
      return null;
    }
    let actionCodeSettingsMap = actionCodeSettings.asMap();
    let webActionCodeSettings = null;
    if (actionCodeSettings.dynamicLinkDomain != null) {
      webActionCodeSettings = {url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain};
    } else {
      webActionCodeSettings = {url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp};
    }
    if (actionCodeSettingsMap[$_get]("android") != null) {
      webActionCodeSettings.android = {packageName: T$.StringN().as(dart.dsend(actionCodeSettingsMap[$_get]("android"), '_get', ["packageName"])), minimumVersion: T$.StringN().as(dart.dsend(actionCodeSettingsMap[$_get]("android"), '_get', ["minimumVersion"])), installApp: T$.boolN().as(dart.dsend(actionCodeSettingsMap[$_get]("android"), '_get', ["installApp"]))};
    }
    if (actionCodeSettingsMap[$_get]("iOS") != null) {
      webActionCodeSettings.iOS = {bundleId: T$.StringN().as(dart.dsend(actionCodeSettingsMap[$_get]("iOS"), '_get', ["bundleId"]))};
    }
    return webActionCodeSettings;
  };
  web_utils.convertPlatformAuthProvider = function convertPlatformAuthProvider(authProvider) {
    if (email_auth.EmailAuthProvider.is(authProvider)) {
      return auth$.EmailAuthProvider.new();
    }
    if (facebook_auth.FacebookAuthProvider.is(authProvider)) {
      let facebookAuthProvider = auth$.FacebookAuthProvider.new();
      authProvider.scopes[$forEach](dart.bind(facebookAuthProvider, 'addScope'));
      facebookAuthProvider.setCustomParameters(authProvider.parameters);
      return facebookAuthProvider;
    }
    if (apple_auth.AppleAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (github_auth.GithubAuthProvider.is(authProvider)) {
      let githubAuthProvider = auth$.GithubAuthProvider.new();
      authProvider.scopes[$forEach](dart.bind(githubAuthProvider, 'addScope'));
      githubAuthProvider.setCustomParameters(authProvider.parameters);
      return githubAuthProvider;
    }
    if (google_auth.GoogleAuthProvider.is(authProvider)) {
      let googleAuthProvider = auth$.GoogleAuthProvider.new();
      authProvider.scopes[$forEach](dart.bind(googleAuthProvider, 'addScope'));
      googleAuthProvider.setCustomParameters(authProvider.parameters);
      return googleAuthProvider;
    }
    if (microsoft_auth.MicrosoftAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (yahoo_auth.YahooAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (twitter_auth.TwitterAuthProvider.is(authProvider)) {
      let twitterAuthProvider = auth$.TwitterAuthProvider.new();
      twitterAuthProvider.setCustomParameters(authProvider.parameters);
      return twitterAuthProvider;
    }
    if (phone_auth.PhoneAuthProvider.is(authProvider)) {
      return auth$.PhoneAuthProvider.new();
    }
    if (oauth.OAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (saml_auth.SAMLAuthProvider.is(authProvider)) {
      return auth$.SAMLAuthProvider.new(authProvider.providerId);
    }
    dart.throw(new core.UnsupportedError.new("Unknown AuthProvider: " + dart.str(authProvider) + "."));
  };
  web_utils.convertWebAuthCredential = function convertWebAuthCredential(authCredential) {
    if (authCredential == null) {
      return null;
    }
    return new auth_credential.AuthCredential.new({providerId: authCredential.providerId, signInMethod: authCredential.signInMethod});
  };
  web_utils.convertWebOAuthCredential = function convertWebOAuthCredential(userCredential) {
    if (userCredential == null) {
      return null;
    }
    let authCredential = auth$.OAuthProvider.credentialFromResult(userCredential.jsObject);
    if (authCredential == null) {
      return null;
    }
    return new oauth.OAuthProvider.new(authCredential.providerId).credential({signInMethod: authCredential.signInMethod, accessToken: authCredential.accessToken, secret: authCredential.secret, idToken: authCredential.idToken});
  };
  web_utils.convertPlatformCredential = function convertPlatformCredential(credential) {
    if (email_auth.EmailAuthCredential.is(credential)) {
      if (credential.emailLink != null) {
        return auth$.EmailAuthProvider.credentialWithLink(credential.email, dart.nullCheck(credential.emailLink));
      }
      return auth$.EmailAuthProvider.credential(credential.email, dart.nullCheck(credential.password));
    }
    if (facebook_auth.FacebookAuthCredential.is(credential)) {
      return auth$.FacebookAuthProvider.credential(dart.nullCheck(credential.accessToken));
    }
    if (github_auth.GithubAuthCredential.is(credential)) {
      return auth$.GithubAuthProvider.credential(dart.nullCheck(credential.accessToken));
    }
    if (google_auth.GoogleAuthCredential.is(credential)) {
      return auth$.GoogleAuthProvider.credential(credential.idToken, credential.accessToken);
    }
    if (twitter_auth.TwitterAuthCredential.is(credential)) {
      return auth$.TwitterAuthProvider.credential(dart.nullCheck(credential.accessToken), dart.nullCheck(credential.secret));
    }
    if (phone_auth.PhoneAuthCredential.is(credential)) {
      return dart.packageJSType("OAuthCredential", false).as(auth$.PhoneAuthProvider.credential(dart.nullCheck(credential.verificationId), dart.nullCheck(credential.smsCode)));
    }
    if (oauth.OAuthCredential.is(credential)) {
      let credentialOptions = {accessToken: credential.accessToken, rawNonce: credential.rawNonce, idToken: credential.idToken};
      return auth$.OAuthProvider.new(credential.providerId).credential(credentialOptions);
    }
    return null;
  };
  web_utils.convertRecaptchaVerifierSize = function convertRecaptchaVerifierSize(size) {
    switch (size) {
      case C[8] || CT.C8:
        {
          return "compact";
        }
      case C[9] || CT.C9:
      default:
        {
          return "normal";
        }
    }
  };
  web_utils.convertRecaptchaVerifierTheme = function convertRecaptchaVerifierTheme(theme) {
    switch (theme) {
      case C[10] || CT.C10:
        {
          return "dark";
        }
      case C[11] || CT.C11:
      default:
        {
          return "light";
        }
    }
  };
  web_utils.convertMultiFactorSession = function convertMultiFactorSession(multiFactorSession) {
    return new firebase_auth_web_multi_factor.MultiFactorSessionWeb.new("web", multiFactorSession);
  };
  var _delegate$ = dart.privateName(firebase_core, "_delegate");
  firebase_core.FirebaseApp = class FirebaseApp extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new firebase_core.FirebaseApp.__(_delegate);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        yield this[_delegate$].delete();
      }).bind(this));
    }
    get name() {
      return this[_delegate$].name;
    }
    get options() {
      return this[_delegate$].options;
    }
    get isAutomaticDataCollectionEnabled() {
      return this[_delegate$].isAutomaticDataCollectionEnabled;
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return this[_delegate$].setAutomaticDataCollectionEnabled(enabled);
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return this[_delegate$].setAutomaticResourceManagementEnabled(enabled);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core.FirebaseApp.is(other)) return false;
      return other.name === this.name && other.options._equals(this.options);
    }
    get hashCode() {
      return core.Object.hash(this.name, this.options);
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core.FirebaseApp)) + "(" + this.name + ")";
    }
  };
  (firebase_core.FirebaseApp.__ = function(_delegate) {
    this[_delegate$] = _delegate;
    firebase_core_platform_interface.FirebaseAppPlatform.verify(this[_delegate$]);
  }).prototype = firebase_core.FirebaseApp.prototype;
  dart.addTypeTests(firebase_core.FirebaseApp);
  dart.addTypeCaches(firebase_core.FirebaseApp);
  dart.setMethodSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getMethods(firebase_core.FirebaseApp.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.bool])
  }));
  dart.setGetterSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getGetters(firebase_core.FirebaseApp.__proto__),
    name: core.String,
    options: firebase_core_platform_interface.FirebaseOptions,
    isAutomaticDataCollectionEnabled: core.bool
  }));
  dart.setLibraryUri(firebase_core.FirebaseApp, I[13]);
  dart.setFieldSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getFields(firebase_core.FirebaseApp.__proto__),
    [_delegate$]: dart.finalFieldType(firebase_core_platform_interface.FirebaseAppPlatform)
  }));
  dart.defineExtensionMethods(firebase_core.FirebaseApp, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core.FirebaseApp, ['hashCode']);
  firebase_core.Firebase = class Firebase extends core.Object {
    static ['_#_#tearOff']() {
      return new firebase_core.Firebase.__();
    }
    static get _delegate() {
      let t34;
      t34 = firebase_core.Firebase.delegatePackingProperty;
      return t34 == null ? firebase_core.Firebase.delegatePackingProperty = firebase_core_platform_interface.FirebasePlatform.instance : t34;
    }
    static get apps() {
      return firebase_core.Firebase._delegate.apps[$map](firebase_core.FirebaseApp, C[12] || CT.C12)[$toList]({growable: false});
    }
    static initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core.FirebaseApp, function* initializeApp() {
        let app = (yield firebase_core.Firebase._delegate.initializeApp({name: name, options: options}));
        return new firebase_core.FirebaseApp.__(app);
      });
    }
    static app(name = "[DEFAULT]") {
      let app = firebase_core.Firebase._delegate.app(name);
      return new firebase_core.FirebaseApp.__(app);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core.Firebase.is(other)) return false;
      return other.hashCode === this.hashCode;
    }
    get hashCode() {
      return this.toString()[$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core.Firebase));
    }
  };
  (firebase_core.Firebase.__ = function() {
    ;
  }).prototype = firebase_core.Firebase.prototype;
  dart.addTypeTests(firebase_core.Firebase);
  dart.addTypeCaches(firebase_core.Firebase);
  dart.setStaticMethodSignature(firebase_core.Firebase, () => ['initializeApp', 'app']);
  dart.setStaticGetterSignature(firebase_core.Firebase, () => ['_delegate', 'apps']);
  dart.setLibraryUri(firebase_core.Firebase, I[13]);
  dart.setStaticFieldSignature(firebase_core.Firebase, () => ['delegatePackingProperty']);
  dart.defineExtensionMethods(firebase_core.Firebase, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core.Firebase, ['hashCode']);
  dart.defineLazy(firebase_core.Firebase, {
    /*firebase_core.Firebase.delegatePackingProperty*/get delegatePackingProperty() {
      return null;
    },
    set delegatePackingProperty(value) {}
  }, false);
  var _auth$0 = dart.privateName(firebase_auth_web_confirmation_result, "_auth");
  var _webConfirmationResult$ = dart.privateName(firebase_auth_web_confirmation_result, "_webConfirmationResult");
  var _webAuth$0 = dart.privateName(firebase_auth_web_confirmation_result, "_webAuth");
  var verificationId$ = dart.privateName(platform_interface_confirmation_result, "ConfirmationResultPlatform.verificationId");
  platform_interface_confirmation_result.ConfirmationResultPlatform = class ConfirmationResultPlatform extends plugin_platform_interface.PlatformInterface {
    get verificationId() {
      return this[verificationId$];
    }
    set verificationId(value) {
      super.verificationId = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_confirmation_result.ConfirmationResultPlatform._token);
    }
    confirm(verificationCode) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* confirm() {
        dart.throw(new core.UnimplementedError.new("confirm() is not implemented"));
      });
    }
  };
  (platform_interface_confirmation_result.ConfirmationResultPlatform.new = function(verificationId) {
    this[verificationId$] = verificationId;
    platform_interface_confirmation_result.ConfirmationResultPlatform.__proto__.new.call(this, {token: platform_interface_confirmation_result.ConfirmationResultPlatform._token});
    ;
  }).prototype = platform_interface_confirmation_result.ConfirmationResultPlatform.prototype;
  dart.addTypeTests(platform_interface_confirmation_result.ConfirmationResultPlatform);
  dart.addTypeCaches(platform_interface_confirmation_result.ConfirmationResultPlatform);
  dart.setMethodSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_confirmation_result.ConfirmationResultPlatform.__proto__),
    confirm: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String])
  }));
  dart.setStaticMethodSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_confirmation_result.ConfirmationResultPlatform, I[14]);
  dart.setFieldSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ({
    __proto__: dart.getFields(platform_interface_confirmation_result.ConfirmationResultPlatform.__proto__),
    verificationId: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_confirmation_result.ConfirmationResultPlatform, {
    /*platform_interface_confirmation_result.ConfirmationResultPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_confirmation_result.ConfirmationResultWeb = class ConfirmationResultWeb extends platform_interface_confirmation_result.ConfirmationResultPlatform {
    static ['_#new#tearOff'](_auth, _webConfirmationResult, _webAuth) {
      return new firebase_auth_web_confirmation_result.ConfirmationResultWeb.new(_auth, _webConfirmationResult, _webAuth);
    }
    confirm(verificationCode) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* confirm() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this[_auth$0], yield this[_webConfirmationResult$].confirm(verificationCode), this[_webAuth$0]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_confirmation_result.ConfirmationResultWeb.new = function(_auth, _webConfirmationResult, _webAuth) {
    this[_auth$0] = _auth;
    this[_webConfirmationResult$] = _webConfirmationResult;
    this[_webAuth$0] = _webAuth;
    firebase_auth_web_confirmation_result.ConfirmationResultWeb.__proto__.new.call(this, _webConfirmationResult.verificationId);
    ;
  }).prototype = firebase_auth_web_confirmation_result.ConfirmationResultWeb.prototype;
  dart.addTypeTests(firebase_auth_web_confirmation_result.ConfirmationResultWeb);
  dart.addTypeCaches(firebase_auth_web_confirmation_result.ConfirmationResultWeb);
  dart.setLibraryUri(firebase_auth_web_confirmation_result.ConfirmationResultWeb, I[15]);
  dart.setFieldSignature(firebase_auth_web_confirmation_result.ConfirmationResultWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_confirmation_result.ConfirmationResultWeb.__proto__),
    [_auth$0]: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform),
    [_webConfirmationResult$]: dart.finalFieldType(auth$.ConfirmationResult),
    [_webAuth$0]: dart.finalFieldType(dart.nullable(auth$.Auth))
  }));
  var __RecaptchaVerifierFactoryWeb__delegate = dart.privateName(firebase_auth_web_recaptcha_verifier_factory, "_#RecaptchaVerifierFactoryWeb#_delegate");
  var _delegate = dart.privateName(firebase_auth_web_recaptcha_verifier_factory, "_delegate");
  platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform = class RecaptchaVerifierFactoryPlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      if (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance == null) {
        dart.throw(new core.UnimplementedError.new("RecaptchaVerifier is not implemented"));
      }
      return dart.nullCheck(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance);
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token);
      platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance = instance;
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token);
    }
    get delegate() {
      dart.throw(new core.UnimplementedError.new("delegate is not implemented"));
    }
    delegateFor(opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[9] || CT.C9;
      let theme = opts && 'theme' in opts ? opts.theme : C[11] || CT.C11;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      dart.throw(new core.UnimplementedError.new("delegateFor() is not implemented"));
    }
    get type() {
      dart.throw(new core.UnimplementedError.new("type is not implemented"));
    }
    clear() {
      dart.throw(new core.UnimplementedError.new("clear() is not implemented"));
    }
    render() {
      return async.async(core.int, function* render() {
        dart.throw(new core.UnimplementedError.new("render() is not implemented"));
      });
    }
    verify() {
      return async.async(core.String, function* verify() {
        dart.throw(new core.UnimplementedError.new("verify() is not implemented"));
      });
    }
  };
  (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.new = function() {
    platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.__proto__.new.call(this, {token: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token});
    ;
  }).prototype = platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.prototype;
  dart.addTypeTests(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform);
  dart.addTypeCaches(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform);
  dart.setMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.__proto__),
    delegateFor: dart.fnType(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, [], {container: dart.nullable(core.String), onError: dart.nullable(dart.fnType(dart.void, [firebase_auth_exception.FirebaseAuthException])), onExpired: dart.nullable(dart.fnType(dart.void, [])), onSuccess: dart.nullable(dart.fnType(dart.void, [])), size: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, theme: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme}, {auth: platform_interface_firebase_auth.FirebaseAuthPlatform}),
    clear: dart.fnType(dart.void, []),
    render: dart.fnType(async.Future$(core.int), []),
    verify: dart.fnType(async.Future$(core.String), [])
  }));
  dart.setStaticMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.__proto__),
    delegate: dart.dynamic,
    type: core.String
  }));
  dart.setStaticGetterSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, I[17]);
  dart.setStaticFieldSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['_instance', '_token']);
  dart.defineLazy(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, {
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {},
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb = class RecaptchaVerifierFactoryWeb extends platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform {
    get [_delegate]() {
      let t35;
      t35 = this[__RecaptchaVerifierFactoryWeb__delegate];
      return t35 == null ? dart.throw(new _internal.LateError.fieldNI("_delegate")) : t35;
    }
    set [_delegate](_delegate$35param) {
      this[__RecaptchaVerifierFactoryWeb__delegate] = _delegate$35param;
    }
    static get instance() {
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__();
    }
    static ['_#_#tearOff']() {
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__();
    }
    static ['_#new#tearOff'](opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[9] || CT.C9;
      let theme = opts && 'theme' in opts ? opts.theme : C[11] || CT.C11;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new({auth: auth, container: container, size: size, theme: theme, onSuccess: onSuccess, onError: onError, onExpired: onExpired});
    }
    delegateFor(opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[9] || CT.C9;
      let theme = opts && 'theme' in opts ? opts.theme : C[11] || CT.C11;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      let _webAuth = firebase_auth_web.FirebaseAuthWeb.as(auth);
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new({auth: _webAuth, container: container, size: size, theme: theme, onSuccess: onSuccess, onError: onError, onExpired: onExpired});
    }
    get delegate() {
      return this[_delegate];
    }
    get type() {
      return this[_delegate].type;
    }
    clear() {
      let t35;
      this[_delegate].clear();
      t35 = html.window[$document].getElementById("__ff-recaptcha-container");
      t35 == null ? null : t35[$remove]();
    }
    verify() {
      try {
        return this[_delegate].verify();
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          dart.throw(web_utils.getFirebaseAuthException(e));
        } else
          throw e$;
      }
    }
    render() {
      return async.async(core.int, (function* render() {
        try {
          return dart.asInt(yield this[_delegate].render());
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__ = function() {
    this[__RecaptchaVerifierFactoryWeb__delegate] = null;
    firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.prototype;
  (firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new = function(opts) {
    let t35;
    let auth = opts && 'auth' in opts ? opts.auth : null;
    let container = opts && 'container' in opts ? opts.container : null;
    let size = opts && 'size' in opts ? opts.size : C[9] || CT.C9;
    let theme = opts && 'theme' in opts ? opts.theme : C[11] || CT.C11;
    let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
    this[__RecaptchaVerifierFactoryWeb__delegate] = null;
    firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__.new.call(this);
    let element = null;
    let parameters = new (T$.IdentityMapOfString$dynamic()).new();
    if (onSuccess != null) {
      parameters[$_set]("callback", dart.fn(resp => {
        onSuccess();
      }, T$.dynamicToNull()));
    }
    if (onExpired != null) {
      parameters[$_set]("expired-callback", dart.fn(() => {
        onExpired();
      }, T$.VoidToNull()));
    }
    if (onError != null) {
      parameters[$_set]("error-callback", dart.fn(error => {
        onError(web_utils.getFirebaseAuthException(error));
      }, T$.ObjectToNull()));
    }
    if (container == null || container[$isEmpty]) {
      parameters[$_set]("size", "invisible");
      let el = html.window[$document].getElementById("__ff-recaptcha-container");
      if (el != null) {
        el[$remove]();
      }
      dart.nullCheck(html.window[$document].documentElement)[$children][$add]((t35 = html.DivElement.new(), (() => {
        t35[$id] = "__ff-recaptcha-container";
        return t35;
      })()));
      element = "__ff-recaptcha-container";
    } else {
      parameters[$_set]("size", web_utils.convertRecaptchaVerifierSize(size));
      parameters[$_set]("theme", web_utils.convertRecaptchaVerifierTheme(theme));
      if (!(html.window[$document].getElementById(container) != null)) dart.assertFailed("An exception was thrown whilst creating a RecaptchaVerifier instance. No DOM element with an ID of " + dart.str(container) + " could be found.", I[16], 84, 9, "window.document.getElementById(container) != null");
      element = container;
    }
    this[_delegate] = auth$.RecaptchaVerifier.new(element, parameters, auth.delegate);
  }).prototype = firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.prototype;
  dart.addTypeTests(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb);
  dart.addTypeCaches(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb);
  dart.setGetterSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ({
    __proto__: dart.getGetters(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__),
    [_delegate]: auth$.RecaptchaVerifier,
    delegate: auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))
  }));
  dart.setSetterSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ({
    __proto__: dart.getSetters(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__),
    [_delegate]: auth$.RecaptchaVerifier
  }));
  dart.setStaticGetterSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ['instance']);
  dart.setLibraryUri(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, I[18]);
  dart.setFieldSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__),
    [__RecaptchaVerifierFactoryWeb__delegate]: dart.fieldType(dart.nullable(auth$.RecaptchaVerifier))
  }));
  dart.defineLazy(firebase_auth_web_recaptcha_verifier_factory, {
    /*firebase_auth_web_recaptcha_verifier_factory._kInvisibleElementId*/get _kInvisibleElementId() {
      return "__ff-recaptcha-container";
    }
  }, false);
  var _webUser$ = dart.privateName(firebase_auth_web_user, "_webUser");
  var _webAuth$1 = dart.privateName(firebase_auth_web_user, "_webAuth");
  var auth$1 = dart.privateName(platform_interface_user, "UserPlatform.auth");
  var multiFactor$ = dart.privateName(platform_interface_user, "UserPlatform.multiFactor");
  var _user = dart.privateName(platform_interface_user, "_user");
  platform_interface_user.UserPlatform = class UserPlatform extends plugin_platform_interface.PlatformInterface {
    get auth() {
      return this[auth$1];
    }
    set auth(value) {
      super.auth = value;
    }
    get multiFactor() {
      return this[multiFactor$];
    }
    set multiFactor(value) {
      super.multiFactor = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_user.UserPlatform._token);
    }
    get displayName() {
      return this[_user].userInfo.displayName;
    }
    get email() {
      return this[_user].userInfo.email;
    }
    get isEmailVerified() {
      return this[_user].userInfo.isEmailVerified;
    }
    get isAnonymous() {
      return this[_user].userInfo.isAnonymous;
    }
    get metadata() {
      return new user_metadata.UserMetadata.new(this[_user].userInfo.creationTimestamp, this[_user].userInfo.lastSignInTimestamp);
    }
    get phoneNumber() {
      return this[_user].userInfo.phoneNumber;
    }
    get photoURL() {
      return this[_user].userInfo.photoUrl;
    }
    get providerData() {
      let inputData = iterable_extensions['IterableNullableExtension|whereNotNull'](T$.MapOfObjectN$ObjectN(), this[_user].providerData);
      let providerData = T$.JSArrayOfUserInfo().of([]);
      for (let info of inputData) {
        providerData[$add](new user_info.UserInfo.fromJson(info));
      }
      return providerData;
    }
    get refreshToken() {
      return this[_user].userInfo.refreshToken;
    }
    get tenantId() {
      return this[_user].userInfo.tenantId;
    }
    get uid() {
      return this[_user].userInfo.uid;
    }
    delete() {
      return async.async(dart.void, function* $delete() {
        dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
      });
    }
    getIdToken(forceRefresh) {
      dart.throw(new core.UnimplementedError.new("getIdToken() is not implemented"));
    }
    getIdTokenResult(forceRefresh) {
      dart.throw(new core.UnimplementedError.new("getIdTokenResult() is not implemented"));
    }
    linkWithCredential(credential) {
      dart.throw(new core.UnimplementedError.new("linkWithCredential() is not implemented"));
    }
    linkWithProvider(provider) {
      dart.throw(new core.UnimplementedError.new("linkWithProvider() is not implemented"));
    }
    reauthenticateWithProvider(provider) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithProvider() is not implemented"));
    }
    reauthenticateWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithPopup() is not implemented"));
    }
    reauthenticateWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithRedirect() is not implemented"));
    }
    linkWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("linkWithPopup() is not implemented"));
    }
    linkWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("linkWithRedirect() is not implemented"));
    }
    linkWithPhoneNumber(phoneNumber, applicationVerifier) {
      dart.throw(new core.UnimplementedError.new("linkWithPhoneNumber() is not implemented"));
    }
    reauthenticateWithCredential(credential) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithCredential() is not implemented"));
    }
    reload() {
      return async.async(dart.void, function* reload() {
        dart.throw(new core.UnimplementedError.new("reload() is not implemented"));
      });
    }
    sendEmailVerification(actionCodeSettings) {
      return async.async(dart.void, function* sendEmailVerification() {
        dart.throw(new core.UnimplementedError.new("sendEmailVerification() is not implemented"));
      });
    }
    unlink(providerId) {
      return async.async(platform_interface_user.UserPlatform, function* unlink() {
        dart.throw(new core.UnimplementedError.new("unlink() is not implemented"));
      });
    }
    updateEmail(newEmail) {
      return async.async(dart.void, function* updateEmail() {
        dart.throw(new core.UnimplementedError.new("updateEmail() is not implemented"));
      });
    }
    updatePassword(newPassword) {
      return async.async(dart.void, function* updatePassword() {
        dart.throw(new core.UnimplementedError.new("updatePassword() is not implemented"));
      });
    }
    updatePhoneNumber(phoneCredential) {
      return async.async(dart.void, function* updatePhoneNumber() {
        dart.throw(new core.UnimplementedError.new("updatePhoneNumber() is not implemented"));
      });
    }
    updateProfile(profile) {
      return async.async(dart.void, function* updateProfile() {
        dart.throw(new core.UnimplementedError.new("updateProfile() is not implemented"));
      });
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return async.async(dart.void, function* verifyBeforeUpdateEmail() {
        dart.throw(new core.UnimplementedError.new("verifyBeforeUpdateEmail() is not implemented"));
      });
    }
  };
  (platform_interface_user.UserPlatform.new = function(auth, multiFactor, user) {
    this[auth$1] = auth;
    this[multiFactor$] = multiFactor;
    this[_user] = user;
    platform_interface_user.UserPlatform.__proto__.new.call(this, {token: platform_interface_user.UserPlatform._token});
    ;
  }).prototype = platform_interface_user.UserPlatform.prototype;
  dart.addTypeTests(platform_interface_user.UserPlatform);
  dart.addTypeCaches(platform_interface_user.UserPlatform);
  dart.setMethodSignature(platform_interface_user.UserPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_user.UserPlatform.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    getIdToken: dart.fnType(async.Future$(dart.nullable(core.String)), [core.bool]),
    getIdTokenResult: dart.fnType(async.Future$(id_token_result.IdTokenResult), [core.bool]),
    linkWithCredential: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_credential.AuthCredential]),
    linkWithProvider: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    reauthenticateWithProvider: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    reauthenticateWithPopup: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    reauthenticateWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider.AuthProvider]),
    linkWithPopup: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    linkWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider.AuthProvider]),
    linkWithPhoneNumber: dart.fnType(async.Future$(platform_interface_confirmation_result.ConfirmationResultPlatform), [core.String, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform]),
    reauthenticateWithCredential: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_credential.AuthCredential]),
    reload: dart.fnType(async.Future$(dart.void), []),
    sendEmailVerification: dart.fnType(async.Future$(dart.void), [dart.nullable(action_code_settings.ActionCodeSettings)]),
    unlink: dart.fnType(async.Future$(platform_interface_user.UserPlatform), [core.String]),
    updateEmail: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePassword: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePhoneNumber: dart.fnType(async.Future$(dart.void), [phone_auth.PhoneAuthCredential]),
    updateProfile: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.nullable(core.String))]),
    verifyBeforeUpdateEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)])
  }));
  dart.setStaticMethodSignature(platform_interface_user.UserPlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_user.UserPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_user.UserPlatform.__proto__),
    displayName: dart.nullable(core.String),
    email: dart.nullable(core.String),
    isEmailVerified: core.bool,
    isAnonymous: core.bool,
    metadata: user_metadata.UserMetadata,
    phoneNumber: dart.nullable(core.String),
    photoURL: dart.nullable(core.String),
    providerData: core.List$(user_info.UserInfo),
    refreshToken: dart.nullable(core.String),
    tenantId: dart.nullable(core.String),
    uid: core.String
  }));
  dart.setLibraryUri(platform_interface_user.UserPlatform, I[19]);
  dart.setFieldSignature(platform_interface_user.UserPlatform, () => ({
    __proto__: dart.getFields(platform_interface_user.UserPlatform.__proto__),
    auth: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform),
    multiFactor: dart.finalFieldType(platform_interface_multi_factor.MultiFactorPlatform),
    [_user]: dart.finalFieldType(messages$46pigeon.PigeonUserDetails)
  }));
  dart.setStaticFieldSignature(platform_interface_user.UserPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_user.UserPlatform, {
    /*platform_interface_user.UserPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_user.UserWeb = class UserWeb extends platform_interface_user.UserPlatform {
    static ['_#new#tearOff'](auth, multiFactor, _webUser, _webAuth) {
      return new firebase_auth_web_user.UserWeb.new(auth, multiFactor, _webUser, _webAuth);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[_webUser$].delete();
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdToken(forceRefresh) {
      return async.async(core.String, (function* getIdToken() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return yield this[_webUser$].getIdToken(forceRefresh);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdTokenResult(forceRefresh) {
      return async.async(id_token_result.IdTokenResult, (function* getIdTokenResult() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        return web_utils.convertWebIdTokenResult(yield this[_webUser$].getIdTokenResult(forceRefresh));
      }).bind(this));
    }
    linkWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithCredential() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, yield this[_webUser$].linkWithCredential(web_utils.convertPlatformCredential(credential)), this[_webAuth$1]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth$1]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithPopup(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithPopup() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, yield this[_webUser$].linkWithPopup(web_utils.convertPlatformAuthProvider(provider)), this[_webAuth$1]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth$1]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithRedirect(provider) {
      return async.async(dart.void, (function* linkWithRedirect() {
        try {
          return this[_webUser$].linkWithRedirect(web_utils.convertPlatformAuthProvider(provider));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth$1]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithPhoneNumber(phoneNumber, applicationVerifier) {
      return async.async(platform_interface_confirmation_result.ConfirmationResultPlatform, (function* linkWithPhoneNumber() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let verifier = auth$.RecaptchaVerifier.as(applicationVerifier.delegate);
          return new firebase_auth_web_confirmation_result.ConfirmationResultWeb.new(this.auth, yield this[_webUser$].linkWithPhoneNumber(phoneNumber, verifier), this[_webAuth$1]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth$1]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithCredential() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let userCredential = (yield this[_webUser$].reauthenticateWithCredential(dart.nullCheck(web_utils.convertPlatformCredential(credential))));
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, userCredential, this[_webAuth$1]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth$1]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithPopup(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithPopup() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let userCredential = (yield this[_webUser$].reauthenticateWithPopup(web_utils.convertPlatformAuthProvider(provider)));
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, userCredential, this[_webAuth$1]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth$1]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithRedirect(provider) {
      return async.async(dart.void, (function* reauthenticateWithRedirect() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return this[_webUser$].reauthenticateWithRedirect(web_utils.convertPlatformAuthProvider(provider));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reload() {
      return async.async(dart.void, (function* reload() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[_webUser$].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth$1]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendEmailVerification(actionCodeSettings) {
      firebase_auth_web_user._assertIsSignedOut(this.auth);
      try {
        return this[_webUser$].sendEmailVerification(web_utils.convertPlatformActionCodeSettings(actionCodeSettings));
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth$1]));
        } else
          throw e$;
      }
    }
    unlink(providerId) {
      return async.async(platform_interface_user.UserPlatform, (function* unlink() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return new firebase_auth_web_user.UserWeb.new(this.auth, this.multiFactor, yield this[_webUser$].unlink(providerId), this[_webAuth$1]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth$1]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateEmail(newEmail) {
      return async.async(dart.void, (function* updateEmail() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[_webUser$].updateEmail(newEmail);
          yield this[_webUser$].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth$1]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePassword(newPassword) {
      return async.async(dart.void, (function* updatePassword() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[_webUser$].updatePassword(newPassword);
          yield this[_webUser$].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth$1]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePhoneNumber(phoneCredential) {
      return async.async(dart.void, (function* updatePhoneNumber() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[_webUser$].updatePhoneNumber(web_utils.convertPlatformCredential(phoneCredential));
          yield this[_webUser$].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth$1]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateProfile(profile) {
      return async.async(dart.void, (function* updateProfile() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let newProfile = null;
          if (profile[$containsKey]("displayName") && profile[$containsKey]("photoURL")) {
            newProfile = {displayName: profile[$_get]("displayName"), photoURL: profile[$_get]("photoURL")};
          } else if (profile[$containsKey]("displayName")) {
            newProfile = {displayName: profile[$_get]("displayName")};
          } else {
            newProfile = {photoURL: profile[$_get]("photoURL")};
          }
          yield this[_webUser$].updateProfile(newProfile);
          yield this[_webUser$].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth$1]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return async.async(dart.void, (function* verifyBeforeUpdateEmail() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[_webUser$].verifyBeforeUpdateEmail(newEmail, web_utils.convertPlatformActionCodeSettings(actionCodeSettings));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils.getFirebaseAuthException(e, this[_webAuth$1]));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_user.UserWeb.new = function(auth, multiFactor, _webUser, _webAuth) {
    this[_webUser$] = _webUser;
    this[_webAuth$1] = _webAuth;
    firebase_auth_web_user.UserWeb.__proto__.new.call(this, auth, multiFactor, new messages$46pigeon.PigeonUserDetails.new({userInfo: new messages$46pigeon.PigeonUserInfo.new({displayName: _webUser.displayName, email: _webUser.email, isEmailVerified: _webUser.emailVerified, isAnonymous: _webUser.isAnonymous, creationTimestamp: T$.intN().as(_webUser.metadata.creationTime != null ? dart.dsend(js.context._get("Date"), 'callMethod', ["parse", T$.JSArrayOfStringN().of([_webUser.metadata.creationTime])]) : null), lastSignInTimestamp: T$.intN().as(_webUser.metadata.lastSignInTime != null ? dart.dsend(js.context._get("Date"), 'callMethod', ["parse", T$.JSArrayOfStringN().of([_webUser.metadata.lastSignInTime])]) : null), phoneNumber: _webUser.phoneNumber, photoUrl: _webUser.photoURL, refreshToken: _webUser.refreshToken, tenantId: _webUser.tenantId, uid: _webUser.uid}), providerData: _webUser.providerData[$map](T$.MapOfString$dynamic(), dart.fn(webUserInfo => new (T$.IdentityMapOfString$dynamic()).from(["displayName", webUserInfo.displayName, "email", webUserInfo.email, "isAnonymous", false, "isEmailVerified", true, "phoneNumber", webUserInfo.phoneNumber, "providerId", webUserInfo.providerId, "photoUrl", webUserInfo.photoURL, "uid", webUserInfo.uid]), T$.UserInfoOfUserInfoJsImplToMapOfString$dynamic()))[$toList]()}));
    ;
  }).prototype = firebase_auth_web_user.UserWeb.prototype;
  dart.addTypeTests(firebase_auth_web_user.UserWeb);
  dart.addTypeCaches(firebase_auth_web_user.UserWeb);
  dart.setMethodSignature(firebase_auth_web_user.UserWeb, () => ({
    __proto__: dart.getMethods(firebase_auth_web_user.UserWeb.__proto__),
    getIdToken: dart.fnType(async.Future$(core.String), [core.bool])
  }));
  dart.setLibraryUri(firebase_auth_web_user.UserWeb, I[20]);
  dart.setFieldSignature(firebase_auth_web_user.UserWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_user.UserWeb.__proto__),
    [_webUser$]: dart.finalFieldType(auth$.User),
    [_webAuth$1]: dart.finalFieldType(dart.nullable(auth$.Auth))
  }));
  firebase_auth_web_user._assertIsSignedOut = function _assertIsSignedOut(instance) {
    if (instance.currentUser == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "no-current-user", message: "No user currently signed in."}));
    }
  };
  var auth$2 = dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.auth");
  var additionalUserInfo$ = dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.additionalUserInfo");
  var credential$ = dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.credential");
  var user$ = dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.user");
  platform_interface_user_credential.UserCredentialPlatform = class UserCredentialPlatform extends plugin_platform_interface.PlatformInterface {
    get auth() {
      return this[auth$2];
    }
    set auth(value) {
      super.auth = value;
    }
    get additionalUserInfo() {
      return this[additionalUserInfo$];
    }
    set additionalUserInfo(value) {
      super.additionalUserInfo = value;
    }
    get credential() {
      return this[credential$];
    }
    set credential(value) {
      super.credential = value;
    }
    get user() {
      return this[user$];
    }
    set user(value) {
      super.user = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_user_credential.UserCredentialPlatform._token);
    }
  };
  (platform_interface_user_credential.UserCredentialPlatform.new = function(opts) {
    let auth = opts && 'auth' in opts ? opts.auth : null;
    let additionalUserInfo = opts && 'additionalUserInfo' in opts ? opts.additionalUserInfo : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    let user = opts && 'user' in opts ? opts.user : null;
    this[auth$2] = auth;
    this[additionalUserInfo$] = additionalUserInfo;
    this[credential$] = credential;
    this[user$] = user;
    platform_interface_user_credential.UserCredentialPlatform.__proto__.new.call(this, {token: platform_interface_user_credential.UserCredentialPlatform._token});
    ;
  }).prototype = platform_interface_user_credential.UserCredentialPlatform.prototype;
  dart.addTypeTests(platform_interface_user_credential.UserCredentialPlatform);
  dart.addTypeCaches(platform_interface_user_credential.UserCredentialPlatform);
  dart.setStaticMethodSignature(platform_interface_user_credential.UserCredentialPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_user_credential.UserCredentialPlatform, I[21]);
  dart.setFieldSignature(platform_interface_user_credential.UserCredentialPlatform, () => ({
    __proto__: dart.getFields(platform_interface_user_credential.UserCredentialPlatform.__proto__),
    auth: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform),
    additionalUserInfo: dart.finalFieldType(dart.nullable(additional_user_info.AdditionalUserInfo)),
    credential: dart.finalFieldType(dart.nullable(auth_credential.AuthCredential)),
    user: dart.finalFieldType(dart.nullable(platform_interface_user.UserPlatform))
  }));
  dart.setStaticFieldSignature(platform_interface_user_credential.UserCredentialPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_user_credential.UserCredentialPlatform, {
    /*platform_interface_user_credential.UserCredentialPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_user_credential.UserCredentialWeb = class UserCredentialWeb extends platform_interface_user_credential.UserCredentialPlatform {
    static ['_#new#tearOff'](auth, webUserCredential, webAuth) {
      return new firebase_auth_web_user_credential.UserCredentialWeb.new(auth, webUserCredential, webAuth);
    }
  };
  (firebase_auth_web_user_credential.UserCredentialWeb.new = function(auth, webUserCredential, webAuth) {
    firebase_auth_web_user_credential.UserCredentialWeb.__proto__.new.call(this, {auth: auth, additionalUserInfo: web_utils.convertWebAdditionalUserInfo(webUserCredential.additionalUserInfo), credential: web_utils.convertWebOAuthCredential(webUserCredential), user: new firebase_auth_web_user.UserWeb.new(auth, new firebase_auth_web_multi_factor.MultiFactorWeb.new(auth, multi_factor.multiFactor(dart.nullCheck(webUserCredential.user))), dart.nullCheck(webUserCredential.user), webAuth)});
    ;
  }).prototype = firebase_auth_web_user_credential.UserCredentialWeb.prototype;
  dart.addTypeTests(firebase_auth_web_user_credential.UserCredentialWeb);
  dart.addTypeCaches(firebase_auth_web_user_credential.UserCredentialWeb);
  dart.setLibraryUri(firebase_auth_web_user_credential.UserCredentialWeb, I[22]);
  var jsObject$ = dart.privateName(js$0, "JsObjectWrapper.jsObject");
  const _is_JsObjectWrapper_default = Symbol('_is_JsObjectWrapper_default');
  js$0.JsObjectWrapper$ = dart.generic(T => {
    class JsObjectWrapper extends core.Object {
      get jsObject() {
        return this[jsObject$];
      }
      set jsObject(value) {
        super.jsObject = value;
      }
    }
    (JsObjectWrapper.fromJsObject = function(jsObject) {
      this[jsObject$] = jsObject;
      ;
    }).prototype = JsObjectWrapper.prototype;
    dart.addTypeTests(JsObjectWrapper);
    JsObjectWrapper.prototype[_is_JsObjectWrapper_default] = true;
    dart.addTypeCaches(JsObjectWrapper);
    dart.setLibraryUri(JsObjectWrapper, I[23]);
    dart.setFieldSignature(JsObjectWrapper, () => ({
      __proto__: dart.getFields(JsObjectWrapper.__proto__),
      jsObject: dart.finalFieldType(T)
    }));
    return JsObjectWrapper;
  });
  js$0.JsObjectWrapper = js$0.JsObjectWrapper$();
  dart.addTypeTests(js$0.JsObjectWrapper, _is_JsObjectWrapper_default);
  const _is_UserInfo_default = Symbol('_is_UserInfo_default');
  auth$.UserInfo$ = dart.generic(T => {
    class UserInfo extends js$0.JsObjectWrapper$(T) {
      get displayName() {
        return this.jsObject.displayName;
      }
      get email() {
        return this.jsObject.email;
      }
      get phoneNumber() {
        return this.jsObject.phoneNumber;
      }
      get photoURL() {
        return this.jsObject.photoURL;
      }
      get providerId() {
        return this.jsObject.providerId;
      }
      get uid() {
        return this.jsObject.uid;
      }
      static ['_#_fromJsObject#tearOff'](T, jsObject) {
        return new (auth$.UserInfo$(T))._fromJsObject(jsObject);
      }
    }
    (UserInfo._fromJsObject = function(jsObject) {
      UserInfo.__proto__.fromJsObject.call(this, T.as(jsObject));
      ;
    }).prototype = UserInfo.prototype;
    dart.addTypeTests(UserInfo);
    UserInfo.prototype[_is_UserInfo_default] = true;
    dart.addTypeCaches(UserInfo);
    dart.setGetterSignature(UserInfo, () => ({
      __proto__: dart.getGetters(UserInfo.__proto__),
      displayName: dart.nullable(core.String),
      email: dart.nullable(core.String),
      phoneNumber: dart.nullable(core.String),
      photoURL: dart.nullable(core.String),
      providerId: core.String,
      uid: core.String
    }));
    dart.setLibraryUri(UserInfo, I[24]);
    return UserInfo;
  });
  auth$.UserInfo = auth$.UserInfo$();
  dart.addTypeTests(auth$.UserInfo, _is_UserInfo_default);
  auth$.User = class User extends auth$.UserInfo$(dart.packageJSType("UserJsImpl", false)) {
    get uid() {
      return this.jsObject.uid;
    }
    get emailVerified() {
      return this.jsObject.emailVerified;
    }
    get isAnonymous() {
      return this.jsObject.isAnonymous;
    }
    get tenantId() {
      return this.jsObject.tenantId;
    }
    get metadata() {
      return this.jsObject.metadata;
    }
    get providerData() {
      return this.jsObject.providerData[$map](T$.UserInfoOfUserInfoJsImpl(), dart.fn(data => new (T$.UserInfoOfUserInfoJsImpl())._fromJsObject(dart.packageJSType("UserInfoJsImpl", false).as(data)), T$.dynamicToUserInfoOfUserInfoJsImpl()))[$toList]();
    }
    get refreshToken() {
      return this.jsObject.refreshToken;
    }
    static getInstance(jsObject) {
      let t57, t56, t55, t54;
      if (jsObject == null) {
        return null;
      }
      t54 = auth$.User._expando;
      t55 = jsObject;
      t56 = t54._get(t55);
      return t56 == null ? (t57 = new auth$.User._fromJsObject(jsObject), t54._set(t55, t57), t57) : t56;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new auth$.User._fromJsObject(jsObject);
    }
    delete() {
      return utils$.handleThenable(dart.void, this.jsObject.delete());
    }
    getIdToken(forceRefresh = false) {
      return utils$.handleThenable(core.String, this.jsObject.getIdToken(forceRefresh));
    }
    linkWithCredential(credential) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.linkWithCredential(this.jsObject, credential)).then(auth$.UserCredential, C[13] || CT.C13);
    }
    linkWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils$.handleThenable(dart.packageJSType("firebase_auth.ConfirmationResult", false), dart.global.firebase_auth.linkWithPhoneNumber(this.jsObject, phoneNumber, applicationVerifier.jsObject)).then(auth$.ConfirmationResult, C[14] || CT.C14);
    }
    linkWithPopup(provider) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.linkWithPopup(this.jsObject, provider.jsObject)).then(auth$.UserCredential, C[13] || CT.C13);
    }
    linkWithRedirect(provider) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.linkWithRedirect(this.jsObject, provider.jsObject));
    }
    reauthenticateWithCredential(credential) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.reauthenticateWithCredential(this.jsObject, credential)).then(auth$.UserCredential, C[13] || CT.C13);
    }
    reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils$.handleThenable(dart.packageJSType("firebase_auth.ConfirmationResult", false), dart.global.firebase_auth.reauthenticateWithPhoneNumber(this.jsObject, phoneNumber, applicationVerifier.jsObject)).then(auth$.ConfirmationResult, C[14] || CT.C14);
    }
    reauthenticateWithPopup(provider) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.reauthenticateWithPopup(this.jsObject, provider.jsObject)).then(auth$.UserCredential, C[13] || CT.C13);
    }
    reauthenticateWithRedirect(provider) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.reauthenticateWithRedirect(this.jsObject, provider.jsObject));
    }
    reload() {
      return utils$.handleThenable(dart.void, this.jsObject.reload());
    }
    sendEmailVerification(actionCodeSettings = null) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.sendEmailVerification(this.jsObject, actionCodeSettings));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.verifyBeforeUpdateEmail(this.jsObject, newEmail, actionCodeSettings));
    }
    unlink(providerId) {
      return utils$.handleThenable(dart.packageJSType("UserJsImpl", false), dart.global.firebase_auth.unlink(this.jsObject, providerId)).then(auth$.User, dart.fn(user => dart.nullCheck(auth$.User.getInstance(user)), T$.UserJsImplToUser()));
    }
    updateEmail(newEmail) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.updateEmail(this.jsObject, newEmail));
    }
    updatePassword(newPassword) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.updatePassword(this.jsObject, newPassword));
    }
    updatePhoneNumber(phoneCredential) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.updatePhoneNumber(this.jsObject, phoneCredential));
    }
    updateProfile(profile) {
      return utils$.handleThenable(dart.void, dart.global.firebase_auth.updateProfile(this.jsObject, profile));
    }
    getIdTokenResult(forceRefresh = null) {
      let promise = forceRefresh == null ? this.jsObject.getIdTokenResult() : this.jsObject.getIdTokenResult(forceRefresh);
      return utils$.handleThenable(dart.packageJSType("IdTokenResultImpl", false), promise).then(auth$.IdTokenResult, C[15] || CT.C15);
    }
    toJson() {
      return T$.MapOfString$dynamic().as(utils.dartify(this.jsObject.toJSON()));
    }
    toString() {
      return "User: " + this.uid;
    }
  };
  (auth$.User._fromJsObject = function(jsObject) {
    auth$.User.__proto__._fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.User.prototype;
  dart.addTypeTests(auth$.User);
  dart.addTypeCaches(auth$.User);
  dart.setMethodSignature(auth$.User, () => ({
    __proto__: dart.getMethods(auth$.User.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    getIdToken: dart.fnType(async.Future$(core.String), [], [core.bool]),
    linkWithCredential: dart.fnType(async.Future$(auth$.UserCredential), [dart.nullable(dart.packageJSType("OAuthCredential", false))]),
    linkWithPhoneNumber: dart.fnType(async.Future$(auth$.ConfirmationResult), [core.String, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))]),
    linkWithPopup: dart.fnType(async.Future$(auth$.UserCredential), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    linkWithRedirect: dart.fnType(async.Future$(dart.void), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    reauthenticateWithCredential: dart.fnType(async.Future$(auth$.UserCredential), [dart.packageJSType("OAuthCredential", false)]),
    reauthenticateWithPhoneNumber: dart.fnType(async.Future$(auth$.ConfirmationResult), [core.String, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))]),
    reauthenticateWithPopup: dart.fnType(async.Future$(auth$.UserCredential), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    reauthenticateWithRedirect: dart.fnType(async.Future$(dart.void), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    reload: dart.fnType(async.Future$(dart.void), []),
    sendEmailVerification: dart.fnType(async.Future$(dart.void), [], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    verifyBeforeUpdateEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    unlink: dart.fnType(async.Future$(auth$.User), [core.String]),
    updateEmail: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePassword: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePhoneNumber: dart.fnType(async.Future$(dart.void), [dart.nullable(dart.packageJSType("OAuthCredential", false))]),
    updateProfile: dart.fnType(async.Future$(dart.void), [dart.packageJSType("UserProfile", false)]),
    getIdTokenResult: dart.fnType(async.Future$(auth$.IdTokenResult), [], [dart.nullable(core.bool)]),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setStaticMethodSignature(auth$.User, () => ['getInstance']);
  dart.setGetterSignature(auth$.User, () => ({
    __proto__: dart.getGetters(auth$.User.__proto__),
    emailVerified: core.bool,
    isAnonymous: core.bool,
    tenantId: dart.nullable(core.String),
    metadata: dart.packageJSType("firebase_auth.UserMetadata", false),
    providerData: core.List$(auth$.UserInfo$(dart.packageJSType("UserInfoJsImpl", false))),
    refreshToken: core.String
  }));
  dart.setLibraryUri(auth$.User, I[24]);
  dart.setStaticFieldSignature(auth$.User, () => ['_expando']);
  dart.defineExtensionMethods(auth$.User, ['toString']);
  dart.defineLazy(auth$.User, {
    /*auth$.User._expando*/get _expando() {
      return new (T$.ExpandoOfUser()).new();
    }
  }, false);
  auth$.IdTokenResult = class IdTokenResult extends js$0.JsObjectWrapper$(dart.packageJSType("IdTokenResultImpl", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new auth$.IdTokenResult._fromJsObject(jsObject);
    }
    get authTime() {
      return http_date.parseHttpDate(this.jsObject.authTime);
    }
    get claims() {
      return T$.MapNOfString$dynamic().as(utils.dartify(this.jsObject.claims));
    }
    get expirationTime() {
      return http_date.parseHttpDate(this.jsObject.expirationTime);
    }
    get issuedAtTime() {
      return http_date.parseHttpDate(this.jsObject.issuedAtTime);
    }
    get signInProvider() {
      return this.jsObject.signInProvider;
    }
    get token() {
      return this.jsObject.token;
    }
  };
  (auth$.IdTokenResult._fromJsObject = function(jsObject) {
    auth$.IdTokenResult.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.IdTokenResult.prototype;
  dart.addTypeTests(auth$.IdTokenResult);
  dart.addTypeCaches(auth$.IdTokenResult);
  dart.setGetterSignature(auth$.IdTokenResult, () => ({
    __proto__: dart.getGetters(auth$.IdTokenResult.__proto__),
    authTime: core.DateTime,
    claims: dart.nullable(core.Map$(core.String, dart.dynamic)),
    expirationTime: core.DateTime,
    issuedAtTime: core.DateTime,
    signInProvider: core.String,
    token: core.String
  }));
  dart.setLibraryUri(auth$.IdTokenResult, I[24]);
  var _initUser = dart.privateName(auth$, "_initUser");
  var _onAuthUnsubscribe = dart.privateName(auth$, "_onAuthUnsubscribe");
  var _changeController = dart.privateName(auth$, "_changeController");
  var _onIdTokenChangedUnsubscribe = dart.privateName(auth$, "_onIdTokenChangedUnsubscribe");
  var _idTokenChangedController = dart.privateName(auth$, "_idTokenChangedController");
  auth$.Auth = class Auth extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_auth.Auth", false)) {
    get app() {
      return app$.App.getInstance(this.jsObject.app);
    }
    get currentUser() {
      return auth$.User.getInstance(this.jsObject.currentUser);
    }
    get tenantId() {
      return this.jsObject.tenantId;
    }
    set tenantId(tenantId) {
      this.jsObject.tenantId = tenantId;
    }
    get languageCode() {
      return this.jsObject.languageCode;
    }
    set languageCode(s) {
      this.jsObject.languageCode = s;
    }
    get settings() {
      return this.jsObject.settings;
    }
    onWaitInitState() {
      return async.async(dart.void, (function* onWaitInitState() {
        let completer = async.Completer.new();
        let nextWrapper = js.allowInterop(T$.UserJsImplNToNull(), dart.fn(user => {
          this[_initUser] = auth$.User.getInstance(user);
          completer.complete();
        }, T$.UserJsImplNToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => dart.nullCheck(this[_changeController]).addError(core.Object.as(e)), T$.dynamicTovoid()));
        let unsubscribe = this.jsObject.onAuthStateChanged(dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper));
        yield completer.future;
        unsubscribe();
      }).bind(this));
    }
    get onAuthStateChanged() {
      if (this[_changeController] == null) {
        let nextWrapper = js.allowInterop(T$.UserJsImplNToNull(), dart.fn(user => {
          dart.nullCheck(this[_changeController]).add(auth$.User.getInstance(user));
        }, T$.UserJsImplNToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => dart.nullCheck(this[_changeController]).addError(core.Object.as(e)), T$.dynamicTovoid()));
        const startListen = () => {
          if (!(this[_onAuthUnsubscribe] == null)) dart.assertFailed(null, I[25], 407, 16, "_onAuthUnsubscribe == null");
          this[_onAuthUnsubscribe] = this.jsObject.onAuthStateChanged(dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper));
        };
        dart.fn(startListen, T$.VoidTovoid());
        const stopListen = () => {
          dart.nullCheck(this[_onAuthUnsubscribe])();
          this[_onAuthUnsubscribe] = null;
        };
        dart.fn(stopListen, T$.VoidTovoid());
        this[_changeController] = T$.StreamControllerOfUserN().broadcast({onListen: startListen, onCancel: stopListen, sync: true});
        dart.nullCheck(this[_changeController]).add(this[_initUser]);
      }
      return dart.nullCheck(this[_changeController]).stream;
    }
    get onIdTokenChanged() {
      if (this[_idTokenChangedController] == null) {
        let nextWrapper = js.allowInterop(T$.UserJsImplNToNull(), dart.fn(user => {
          dart.nullCheck(this[_idTokenChangedController]).add(auth$.User.getInstance(user));
        }, T$.UserJsImplNToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => dart.nullCheck(this[_idTokenChangedController]).addError(core.Object.as(e)), T$.dynamicTovoid()));
        const startListen = () => {
          if (!(this[_onIdTokenChangedUnsubscribe] == null)) dart.assertFailed(null, I[25], 449, 16, "_onIdTokenChangedUnsubscribe == null");
          this[_onIdTokenChangedUnsubscribe] = this.jsObject.onIdTokenChanged(dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper));
        };
        dart.fn(startListen, T$.VoidTovoid());
        const stopListen = () => {
          dart.nullCheck(this[_onIdTokenChangedUnsubscribe])();
          this[_onIdTokenChangedUnsubscribe] = null;
        };
        dart.fn(stopListen, T$.VoidTovoid());
        this[_idTokenChangedController] = T$.StreamControllerOfUserN().broadcast({onListen: startListen, onCancel: stopListen, sync: true});
      }
      return dart.nullCheck(this[_idTokenChangedController]).stream;
    }
    static getInstance(jsObject) {
      let t57, t56, t55, t54;
      t54 = auth$.Auth._expando;
      t55 = jsObject;
      t56 = t54._get(t55);
      return t56 == null ? (t57 = new auth$.Auth._fromJsObject(jsObject), t54._set(t55, t57), t57) : t56;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new auth$.Auth._fromJsObject(jsObject);
    }
    applyActionCode(oobCode) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.applyActionCode(this.jsObject, oobCode));
    }
    checkActionCode(code) {
      return utils$.handleThenable(dart.packageJSType("firebase_auth.ActionCodeInfo", false), dart.global.firebase_auth.checkActionCode(this.jsObject, code));
    }
    confirmPasswordReset(code, newPassword) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.confirmPasswordReset(this.jsObject, code, newPassword));
    }
    createUserWithEmailAndPassword(email, password) {
      return async.async(auth$.UserCredential, (function* createUserWithEmailAndPassword() {
        let u = (yield utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.createUserWithEmailAndPassword(this.jsObject, email, password)));
        return new auth$.UserCredential.fromJsObject(u);
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return utils$.handleThenable(core.List, dart.global.firebase_auth.fetchSignInMethodsForEmail(this.jsObject, email)).then(T$.ListOfString(), C[16] || CT.C16);
    }
    isSignInWithEmailLink(emailLink) {
      return dart.global.firebase_auth.isSignInWithEmailLink(emailLink);
    }
    getRedirectResult() {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.getRedirectResult(this.jsObject)).then(auth$.UserCredential, C[13] || CT.C13);
    }
    sendSignInLinkToEmail(email, actionCodeSettings = null) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.sendSignInLinkToEmail(this.jsObject, email, actionCodeSettings));
    }
    setPersistence(persistence) {
      let instance = null;
      switch (persistence) {
        case C[18] || CT.C18:
          {
            instance = dart.global.firebase_auth.browserLocalPersistence;
            break;
          }
        case C[19] || CT.C19:
          {
            instance = dart.global.firebase_auth.indexedDBLocalPersistence;
            break;
          }
        case C[20] || CT.C20:
          {
            instance = dart.global.firebase_auth.browserSessionPersistence;
            break;
          }
        case C[21] || CT.C21:
          {
            instance = dart.global.firebase_auth.inMemoryPersistence;
            break;
          }
      }
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.setPersistence(this.jsObject, instance));
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.sendPasswordResetEmail(this.jsObject, email, actionCodeSettings));
    }
    signInWithCredential(credential) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithCredential(this.jsObject, credential)).then(auth$.UserCredential, C[13] || CT.C13);
    }
    signInAnonymously() {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInAnonymously(this.jsObject)).then(auth$.UserCredential, C[13] || CT.C13);
    }
    signInWithCustomToken(token) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithCustomToken(this.jsObject, token)).then(auth$.UserCredential, C[13] || CT.C13);
    }
    signInAndRetrieveDataWithCustomToken(token) {
      return this.signInWithCustomToken(token);
    }
    signInWithEmailAndPassword(email, password) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithEmailAndPassword(this.jsObject, email, password)).then(auth$.UserCredential, C[13] || CT.C13);
    }
    signInWithEmailLink(email, emailLink) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithEmailLink(this.jsObject, email, emailLink)).then(auth$.UserCredential, C[13] || CT.C13);
    }
    signInWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils$.handleThenable(dart.packageJSType("firebase_auth.ConfirmationResult", false), dart.global.firebase_auth.signInWithPhoneNumber(this.jsObject, phoneNumber, applicationVerifier.jsObject)).then(auth$.ConfirmationResult, C[14] || CT.C14);
    }
    signInWithPopup(provider) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithPopup(this.jsObject, provider.jsObject)).then(auth$.UserCredential, C[13] || CT.C13);
    }
    signInWithRedirect(provider) {
      return utils$.handleThenable(dart.dynamic, dart.global.firebase_auth.signInWithRedirect(this.jsObject, provider.jsObject));
    }
    signOut() {
      return utils$.handleThenable(dart.dynamic, this.jsObject.signOut());
    }
    useAuthEmulator(origin) {
      return dart.global.firebase_auth.connectAuthEmulator(this.jsObject, origin);
    }
    useDeviceLanguage() {
      return this.jsObject.useDeviceLanguage();
    }
    verifyPasswordResetCode(code) {
      return utils$.handleThenable(core.String, dart.global.firebase_auth.verifyPasswordResetCode(this.jsObject, code));
    }
  };
  (auth$.Auth._fromJsObject = function(jsObject) {
    this[_initUser] = null;
    this[_onAuthUnsubscribe] = null;
    this[_changeController] = null;
    this[_onIdTokenChangedUnsubscribe] = null;
    this[_idTokenChangedController] = null;
    auth$.Auth.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.Auth.prototype;
  dart.addTypeTests(auth$.Auth);
  dart.addTypeCaches(auth$.Auth);
  dart.setMethodSignature(auth$.Auth, () => ({
    __proto__: dart.getMethods(auth$.Auth.__proto__),
    onWaitInitState: dart.fnType(async.Future$(dart.void), []),
    applyActionCode: dart.fnType(async.Future, [core.String]),
    checkActionCode: dart.fnType(async.Future$(dart.packageJSType("firebase_auth.ActionCodeInfo", false)), [core.String]),
    confirmPasswordReset: dart.fnType(async.Future, [core.String, core.String]),
    createUserWithEmailAndPassword: dart.fnType(async.Future$(auth$.UserCredential), [core.String, core.String]),
    fetchSignInMethodsForEmail: dart.fnType(async.Future$(core.List$(core.String)), [core.String]),
    isSignInWithEmailLink: dart.fnType(core.bool, [core.String]),
    getRedirectResult: dart.fnType(async.Future$(auth$.UserCredential), []),
    sendSignInLinkToEmail: dart.fnType(async.Future, [core.String], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    setPersistence: dart.fnType(async.Future, [types.Persistence]),
    sendPasswordResetEmail: dart.fnType(async.Future, [core.String], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    signInWithCredential: dart.fnType(async.Future$(auth$.UserCredential), [dart.packageJSType("OAuthCredential", false)]),
    signInAnonymously: dart.fnType(async.Future$(auth$.UserCredential), []),
    signInWithCustomToken: dart.fnType(async.Future$(auth$.UserCredential), [core.String]),
    signInAndRetrieveDataWithCustomToken: dart.fnType(async.Future$(auth$.UserCredential), [core.String]),
    signInWithEmailAndPassword: dart.fnType(async.Future$(auth$.UserCredential), [core.String, core.String]),
    signInWithEmailLink: dart.fnType(async.Future$(auth$.UserCredential), [core.String, core.String]),
    signInWithPhoneNumber: dart.fnType(async.Future$(auth$.ConfirmationResult), [core.String, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))]),
    signInWithPopup: dart.fnType(async.Future$(auth$.UserCredential), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    signInWithRedirect: dart.fnType(async.Future, [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    signOut: dart.fnType(async.Future, []),
    useAuthEmulator: dart.fnType(dart.void, [core.String]),
    useDeviceLanguage: dart.fnType(dart.void, []),
    verifyPasswordResetCode: dart.fnType(async.Future$(core.String), [core.String])
  }));
  dart.setStaticMethodSignature(auth$.Auth, () => ['getInstance']);
  dart.setGetterSignature(auth$.Auth, () => ({
    __proto__: dart.getGetters(auth$.Auth.__proto__),
    app: app$.App,
    currentUser: dart.nullable(auth$.User),
    tenantId: dart.nullable(core.String),
    languageCode: core.String,
    settings: dart.packageJSType("AuthSettings", false),
    onAuthStateChanged: async.Stream$(dart.nullable(auth$.User)),
    onIdTokenChanged: async.Stream$(dart.nullable(auth$.User))
  }));
  dart.setSetterSignature(auth$.Auth, () => ({
    __proto__: dart.getSetters(auth$.Auth.__proto__),
    tenantId: dart.nullable(core.String),
    languageCode: dart.nullable(core.String)
  }));
  dart.setLibraryUri(auth$.Auth, I[24]);
  dart.setFieldSignature(auth$.Auth, () => ({
    __proto__: dart.getFields(auth$.Auth.__proto__),
    [_initUser]: dart.fieldType(dart.nullable(auth$.User)),
    [_onAuthUnsubscribe]: dart.fieldType(dart.nullable(dart.fnType(dart.dynamic, []))),
    [_changeController]: dart.fieldType(dart.nullable(async.StreamController$(dart.nullable(auth$.User)))),
    [_onIdTokenChangedUnsubscribe]: dart.fieldType(dart.nullable(dart.fnType(dart.dynamic, []))),
    [_idTokenChangedController]: dart.fieldType(dart.nullable(async.StreamController$(dart.nullable(auth$.User))))
  }));
  dart.setStaticFieldSignature(auth$.Auth, () => ['_expando']);
  dart.defineLazy(auth$.Auth, {
    /*auth$.Auth._expando*/get _expando() {
      return new (T$.ExpandoOfAuth()).new();
    }
  }, false);
  const _is_AuthProvider_default = Symbol('_is_AuthProvider_default');
  auth$.AuthProvider$ = dart.generic(T => {
    class AuthProvider extends js$0.JsObjectWrapper$(T) {
      get providerId() {
        return this.jsObject.providerId;
      }
    }
    (AuthProvider.fromJsObject = function(jsObject) {
      AuthProvider.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = AuthProvider.prototype;
    dart.addTypeTests(AuthProvider);
    AuthProvider.prototype[_is_AuthProvider_default] = true;
    dart.addTypeCaches(AuthProvider);
    dart.setGetterSignature(AuthProvider, () => ({
      __proto__: dart.getGetters(AuthProvider.__proto__),
      providerId: core.String
    }));
    dart.setLibraryUri(AuthProvider, I[24]);
    return AuthProvider;
  });
  auth$.AuthProvider = auth$.AuthProvider$();
  dart.addTypeTests(auth$.AuthProvider, _is_AuthProvider_default);
  auth$.EmailAuthProvider = class EmailAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.EmailAuthProvider", false)) {
    static new() {
      return new auth$.EmailAuthProvider.fromJsObject(new dart.global.firebase_auth.EmailAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.EmailAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.EmailAuthProvider.fromJsObject(jsObject);
    }
    static credential(email, password) {
      return dart.packageJSType("OAuthCredential", false).as(dart.global.firebase_auth.EmailAuthProvider.credential(email, password));
    }
    static credentialWithLink(email, emailLink) {
      return dart.packageJSType("OAuthCredential", false).as(dart.global.firebase_auth.EmailAuthProvider.credentialWithLink(email, emailLink));
    }
  };
  (auth$.EmailAuthProvider.fromJsObject = function(jsObject) {
    auth$.EmailAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.EmailAuthProvider.prototype;
  dart.addTypeTests(auth$.EmailAuthProvider);
  dart.addTypeCaches(auth$.EmailAuthProvider);
  dart.setStaticMethodSignature(auth$.EmailAuthProvider, () => ['new', 'credential', 'credentialWithLink']);
  dart.setLibraryUri(auth$.EmailAuthProvider, I[24]);
  dart.setStaticFieldSignature(auth$.EmailAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.EmailAuthProvider, {
    /*auth$.EmailAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.EmailAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.FacebookAuthProvider = class FacebookAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.FacebookAuthProvider", false)) {
    static new() {
      return new auth$.FacebookAuthProvider.fromJsObject(new dart.global.firebase_auth.FacebookAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.FacebookAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.FacebookAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.FacebookAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.FacebookAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    static credential(token) {
      return dart.global.firebase_auth.FacebookAuthProvider.credential(token);
    }
  };
  (auth$.FacebookAuthProvider.fromJsObject = function(jsObject) {
    auth$.FacebookAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.FacebookAuthProvider.prototype;
  dart.addTypeTests(auth$.FacebookAuthProvider);
  dart.addTypeCaches(auth$.FacebookAuthProvider);
  dart.setMethodSignature(auth$.FacebookAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.FacebookAuthProvider.__proto__),
    addScope: dart.fnType(auth$.FacebookAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.FacebookAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.FacebookAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.FacebookAuthProvider, I[24]);
  dart.setStaticFieldSignature(auth$.FacebookAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.FacebookAuthProvider, {
    /*auth$.FacebookAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.FacebookAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.GithubAuthProvider = class GithubAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.GithubAuthProvider", false)) {
    static new() {
      return new auth$.GithubAuthProvider.fromJsObject(new dart.global.firebase_auth.GithubAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.GithubAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.GithubAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.GithubAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.GithubAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    static credential(token) {
      return dart.global.firebase_auth.GithubAuthProvider.credential(token);
    }
  };
  (auth$.GithubAuthProvider.fromJsObject = function(jsObject) {
    auth$.GithubAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.GithubAuthProvider.prototype;
  dart.addTypeTests(auth$.GithubAuthProvider);
  dart.addTypeCaches(auth$.GithubAuthProvider);
  dart.setMethodSignature(auth$.GithubAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.GithubAuthProvider.__proto__),
    addScope: dart.fnType(auth$.GithubAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.GithubAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.GithubAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.GithubAuthProvider, I[24]);
  dart.setStaticFieldSignature(auth$.GithubAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.GithubAuthProvider, {
    /*auth$.GithubAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.GithubAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.GoogleAuthProvider = class GoogleAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.GoogleAuthProvider", false)) {
    static new() {
      return new auth$.GoogleAuthProvider.fromJsObject(new dart.global.firebase_auth.GoogleAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.GoogleAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.GoogleAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.GoogleAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.GoogleAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    static credential(idToken = null, accessToken = null) {
      return dart.global.firebase_auth.GoogleAuthProvider.credential(idToken, accessToken);
    }
  };
  (auth$.GoogleAuthProvider.fromJsObject = function(jsObject) {
    auth$.GoogleAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.GoogleAuthProvider.prototype;
  dart.addTypeTests(auth$.GoogleAuthProvider);
  dart.addTypeCaches(auth$.GoogleAuthProvider);
  dart.setMethodSignature(auth$.GoogleAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.GoogleAuthProvider.__proto__),
    addScope: dart.fnType(auth$.GoogleAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.GoogleAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.GoogleAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.GoogleAuthProvider, I[24]);
  dart.setStaticFieldSignature(auth$.GoogleAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.GoogleAuthProvider, {
    /*auth$.GoogleAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.GoogleAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.OAuthProvider = class OAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.OAuthProvider", false)) {
    static new(providerId) {
      return new auth$.OAuthProvider.fromJsObject(new dart.global.firebase_auth.OAuthProvider(providerId));
    }
    static ['_#new#tearOff'](providerId) {
      return auth$.OAuthProvider.new(providerId);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.OAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.OAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.OAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    credential(credentialOptions) {
      return this.jsObject.credential(credentialOptions);
    }
    static credentialFromResult(userCredential) {
      return dart.global.firebase_auth.OAuthProvider.credentialFromResult(userCredential);
    }
  };
  (auth$.OAuthProvider.fromJsObject = function(jsObject) {
    auth$.OAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.OAuthProvider.prototype;
  dart.addTypeTests(auth$.OAuthProvider);
  dart.addTypeCaches(auth$.OAuthProvider);
  dart.setMethodSignature(auth$.OAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.OAuthProvider.__proto__),
    addScope: dart.fnType(auth$.OAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.OAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))]),
    credential: dart.fnType(dart.packageJSType("OAuthCredential", false), [dart.packageJSType("OAuthCredentialOptions", false)])
  }));
  dart.setStaticMethodSignature(auth$.OAuthProvider, () => ['new', 'credentialFromResult']);
  dart.setLibraryUri(auth$.OAuthProvider, I[24]);
  auth$.TwitterAuthProvider = class TwitterAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.TwitterAuthProvider", false)) {
    static new() {
      return new auth$.TwitterAuthProvider.fromJsObject(new dart.global.firebase_auth.TwitterAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.TwitterAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.TwitterAuthProvider.fromJsObject(jsObject);
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.TwitterAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils.jsify(customOAuthParameters)));
    }
    static credential(token, secret) {
      return dart.global.firebase_auth.TwitterAuthProvider.credential(token, secret);
    }
  };
  (auth$.TwitterAuthProvider.fromJsObject = function(jsObject) {
    auth$.TwitterAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.TwitterAuthProvider.prototype;
  dart.addTypeTests(auth$.TwitterAuthProvider);
  dart.addTypeCaches(auth$.TwitterAuthProvider);
  dart.setMethodSignature(auth$.TwitterAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.TwitterAuthProvider.__proto__),
    setCustomParameters: dart.fnType(auth$.TwitterAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.TwitterAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.TwitterAuthProvider, I[24]);
  dart.setStaticFieldSignature(auth$.TwitterAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.TwitterAuthProvider, {
    /*auth$.TwitterAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.TwitterAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.SAMLAuthProvider = class SAMLAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.SAMLAuthProvider", false)) {
    static new(providerId) {
      return new auth$.SAMLAuthProvider.fromJsObject(new dart.global.firebase_auth.SAMLAuthProvider(providerId));
    }
    static ['_#new#tearOff'](providerId) {
      return auth$.SAMLAuthProvider.new(providerId);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.SAMLAuthProvider.fromJsObject(jsObject);
    }
    static credentialFromResult(userCredential) {
      return dart.global.firebase_auth.SAMLAuthProvider.credentialFromResult(userCredential);
    }
  };
  (auth$.SAMLAuthProvider.fromJsObject = function(jsObject) {
    auth$.SAMLAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.SAMLAuthProvider.prototype;
  dart.addTypeTests(auth$.SAMLAuthProvider);
  dart.addTypeCaches(auth$.SAMLAuthProvider);
  dart.setStaticMethodSignature(auth$.SAMLAuthProvider, () => ['new', 'credentialFromResult']);
  dart.setLibraryUri(auth$.SAMLAuthProvider, I[24]);
  auth$.PhoneAuthProvider = class PhoneAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.PhoneAuthProvider", false)) {
    static get PROVIDER_ID() {
      return dart.global.firebase_auth.PhoneAuthProvider.PROVIDER_ID;
    }
    static new(auth = null) {
      return new auth$.PhoneAuthProvider.fromJsObject(auth != null ? new dart.global.firebase_auth.PhoneAuthProvider(auth.jsObject) : new dart.global.firebase_auth.PhoneAuthProvider());
    }
    static ['_#new#tearOff'](auth = null) {
      return auth$.PhoneAuthProvider.new(auth);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.PhoneAuthProvider.fromJsObject(jsObject);
    }
    verifyPhoneNumber(phoneOptions, applicationVerifier) {
      return utils$.handleThenable(core.String, this.jsObject.verifyPhoneNumber(phoneOptions, applicationVerifier.jsObject));
    }
    static credential(verificationId, verificationCode) {
      return dart.global.firebase_auth.PhoneAuthProvider.credential(verificationId, verificationCode);
    }
  };
  (auth$.PhoneAuthProvider.fromJsObject = function(jsObject) {
    auth$.PhoneAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.PhoneAuthProvider.prototype;
  dart.addTypeTests(auth$.PhoneAuthProvider);
  dart.addTypeCaches(auth$.PhoneAuthProvider);
  dart.setMethodSignature(auth$.PhoneAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.PhoneAuthProvider.__proto__),
    verifyPhoneNumber: dart.fnType(async.Future$(core.String), [dart.dynamic, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))])
  }));
  dart.setStaticMethodSignature(auth$.PhoneAuthProvider, () => ['new', 'credential']);
  dart.setStaticGetterSignature(auth$.PhoneAuthProvider, () => ['PROVIDER_ID']);
  dart.setLibraryUri(auth$.PhoneAuthProvider, I[24]);
  const _is_ApplicationVerifier_default = Symbol('_is_ApplicationVerifier_default');
  auth$.ApplicationVerifier$ = dart.generic(T => {
    class ApplicationVerifier extends js$0.JsObjectWrapper$(T) {
      get type() {
        return this.jsObject.type;
      }
      verify() {
        return utils$.handleThenable(core.String, this.jsObject.verify());
      }
    }
    (ApplicationVerifier.fromJsObject = function(jsObject) {
      ApplicationVerifier.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = ApplicationVerifier.prototype;
    dart.addTypeTests(ApplicationVerifier);
    ApplicationVerifier.prototype[_is_ApplicationVerifier_default] = true;
    dart.addTypeCaches(ApplicationVerifier);
    dart.setMethodSignature(ApplicationVerifier, () => ({
      __proto__: dart.getMethods(ApplicationVerifier.__proto__),
      verify: dart.fnType(async.Future$(core.String), [])
    }));
    dart.setGetterSignature(ApplicationVerifier, () => ({
      __proto__: dart.getGetters(ApplicationVerifier.__proto__),
      type: core.String
    }));
    dart.setLibraryUri(ApplicationVerifier, I[24]);
    return ApplicationVerifier;
  });
  auth$.ApplicationVerifier = auth$.ApplicationVerifier$();
  dart.addTypeTests(auth$.ApplicationVerifier, _is_ApplicationVerifier_default);
  auth$.RecaptchaVerifier = class RecaptchaVerifier extends auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.RecaptchaVerifier", false)) {
    static new(container, parameters, auth) {
      return new auth$.RecaptchaVerifier.fromJsObject(new dart.global.firebase_auth.RecaptchaVerifier(container, core.Object.as(utils.jsify(parameters)), auth.jsObject));
    }
    static ['_#new#tearOff'](container, parameters, auth) {
      return auth$.RecaptchaVerifier.new(container, parameters, auth);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.RecaptchaVerifier.fromJsObject(jsObject);
    }
    clear() {
      return this.jsObject.clear();
    }
    render() {
      return utils$.handleThenable(core.num, this.jsObject.render());
    }
  };
  (auth$.RecaptchaVerifier.fromJsObject = function(jsObject) {
    auth$.RecaptchaVerifier.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.RecaptchaVerifier.prototype;
  dart.addTypeTests(auth$.RecaptchaVerifier);
  dart.addTypeCaches(auth$.RecaptchaVerifier);
  dart.setMethodSignature(auth$.RecaptchaVerifier, () => ({
    __proto__: dart.getMethods(auth$.RecaptchaVerifier.__proto__),
    clear: dart.fnType(dart.void, []),
    render: dart.fnType(async.Future$(core.num), [])
  }));
  dart.setStaticMethodSignature(auth$.RecaptchaVerifier, () => ['new']);
  dart.setLibraryUri(auth$.RecaptchaVerifier, I[24]);
  auth$.ConfirmationResult = class ConfirmationResult extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_auth.ConfirmationResult", false)) {
    get verificationId() {
      return this.jsObject.verificationId;
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.ConfirmationResult.fromJsObject(jsObject);
    }
    confirm(verificationCode) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), this.jsObject.confirm(verificationCode)).then(auth$.UserCredential, C[13] || CT.C13);
    }
  };
  (auth$.ConfirmationResult.fromJsObject = function(jsObject) {
    auth$.ConfirmationResult.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.ConfirmationResult.prototype;
  dart.addTypeTests(auth$.ConfirmationResult);
  dart.addTypeCaches(auth$.ConfirmationResult);
  dart.setMethodSignature(auth$.ConfirmationResult, () => ({
    __proto__: dart.getMethods(auth$.ConfirmationResult.__proto__),
    confirm: dart.fnType(async.Future$(auth$.UserCredential), [core.String])
  }));
  dart.setGetterSignature(auth$.ConfirmationResult, () => ({
    __proto__: dart.getGetters(auth$.ConfirmationResult.__proto__),
    verificationId: core.String
  }));
  dart.setLibraryUri(auth$.ConfirmationResult, I[24]);
  auth$.UserCredential = class UserCredential extends js$0.JsObjectWrapper$(dart.packageJSType("UserCredentialJsImpl", false)) {
    get user() {
      return auth$.User.getInstance(this.jsObject.user);
    }
    get operationType() {
      return this.jsObject.operationType;
    }
    get additionalUserInfo() {
      return new auth$.AdditionalUserInfo.fromJsObject(dart.global.firebase_auth.getAdditionalUserInfo(this.jsObject));
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.UserCredential.fromJsObject(jsObject);
    }
  };
  (auth$.UserCredential.fromJsObject = function(jsObject) {
    auth$.UserCredential.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.UserCredential.prototype;
  dart.addTypeTests(auth$.UserCredential);
  dart.addTypeCaches(auth$.UserCredential);
  dart.setGetterSignature(auth$.UserCredential, () => ({
    __proto__: dart.getGetters(auth$.UserCredential.__proto__),
    user: dart.nullable(auth$.User),
    operationType: core.String,
    additionalUserInfo: dart.nullable(auth$.AdditionalUserInfo)
  }));
  dart.setLibraryUri(auth$.UserCredential, I[24]);
  auth$.AdditionalUserInfo = class AdditionalUserInfo extends js$0.JsObjectWrapper$(dart.packageJSType("AdditionalUserInfoJsImpl", false)) {
    get providerId() {
      return this.jsObject.providerId;
    }
    get profile() {
      return T$.MapNOfString$dynamic().as(utils.dartify(this.jsObject.profile));
    }
    get username() {
      return this.jsObject.username;
    }
    get isNewUser() {
      return this.jsObject.isNewUser;
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.AdditionalUserInfo.fromJsObject(jsObject);
    }
  };
  (auth$.AdditionalUserInfo.fromJsObject = function(jsObject) {
    auth$.AdditionalUserInfo.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.AdditionalUserInfo.prototype;
  dart.addTypeTests(auth$.AdditionalUserInfo);
  dart.addTypeCaches(auth$.AdditionalUserInfo);
  dart.setGetterSignature(auth$.AdditionalUserInfo, () => ({
    __proto__: dart.getGetters(auth$.AdditionalUserInfo.__proto__),
    providerId: core.String,
    profile: dart.nullable(core.Map$(core.String, dart.dynamic)),
    username: core.String,
    isNewUser: core.bool
  }));
  dart.setLibraryUri(auth$.AdditionalUserInfo, I[24]);
  auth$.getAuthInstance = function getAuthInstance(app, opts) {
    let persistence = opts && 'persistence' in opts ? opts.persistence : null;
    if (persistence != null) {
      let setPersistence = null;
      switch (persistence) {
        case C[18] || CT.C18:
          {
            setPersistence = dart.global.firebase_auth.browserLocalPersistence;
            break;
          }
        case C[19] || CT.C19:
          {
            setPersistence = dart.global.firebase_auth.indexedDBLocalPersistence;
            break;
          }
        case C[20] || CT.C20:
          {
            setPersistence = dart.global.firebase_auth.browserSessionPersistence;
            break;
          }
        case C[21] || CT.C21:
          {
            setPersistence = dart.global.firebase_auth.inMemoryPersistence;
            break;
          }
      }
      return auth$.Auth.getInstance(dart.global.firebase_auth.initializeAuth(app.jsObject, utils.jsify(new (T$.IdentityMapOfString$dynamic()).from(["errorMap", dart.global.firebase_auth.debugErrorMap, "persistence", setPersistence, "popupRedirectResolver", dart.global.firebase_auth.browserPopupRedirectResolver]))));
    }
    return auth$.Auth.getInstance(dart.global.firebase_auth.initializeAuth(app.jsObject, utils.jsify(new (T$.IdentityMapOfString$dynamic()).from(["errorMap", dart.global.firebase_auth.debugErrorMap, "persistence", T$.JSArrayOfPersistence().of([dart.global.firebase_auth.indexedDBLocalPersistence, dart.global.firebase_auth.browserLocalPersistence, dart.global.firebase_auth.browserSessionPersistence]), "popupRedirectResolver", dart.global.firebase_auth.browserPopupRedirectResolver]))));
  };
  multi_factor.MultiFactorUser = class MultiFactorUser extends js$0.JsObjectWrapper$(dart.packageJSType("MultiFactorUserJsImpl", false)) {
    static getInstance(jsObject) {
      let t57, t56, t55, t54;
      t54 = multi_factor.MultiFactorUser._expando;
      t55 = jsObject;
      t56 = t54._get(t55);
      return t56 == null ? (t57 = new multi_factor.MultiFactorUser._fromJsObject(jsObject), t54._set(t55, t57), t57) : t56;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new multi_factor.MultiFactorUser._fromJsObject(jsObject);
    }
    get enrolledFactors() {
      return this.jsObject.enrolledFactors[$map](T$.MultiFactorInfoOfMultiFactorInfoJsImpl(), C[22] || CT.C22)[$toList]();
    }
    get session() {
      return utils$.handleThenable(dart.packageJSType("MultiFactorSessionJsImpl", false), this.jsObject.getSession()).then(multi_factor.MultiFactorSession, C[24] || CT.C24);
    }
    enroll(assertion, displayName) {
      return utils$.handleThenable(dart.void, this.jsObject.enroll(assertion.jsObject, displayName));
    }
    unenroll(multiFactorInfoId) {
      return utils$.handleThenable(dart.void, this.jsObject.unenroll(multiFactorInfoId));
    }
  };
  (multi_factor.MultiFactorUser._fromJsObject = function(jsObject) {
    multi_factor.MultiFactorUser.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.MultiFactorUser.prototype;
  dart.addTypeTests(multi_factor.MultiFactorUser);
  dart.addTypeCaches(multi_factor.MultiFactorUser);
  dart.setMethodSignature(multi_factor.MultiFactorUser, () => ({
    __proto__: dart.getMethods(multi_factor.MultiFactorUser.__proto__),
    enroll: dart.fnType(async.Future$(dart.void), [multi_factor.MultiFactorAssertion$(dart.packageJSType("MultiFactorAssertionJsImpl", false)), dart.nullable(core.String)]),
    unenroll: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setStaticMethodSignature(multi_factor.MultiFactorUser, () => ['getInstance']);
  dart.setGetterSignature(multi_factor.MultiFactorUser, () => ({
    __proto__: dart.getGetters(multi_factor.MultiFactorUser.__proto__),
    enrolledFactors: core.List$(multi_factor.MultiFactorInfo$(dart.packageJSType("MultiFactorInfoJsImpl", false))),
    session: async.Future$(multi_factor.MultiFactorSession)
  }));
  dart.setLibraryUri(multi_factor.MultiFactorUser, I[26]);
  dart.setStaticFieldSignature(multi_factor.MultiFactorUser, () => ['_expando']);
  dart.defineLazy(multi_factor.MultiFactorUser, {
    /*multi_factor.MultiFactorUser._expando*/get _expando() {
      return new (T$.ExpandoOfMultiFactorUser()).new();
    }
  }, false);
  const _is_MultiFactorInfo_default = Symbol('_is_MultiFactorInfo_default');
  multi_factor.MultiFactorInfo$ = dart.generic(T => {
    class MultiFactorInfo extends js$0.JsObjectWrapper$(T) {
      static ['_#fromJsObject#tearOff'](T, jsObject) {
        return new (multi_factor.MultiFactorInfo$(T)).fromJsObject(jsObject);
      }
      get displayName() {
        return this.jsObject.displayName;
      }
      get enrollmentTime() {
        return this.jsObject.enrollmentTime;
      }
      get factorId() {
        return this.jsObject.factorId;
      }
      get uid() {
        return this.jsObject.uid;
      }
    }
    (MultiFactorInfo.fromJsObject = function(jsObject) {
      MultiFactorInfo.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = MultiFactorInfo.prototype;
    dart.addTypeTests(MultiFactorInfo);
    MultiFactorInfo.prototype[_is_MultiFactorInfo_default] = true;
    dart.addTypeCaches(MultiFactorInfo);
    dart.setGetterSignature(MultiFactorInfo, () => ({
      __proto__: dart.getGetters(MultiFactorInfo.__proto__),
      displayName: dart.nullable(core.String),
      enrollmentTime: core.String,
      factorId: core.String,
      uid: core.String
    }));
    dart.setLibraryUri(MultiFactorInfo, I[26]);
    return MultiFactorInfo;
  });
  multi_factor.MultiFactorInfo = multi_factor.MultiFactorInfo$();
  dart.addTypeTests(multi_factor.MultiFactorInfo, _is_MultiFactorInfo_default);
  multi_factor.PhoneMultiFactorInfo = class PhoneMultiFactorInfo extends multi_factor.MultiFactorInfo$(dart.packageJSType("PhoneMultiFactorInfoJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.PhoneMultiFactorInfo.fromJsObject(jsObject);
    }
    get phoneNumber() {
      return this.jsObject.phoneNumber;
    }
  };
  (multi_factor.PhoneMultiFactorInfo.fromJsObject = function(jsObject) {
    multi_factor.PhoneMultiFactorInfo.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.PhoneMultiFactorInfo.prototype;
  dart.addTypeTests(multi_factor.PhoneMultiFactorInfo);
  dart.addTypeCaches(multi_factor.PhoneMultiFactorInfo);
  dart.setGetterSignature(multi_factor.PhoneMultiFactorInfo, () => ({
    __proto__: dart.getGetters(multi_factor.PhoneMultiFactorInfo.__proto__),
    phoneNumber: core.String
  }));
  dart.setLibraryUri(multi_factor.PhoneMultiFactorInfo, I[26]);
  multi_factor.MultiFactorSession = class MultiFactorSession extends js$0.JsObjectWrapper$(dart.packageJSType("MultiFactorSessionJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.MultiFactorSession.fromJsObject(jsObject);
    }
  };
  (multi_factor.MultiFactorSession.fromJsObject = function(jsObject) {
    multi_factor.MultiFactorSession.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.MultiFactorSession.prototype;
  dart.addTypeTests(multi_factor.MultiFactorSession);
  dart.addTypeCaches(multi_factor.MultiFactorSession);
  dart.setLibraryUri(multi_factor.MultiFactorSession, I[26]);
  const _is_MultiFactorAssertion_default = Symbol('_is_MultiFactorAssertion_default');
  multi_factor.MultiFactorAssertion$ = dart.generic(T => {
    class MultiFactorAssertion extends js$0.JsObjectWrapper$(T) {
      static ['_#fromJsObject#tearOff'](T, jsObject) {
        return new (multi_factor.MultiFactorAssertion$(T)).fromJsObject(jsObject);
      }
      get factorId() {
        return this.jsObject.factorId;
      }
    }
    (MultiFactorAssertion.fromJsObject = function(jsObject) {
      MultiFactorAssertion.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = MultiFactorAssertion.prototype;
    dart.addTypeTests(MultiFactorAssertion);
    MultiFactorAssertion.prototype[_is_MultiFactorAssertion_default] = true;
    dart.addTypeCaches(MultiFactorAssertion);
    dart.setGetterSignature(MultiFactorAssertion, () => ({
      __proto__: dart.getGetters(MultiFactorAssertion.__proto__),
      factorId: core.String
    }));
    dart.setLibraryUri(MultiFactorAssertion, I[26]);
    return MultiFactorAssertion;
  });
  multi_factor.MultiFactorAssertion = multi_factor.MultiFactorAssertion$();
  dart.addTypeTests(multi_factor.MultiFactorAssertion, _is_MultiFactorAssertion_default);
  multi_factor.PhoneMultiFactorAssertion = class PhoneMultiFactorAssertion extends multi_factor.MultiFactorAssertion$(dart.packageJSType("PhoneMultiFactorAssertionJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.PhoneMultiFactorAssertion.fromJsObject(jsObject);
    }
  };
  (multi_factor.PhoneMultiFactorAssertion.fromJsObject = function(jsObject) {
    multi_factor.PhoneMultiFactorAssertion.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.PhoneMultiFactorAssertion.prototype;
  dart.addTypeTests(multi_factor.PhoneMultiFactorAssertion);
  dart.addTypeCaches(multi_factor.PhoneMultiFactorAssertion);
  dart.setLibraryUri(multi_factor.PhoneMultiFactorAssertion, I[26]);
  multi_factor.MultiFactorResolver = class MultiFactorResolver extends js$0.JsObjectWrapper$(dart.packageJSType("MultiFactorResolverJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.MultiFactorResolver.fromJsObject(jsObject);
    }
    get hints() {
      return this.jsObject.hints[$map](T$.MultiFactorInfoOfMultiFactorInfoJsImpl(), dart.fn(e => {
        if (dart.packageJSType("PhoneMultiFactorInfoJsImpl", false).is(e)) {
          return new multi_factor.PhoneMultiFactorInfo.fromJsObject(e);
        } else {
          return new (T$.MultiFactorInfoOfMultiFactorInfoJsImpl()).fromJsObject(e);
        }
      }, T$.MultiFactorInfoJsImplToMultiFactorInfoOfMultiFactorInfoJsImpl()))[$toList]();
    }
    get session() {
      return new multi_factor.MultiFactorSession.fromJsObject(this.jsObject.session);
    }
    resolveSignIn(assertion) {
      return utils$.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), this.jsObject.resolveSignIn(assertion.jsObject)).then(auth$.UserCredential, C[13] || CT.C13);
    }
  };
  (multi_factor.MultiFactorResolver.fromJsObject = function(jsObject) {
    multi_factor.MultiFactorResolver.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.MultiFactorResolver.prototype;
  dart.addTypeTests(multi_factor.MultiFactorResolver);
  dart.addTypeCaches(multi_factor.MultiFactorResolver);
  dart.setMethodSignature(multi_factor.MultiFactorResolver, () => ({
    __proto__: dart.getMethods(multi_factor.MultiFactorResolver.__proto__),
    resolveSignIn: dart.fnType(async.Future$(auth$.UserCredential), [multi_factor.MultiFactorAssertion$(dart.packageJSType("MultiFactorAssertionJsImpl", false))])
  }));
  dart.setGetterSignature(multi_factor.MultiFactorResolver, () => ({
    __proto__: dart.getGetters(multi_factor.MultiFactorResolver.__proto__),
    hints: core.List$(multi_factor.MultiFactorInfo$(dart.packageJSType("MultiFactorInfoJsImpl", false))),
    session: multi_factor.MultiFactorSession
  }));
  dart.setLibraryUri(multi_factor.MultiFactorResolver, I[26]);
  multi_factor.PhoneMultiFactorGenerator = class PhoneMultiFactorGenerator extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_auth.PhoneMultiFactorGenerator", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.PhoneMultiFactorGenerator.fromJsObject(jsObject);
    }
    static assertion(credential) {
      return new multi_factor.PhoneMultiFactorAssertion.fromJsObject(dart.nullCheck(dart.global.firebase_auth.PhoneMultiFactorGenerator.assertion(credential)));
    }
  };
  (multi_factor.PhoneMultiFactorGenerator.fromJsObject = function(jsObject) {
    multi_factor.PhoneMultiFactorGenerator.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.PhoneMultiFactorGenerator.prototype;
  dart.addTypeTests(multi_factor.PhoneMultiFactorGenerator);
  dart.addTypeCaches(multi_factor.PhoneMultiFactorGenerator);
  dart.setStaticMethodSignature(multi_factor.PhoneMultiFactorGenerator, () => ['assertion']);
  dart.setLibraryUri(multi_factor.PhoneMultiFactorGenerator, I[26]);
  multi_factor.multiFactor = function multiFactor(user) {
    return multi_factor.MultiFactorUser.getInstance(dart.global.firebase_auth.multiFactor(user.jsObject));
  };
  multi_factor.getMultiFactorResolver = function getMultiFactorResolver(auth, error) {
    return new multi_factor.MultiFactorResolver.fromJsObject(dart.global.firebase_auth.getMultiFactorResolver(auth.jsObject, error));
  };
  var plugin$ = dart.privateName(firebase_core_platform_interface, "FirebaseException.plugin");
  var message$ = dart.privateName(firebase_core_platform_interface, "FirebaseException.message");
  var code$ = dart.privateName(firebase_core_platform_interface, "FirebaseException.code");
  var stackTrace$ = dart.privateName(firebase_core_platform_interface, "FirebaseException.stackTrace");
  firebase_core_platform_interface.FirebaseException = class FirebaseException extends core.Object {
    get plugin() {
      return this[plugin$];
    }
    set plugin(value) {
      super.plugin = value;
    }
    get message() {
      return this[message$];
    }
    set message(value) {
      super.message = value;
    }
    get code() {
      return this[code$];
    }
    set code(value) {
      super.code = value;
    }
    get stackTrace() {
      return this[stackTrace$];
    }
    set stackTrace(value) {
      super.stackTrace = value;
    }
    static ['_#new#tearOff'](opts) {
      let plugin = opts && 'plugin' in opts ? opts.plugin : null;
      let message = opts && 'message' in opts ? opts.message : null;
      let code = opts && 'code' in opts ? opts.code : null;
      let stackTrace = opts && 'stackTrace' in opts ? opts.stackTrace : null;
      return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, message: message, code: code, stackTrace: stackTrace});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseException.is(other)) return false;
      return other.hashCode === this.hashCode;
    }
    get hashCode() {
      return core.Object.hash(this.plugin, this.code, this.message);
    }
    toString() {
      let output = "[" + this.plugin + "/" + this.code + "] " + dart.str(this.message);
      if (this.stackTrace != null) {
        output = output + ("\n\n" + dart.str(this.stackTrace));
      }
      return output;
    }
  };
  (firebase_core_platform_interface.FirebaseException.new = function(opts) {
    let t54;
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let code = opts && 'code' in opts ? opts.code : null;
    let stackTrace = opts && 'stackTrace' in opts ? opts.stackTrace : null;
    this[plugin$] = plugin;
    this[message$] = message;
    this[stackTrace$] = stackTrace;
    this[code$] = (t54 = code, t54 == null ? "unknown" : t54);
    ;
  }).prototype = firebase_core_platform_interface.FirebaseException.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseException);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseException);
  firebase_core_platform_interface.FirebaseException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseException, I[6]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseException, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseException.__proto__),
    plugin: dart.finalFieldType(core.String),
    message: dart.finalFieldType(dart.nullable(core.String)),
    code: dart.finalFieldType(core.String),
    stackTrace: dart.finalFieldType(dart.nullable(core.StackTrace))
  }));
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseException, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseException, ['hashCode']);
  var apiKey$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.apiKey");
  var appId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.appId");
  var messagingSenderId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.messagingSenderId");
  var projectId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.projectId");
  var authDomain$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.authDomain");
  var databaseURL$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.databaseURL");
  var storageBucket$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.storageBucket");
  var measurementId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.measurementId");
  var trackingId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.trackingId");
  var deepLinkURLScheme$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.deepLinkURLScheme");
  var androidClientId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.androidClientId");
  var iosClientId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.iosClientId");
  var iosBundleId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.iosBundleId");
  var appGroupId$ = dart.privateName(firebase_core_platform_interface, "FirebaseOptions.appGroupId");
  var MapEquality__valueEquality = dart.privateName(equality, "MapEquality._valueEquality");
  var MapEquality__keyEquality = dart.privateName(equality, "MapEquality._keyEquality");
  firebase_core_platform_interface.FirebaseOptions = class FirebaseOptions extends core.Object {
    get apiKey() {
      return this[apiKey$];
    }
    set apiKey(value) {
      super.apiKey = value;
    }
    get appId() {
      return this[appId$];
    }
    set appId(value) {
      super.appId = value;
    }
    get messagingSenderId() {
      return this[messagingSenderId$];
    }
    set messagingSenderId(value) {
      super.messagingSenderId = value;
    }
    get projectId() {
      return this[projectId$];
    }
    set projectId(value) {
      super.projectId = value;
    }
    get authDomain() {
      return this[authDomain$];
    }
    set authDomain(value) {
      super.authDomain = value;
    }
    get databaseURL() {
      return this[databaseURL$];
    }
    set databaseURL(value) {
      super.databaseURL = value;
    }
    get storageBucket() {
      return this[storageBucket$];
    }
    set storageBucket(value) {
      super.storageBucket = value;
    }
    get measurementId() {
      return this[measurementId$];
    }
    set measurementId(value) {
      super.measurementId = value;
    }
    get trackingId() {
      return this[trackingId$];
    }
    set trackingId(value) {
      super.trackingId = value;
    }
    get deepLinkURLScheme() {
      return this[deepLinkURLScheme$];
    }
    set deepLinkURLScheme(value) {
      super.deepLinkURLScheme = value;
    }
    get androidClientId() {
      return this[androidClientId$];
    }
    set androidClientId(value) {
      super.androidClientId = value;
    }
    get iosClientId() {
      return this[iosClientId$];
    }
    set iosClientId(value) {
      super.iosClientId = value;
    }
    get iosBundleId() {
      return this[iosBundleId$];
    }
    set iosBundleId(value) {
      super.iosBundleId = value;
    }
    get appGroupId() {
      return this[appGroupId$];
    }
    set appGroupId(value) {
      super.appGroupId = value;
    }
    static ['_#new#tearOff'](opts) {
      let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
      let appId = opts && 'appId' in opts ? opts.appId : null;
      let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
      let projectId = opts && 'projectId' in opts ? opts.projectId : null;
      let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
      let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
      let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
      let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
      let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
      let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
      let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
      let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
      return new firebase_core_platform_interface.FirebaseOptions.new({apiKey: apiKey, appId: appId, messagingSenderId: messagingSenderId, projectId: projectId, authDomain: authDomain, databaseURL: databaseURL, storageBucket: storageBucket, measurementId: measurementId, trackingId: trackingId, deepLinkURLScheme: deepLinkURLScheme, androidClientId: androidClientId, iosClientId: iosClientId, iosBundleId: iosBundleId, appGroupId: appGroupId});
    }
    static ['_#fromPigeon#tearOff'](options) {
      return new firebase_core_platform_interface.FirebaseOptions.fromPigeon(options);
    }
    get asMap() {
      return new (T$.IdentityMapOfString$StringN()).from(["apiKey", this.apiKey, "appId", this.appId, "messagingSenderId", this.messagingSenderId, "projectId", this.projectId, "authDomain", this.authDomain, "databaseURL", this.databaseURL, "storageBucket", this.storageBucket, "measurementId", this.measurementId, "trackingId", this.trackingId, "deepLinkURLScheme", this.deepLinkURLScheme, "androidClientId", this.androidClientId, "iosClientId", this.iosClientId, "iosBundleId", this.iosBundleId, "appGroupId", this.appGroupId]);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseOptions.is(other)) return false;
      return (C[25] || CT.C25).equals(this.asMap, other.asMap);
    }
    get hashCode() {
      return (C[25] || CT.C25).hash(this.asMap);
    }
    toString() {
      return this.asMap[$toString]();
    }
  };
  (firebase_core_platform_interface.FirebaseOptions.new = function(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
    let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
    let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
    let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
    let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
    let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
    this[apiKey$] = apiKey;
    this[appId$] = appId;
    this[messagingSenderId$] = messagingSenderId;
    this[projectId$] = projectId;
    this[authDomain$] = authDomain;
    this[databaseURL$] = databaseURL;
    this[storageBucket$] = storageBucket;
    this[measurementId$] = measurementId;
    this[trackingId$] = trackingId;
    this[deepLinkURLScheme$] = deepLinkURLScheme;
    this[androidClientId$] = androidClientId;
    this[iosClientId$] = iosClientId;
    this[iosBundleId$] = iosBundleId;
    this[appGroupId$] = appGroupId;
    ;
  }).prototype = firebase_core_platform_interface.FirebaseOptions.prototype;
  (firebase_core_platform_interface.FirebaseOptions.fromPigeon = function(options) {
    this[apiKey$] = options.apiKey;
    this[appId$] = options.appId;
    this[messagingSenderId$] = options.messagingSenderId;
    this[projectId$] = options.projectId;
    this[authDomain$] = options.authDomain;
    this[databaseURL$] = options.databaseURL;
    this[storageBucket$] = options.storageBucket;
    this[measurementId$] = options.measurementId;
    this[trackingId$] = options.trackingId;
    this[deepLinkURLScheme$] = options.deepLinkURLScheme;
    this[androidClientId$] = options.androidClientId;
    this[iosClientId$] = options.iosClientId;
    this[iosBundleId$] = options.iosBundleId;
    this[appGroupId$] = options.appGroupId;
    ;
  }).prototype = firebase_core_platform_interface.FirebaseOptions.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseOptions);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseOptions);
  dart.setGetterSignature(firebase_core_platform_interface.FirebaseOptions, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebaseOptions.__proto__),
    asMap: core.Map$(core.String, dart.nullable(core.String))
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseOptions, I[6]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseOptions, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseOptions.__proto__),
    apiKey: dart.finalFieldType(core.String),
    appId: dart.finalFieldType(core.String),
    messagingSenderId: dart.finalFieldType(core.String),
    projectId: dart.finalFieldType(core.String),
    authDomain: dart.finalFieldType(dart.nullable(core.String)),
    databaseURL: dart.finalFieldType(dart.nullable(core.String)),
    storageBucket: dart.finalFieldType(dart.nullable(core.String)),
    measurementId: dart.finalFieldType(dart.nullable(core.String)),
    trackingId: dart.finalFieldType(dart.nullable(core.String)),
    deepLinkURLScheme: dart.finalFieldType(dart.nullable(core.String)),
    androidClientId: dart.finalFieldType(dart.nullable(core.String)),
    iosClientId: dart.finalFieldType(dart.nullable(core.String)),
    iosBundleId: dart.finalFieldType(dart.nullable(core.String)),
    appGroupId: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseOptions, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseOptions, ['hashCode']);
  var _initializeFirebaseAppFromMap = dart.privateName(firebase_core_platform_interface, "_initializeFirebaseAppFromMap");
  var _initializeCore$ = dart.privateName(firebase_core_platform_interface, "_initializeCore");
  firebase_core_platform_interface.MethodChannelFirebase = class MethodChannelFirebase extends firebase_core_platform_interface.FirebasePlatform {
    [_initializeCore$]() {
      return async.async(dart.void, (function* _initializeCore() {
        let apps = (yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeCore());
        apps[$where](dart.fn(element => element != null, T$.PigeonInitializeResponseNTobool()))[$cast](messages$46pigeon$.PigeonInitializeResponse)[$forEach](dart.bind(this, _initializeFirebaseAppFromMap));
        firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized = true;
      }).bind(this));
    }
    [_initializeFirebaseAppFromMap](response) {
      let methodChannelFirebaseApp = new firebase_core_platform_interface.MethodChannelFirebaseApp.new(response.name, new firebase_core_platform_interface.FirebaseOptions.fromPigeon(response.options), {isAutomaticDataCollectionEnabled: response.isAutomaticDataCollectionEnabled});
      firebase_core_platform_interface.MethodChannelFirebase.appInstances[$_set](methodChannelFirebaseApp.name, methodChannelFirebaseApp);
      firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[$_set](methodChannelFirebaseApp.name, response.pluginConstants);
    }
    get apps() {
      return firebase_core_platform_interface.MethodChannelFirebase.appInstances[$values][$toList]({growable: false});
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core_platform_interface.FirebaseAppPlatform, (function* initializeApp() {
        if (!firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized) {
          yield this[_initializeCore$]();
        }
        if (name == null || name === "[DEFAULT]") {
          let defaultApp = firebase_core_platform_interface.MethodChannelFirebase.appInstances[$_get]("[DEFAULT]");
          let _options = options;
          if (platform.defaultTargetPlatform === platform.TargetPlatform.android && defaultApp == null && _options == null) {
            let options = (yield firebase_core_platform_interface.MethodChannelFirebase.api.optionsFromResource());
            _options = new firebase_core_platform_interface.FirebaseOptions.fromPigeon(options);
          }
          if (defaultApp == null && _options != null) {
            this[_initializeFirebaseAppFromMap](yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeApp("[DEFAULT]", new messages$46pigeon$.PigeonFirebaseOptions.new({apiKey: _options.apiKey, appId: _options.appId, messagingSenderId: _options.messagingSenderId, projectId: _options.projectId, authDomain: _options.authDomain, databaseURL: _options.databaseURL, storageBucket: _options.storageBucket, measurementId: _options.measurementId, trackingId: _options.trackingId, deepLinkURLScheme: _options.deepLinkURLScheme, androidClientId: _options.androidClientId, iosClientId: _options.iosClientId, iosBundleId: _options.iosBundleId, appGroupId: _options.appGroupId})));
            defaultApp = firebase_core_platform_interface.MethodChannelFirebase.appInstances[$_get]("[DEFAULT]");
          }
          if (defaultApp == null && _options == null) {
            dart.throw(firebase_core_platform_interface.coreNotInitialized());
          }
          if (defaultApp != null && _options != null) {
            if (_options.apiKey !== defaultApp.options.apiKey || _options.databaseURL != null && _options.databaseURL != defaultApp.options.databaseURL || _options.storageBucket != null && _options.storageBucket != defaultApp.options.storageBucket) {
              dart.throw(firebase_core_platform_interface.duplicateApp("[DEFAULT]"));
            }
          }
          return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[$_get]("[DEFAULT]"));
        }
        if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating a secondary Firebase app.", I[27], 143, 7, "options != null");
        if (firebase_core_platform_interface.MethodChannelFirebase.appInstances[$containsKey](name)) {
          let existingApp = dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[$_get](name));
          if (dart.nullCheck(options).apiKey !== existingApp.options.apiKey || options.databaseURL != null && options.databaseURL != existingApp.options.databaseURL || options.storageBucket != null && options.storageBucket != existingApp.options.storageBucket) {
            dart.throw(firebase_core_platform_interface.duplicateApp(name));
          } else {
            return existingApp;
          }
        }
        this[_initializeFirebaseAppFromMap](yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeApp(name, new messages$46pigeon$.PigeonFirebaseOptions.new({apiKey: dart.nullCheck(options).apiKey, appId: options.appId, messagingSenderId: options.messagingSenderId, projectId: options.projectId, authDomain: options.authDomain, databaseURL: options.databaseURL, storageBucket: options.storageBucket, measurementId: options.measurementId, trackingId: options.trackingId, deepLinkURLScheme: options.deepLinkURLScheme, androidClientId: options.androidClientId, iosClientId: options.iosClientId, iosBundleId: options.iosBundleId, appGroupId: options.appGroupId})));
        return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[$_get](name));
      }).bind(this));
    }
    app(name = "[DEFAULT]") {
      if (firebase_core_platform_interface.MethodChannelFirebase.appInstances[$containsKey](name)) {
        return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[$_get](name));
      }
      dart.throw(firebase_core_platform_interface.noAppExists(name));
    }
    static ['_#new#tearOff']() {
      return new firebase_core_platform_interface.MethodChannelFirebase.new();
    }
  };
  (firebase_core_platform_interface.MethodChannelFirebase.new = function() {
    firebase_core_platform_interface.MethodChannelFirebase.__proto__.new.call(this);
    ;
  }).prototype = firebase_core_platform_interface.MethodChannelFirebase.prototype;
  dart.addTypeTests(firebase_core_platform_interface.MethodChannelFirebase);
  dart.addTypeCaches(firebase_core_platform_interface.MethodChannelFirebase);
  dart.setMethodSignature(firebase_core_platform_interface.MethodChannelFirebase, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.MethodChannelFirebase.__proto__),
    [_initializeCore$]: dart.fnType(async.Future$(dart.void), []),
    [_initializeFirebaseAppFromMap]: dart.fnType(dart.void, [messages$46pigeon$.PigeonInitializeResponse])
  }));
  dart.setLibraryUri(firebase_core_platform_interface.MethodChannelFirebase, I[6]);
  dart.setStaticFieldSignature(firebase_core_platform_interface.MethodChannelFirebase, () => ['appInstances', 'isCoreInitialized', 'api']);
  dart.defineLazy(firebase_core_platform_interface.MethodChannelFirebase, {
    /*firebase_core_platform_interface.MethodChannelFirebase.appInstances*/get appInstances() {
      return new (T$.IdentityMapOfString$MethodChannelFirebaseApp()).new();
    },
    set appInstances(value) {},
    /*firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized*/get isCoreInitialized() {
      return false;
    },
    set isCoreInitialized(value) {},
    /*firebase_core_platform_interface.MethodChannelFirebase.api*/get api() {
      return new messages$46pigeon$.FirebaseCoreHostApi.new();
    },
    set api(value) {}
  }, false);
  var _isDeleted = dart.privateName(firebase_core_platform_interface, "_isDeleted");
  var _api = dart.privateName(firebase_core_platform_interface, "_api");
  var _isAutomaticDataCollectionEnabled$ = dart.privateName(firebase_core_platform_interface, "_isAutomaticDataCollectionEnabled");
  firebase_core_platform_interface.MethodChannelFirebaseApp = class MethodChannelFirebaseApp extends firebase_core_platform_interface.FirebaseAppPlatform {
    static ['_#new#tearOff'](name, options, opts) {
      let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
      return new firebase_core_platform_interface.MethodChannelFirebaseApp.new(name, options, {isAutomaticDataCollectionEnabled: isAutomaticDataCollectionEnabled});
    }
    get isAutomaticDataCollectionEnabled() {
      return this[_isAutomaticDataCollectionEnabled$];
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        if (this[_isDefault]) {
          dart.throw(firebase_core_platform_interface.noDefaultAppDelete());
        }
        if (this[_isDeleted]) {
          return;
        }
        yield this[_api].delete(this.name);
        firebase_core_platform_interface.MethodChannelFirebase.appInstances[$remove](this.name);
        firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[$remove](this.name);
        this[_isDeleted] = true;
      }).bind(this));
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return async.async(dart.void, (function* setAutomaticDataCollectionEnabled() {
        yield this[_api].setAutomaticDataCollectionEnabled(this.name, enabled);
        this[_isAutomaticDataCollectionEnabled$] = enabled;
      }).bind(this));
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return async.async(dart.void, (function* setAutomaticResourceManagementEnabled() {
        yield this[_api].setAutomaticResourceManagementEnabled(this.name, enabled);
      }).bind(this));
    }
  };
  (firebase_core_platform_interface.MethodChannelFirebaseApp.new = function(name, options, opts) {
    let t54;
    let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
    this[_isDeleted] = false;
    this[_api] = new messages$46pigeon$.FirebaseAppHostApi.new();
    this[_isAutomaticDataCollectionEnabled$] = core.bool.as((t54 = isAutomaticDataCollectionEnabled, t54 == null ? false : t54));
    firebase_core_platform_interface.MethodChannelFirebaseApp.__proto__.new.call(this, name, options);
    ;
  }).prototype = firebase_core_platform_interface.MethodChannelFirebaseApp.prototype;
  dart.addTypeTests(firebase_core_platform_interface.MethodChannelFirebaseApp);
  dart.addTypeCaches(firebase_core_platform_interface.MethodChannelFirebaseApp);
  dart.setLibraryUri(firebase_core_platform_interface.MethodChannelFirebaseApp, I[6]);
  dart.setFieldSignature(firebase_core_platform_interface.MethodChannelFirebaseApp, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.MethodChannelFirebaseApp.__proto__),
    [_isDeleted]: dart.fieldType(core.bool),
    [_isAutomaticDataCollectionEnabled$]: dart.fieldType(core.bool),
    [_api]: dart.finalFieldType(messages$46pigeon$.FirebaseAppHostApi)
  }));
  var _appName$ = dart.privateName(firebase_core_platform_interface, "_appName");
  var _methodChannelName$ = dart.privateName(firebase_core_platform_interface, "_methodChannelName");
  firebase_core_platform_interface.FirebasePluginPlatform = class FirebasePluginPlatform extends plugin_platform_interface.PlatformInterface {
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, firebase_core_platform_interface.FirebasePluginPlatform._token);
    }
    get pluginConstants() {
      let appConstants = T$.MapNOfObjectN$ObjectN().as(firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[$_get](this[_appName$]));
      if (appConstants != null && appConstants[$_get](this[_methodChannelName$]) != null) {
        return core.Map.as(dart.nullCheck(appConstants[$_get](this[_methodChannelName$])));
      }
      return new _js_helper.LinkedMap.new();
    }
  };
  (firebase_core_platform_interface.FirebasePluginPlatform.new = function(_appName, _methodChannelName) {
    this[_appName$] = _appName;
    this[_methodChannelName$] = _methodChannelName;
    firebase_core_platform_interface.FirebasePluginPlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebasePluginPlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebasePluginPlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebasePluginPlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebasePluginPlatform);
  dart.setStaticMethodSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ['verify']);
  dart.setGetterSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebasePluginPlatform.__proto__),
    pluginConstants: core.Map
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebasePluginPlatform, I[6]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebasePluginPlatform.__proto__),
    [_appName$]: dart.finalFieldType(core.String),
    [_methodChannelName$]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ['_constantsForPluginApps', '_token']);
  dart.defineLazy(firebase_core_platform_interface.FirebasePluginPlatform, {
    /*firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps*/get _constantsForPluginApps() {
      return new _js_helper.LinkedMap.new();
    },
    set _constantsForPluginApps(value) {},
    /*firebase_core_platform_interface.FirebasePluginPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_core_platform_interface.noAppExists = function noAppExists(appName) {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "no-app", message: "No Firebase App '" + appName + "' has been created - call Firebase.initializeApp()"});
  };
  firebase_core_platform_interface.duplicateApp = function duplicateApp(appName) {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "duplicate-app", message: "A Firebase App named \"" + appName + "\" already exists"});
  };
  firebase_core_platform_interface.noDefaultAppInitialization = function noDefaultAppInitialization() {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", message: "The " + "[DEFAULT]" + " app cannot be initialized here. " + "To initialize the default app, follow the installation instructions " + "for the specific platform you are developing with."});
  };
  firebase_core_platform_interface.coreNotInitialized = function coreNotInitialized() {
    let message = "Firebase has not been correctly initialized.\n\nUsually this means you've attempted to use a Firebase service before calling `Firebase.initializeApp`.\n\nView the documentation for more information: https://firebase.flutter.dev/docs/overview#initialization\n    ";
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "not-initialized", message: message});
  };
  firebase_core_platform_interface.noDefaultAppDelete = function noDefaultAppDelete() {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", message: "The default Firebase app instance cannot be deleted."});
  };
  dart.defineLazy(firebase_core_platform_interface, {
    /*firebase_core_platform_interface.defaultFirebaseAppName*/get defaultFirebaseAppName() {
      return "[DEFAULT]";
    }
  }, false);
  js$['DomConsoleExtension|get#debug'] = function DomConsoleExtension$124get$35debug($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "debug");
  };
  js$['DomConsoleExtension|get#info'] = function DomConsoleExtension$124get$35info($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "info");
  };
  js$['DomConsoleExtension|get#log'] = function DomConsoleExtension$124get$35log($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "log");
  };
  js$['DomConsoleExtension|get#warn'] = function DomConsoleExtension$124get$35warn($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "warn");
  };
  js$['DomConsoleExtension|get#error'] = function DomConsoleExtension$124get$35error($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "error");
  };
  js$['DomErrorExtension|get#message'] = function DomErrorExtension$124get$35message($this) {
    return js_util.getProperty(T$.StringN(), $this, "message");
  };
  js$['DomErrorExtension|get#stack'] = function DomErrorExtension$124get$35stack($this) {
    return js_util.getProperty(T$.StringN(), $this, "stack");
  };
  js$['DomErrorExtension|get#name'] = function DomErrorExtension$124get$35name($this) {
    return js_util.getProperty(core.String, $this, "name");
  };
  js$['DomErrorExtension|get#cause'] = function DomErrorExtension$124get$35cause($this) {
    return js_util.getProperty(T$.ObjectN(), $this, "cause");
  };
  js$['DomTrustedTypePolicyFactoryExtension|createPolicy'] = function DomTrustedTypePolicyFactoryExtension$124createPolicy($this, policyName, policyOptions) {
    return js_util._callMethodUnchecked2(dart.packageJSType("DomTrustedTypePolicy", true), $this, "createPolicy", policyName, policyOptions);
  };
  js$['DomTrustedTypePolicyFactoryExtension|get#createPolicy'] = function DomTrustedTypePolicyFactoryExtension$124get$35createPolicy($this) {
    return dart.fn((policyName, policyOptions) => js$['DomTrustedTypePolicyFactoryExtension|createPolicy']($this, policyName, policyOptions), T$.StringAndDomTrustedTypePolicyOptionsNToDomTrustedTypePolicy());
  };
  js$['DomTrustedTypePolicyExtension|createScriptURL'] = function DomTrustedTypePolicyExtension$124createScriptURL($this, input) {
    return js_util._callMethodUnchecked1(dart.packageJSType("DomTrustedScriptUrl", true), $this, "createScriptURL", input);
  };
  js$['DomTrustedTypePolicyExtension|get#createScriptURL'] = function DomTrustedTypePolicyExtension$124get$35createScriptURL($this) {
    return dart.fn(input => js$['DomTrustedTypePolicyExtension|createScriptURL']($this, input), T$.StringToDomTrustedScriptUrl());
  };
  core$.initializeApp = function initializeApp(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    name == null ? name = "[DEFAULT]" : null;
    return app$.App.getInstance(dart.global.firebase_core.initializeApp({apiKey: apiKey, authDomain: authDomain, databaseURL: databaseURL, projectId: projectId, storageBucket: storageBucket, messagingSenderId: messagingSenderId, measurementId: measurementId, appId: appId}, name));
  };
  core$.app = function app$0(name = null) {
    return app$.App.getInstance(name != null ? dart.global.firebase_core.getApp(name) : dart.global.firebase_core.getApp());
  };
  dart.copyProperties(core$, {
    get apps() {
      return dart.global.firebase_core.getApps()[$map](app$.App, dart.fn(e => app$.App.getInstance(dart.packageJSType("firebase_core.FirebaseApp", false).as(e)), T$.dynamicToApp()))[$toList]();
    }
  });
  var debugLabel$ = dart.privateName(link, "LinkTarget.debugLabel");
  link.LinkTarget = class LinkTarget extends core.Object {
    get debugLabel() {
      return this[debugLabel$];
    }
    set debugLabel(value) {
      super.debugLabel = value;
    }
    static ['_#_#tearOff'](opts) {
      let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
      return new link.LinkTarget.__({debugLabel: debugLabel});
    }
  };
  (link.LinkTarget.__ = function(opts) {
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    this[debugLabel$] = debugLabel;
    ;
  }).prototype = link.LinkTarget.prototype;
  dart.addTypeTests(link.LinkTarget);
  dart.addTypeCaches(link.LinkTarget);
  dart.setLibraryUri(link.LinkTarget, I[28]);
  dart.setFieldSignature(link.LinkTarget, () => ({
    __proto__: dart.getFields(link.LinkTarget.__proto__),
    debugLabel: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(link.LinkTarget, () => ['defaultTarget', 'self', 'blank']);
  dart.defineLazy(link.LinkTarget, {
    /*link.LinkTarget.defaultTarget*/get defaultTarget() {
      return C[27] || CT.C27;
    },
    /*link.LinkTarget.self*/get self() {
      return C[28] || CT.C28;
    },
    /*link.LinkTarget.blank*/get blank() {
      return C[29] || CT.C29;
    }
  }, false);
  link.LinkInfo = class LinkInfo extends core.Object {};
  (link.LinkInfo.new = function() {
    ;
  }).prototype = link.LinkInfo.prototype;
  dart.addTypeTests(link.LinkInfo);
  dart.addTypeCaches(link.LinkInfo);
  dart.setLibraryUri(link.LinkInfo, I[28]);
  link.pushRouteNameToFramework = function pushRouteNameToFramework(_, routeName) {
    let completer = T$.CompleterOfByteData().new();
    system_navigator.SystemNavigator.routeInformationUpdated({location: routeName});
    ui.channelBuffers.push("flutter/navigation", link._codec.encodeMethodCall(new message_codec.MethodCall.new("pushRouteInformation", new _js_helper.LinkedMap.from(["location", routeName, "state", null]))), T$.FutureOrNOfByteDataTovoid().as(dart.bind(completer, 'complete')));
    return completer.future;
  };
  dart.defineLazy(link, {
    /*link._codec*/get _codec() {
      return C[30] || CT.C30;
    }
  }, false);
  var link$0 = dart.privateName(link$, "WebLinkDelegate.link");
  link$.WebLinkDelegate = class WebLinkDelegate extends framework.StatefulWidget {
    get link() {
      return this[link$0];
    }
    set link(value) {
      super.link = value;
    }
    static ['_#new#tearOff'](link, opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new link$.WebLinkDelegate.new(link, {key: key});
    }
    createState() {
      return new link$.WebLinkDelegateState.new();
    }
  };
  (link$.WebLinkDelegate.new = function(link, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    this[link$0] = link;
    link$.WebLinkDelegate.__proto__.new.call(this, {key: key});
    ;
  }).prototype = link$.WebLinkDelegate.prototype;
  dart.addTypeTests(link$.WebLinkDelegate);
  dart.addTypeCaches(link$.WebLinkDelegate);
  dart.setMethodSignature(link$.WebLinkDelegate, () => ({
    __proto__: dart.getMethods(link$.WebLinkDelegate.__proto__),
    createState: dart.fnType(link$.WebLinkDelegateState, [])
  }));
  dart.setLibraryUri(link$.WebLinkDelegate, I[29]);
  dart.setFieldSignature(link$.WebLinkDelegate, () => ({
    __proto__: dart.getFields(link$.WebLinkDelegate.__proto__),
    link: dart.finalFieldType(link.LinkInfo)
  }));
  var __WebLinkDelegateState__controller = dart.privateName(link$, "_#WebLinkDelegateState#_controller");
  var _controller = dart.privateName(link$, "_controller");
  var _followLink = dart.privateName(link$, "_followLink");
  link$.WebLinkDelegateState = class WebLinkDelegateState extends framework.State$(link$.WebLinkDelegate) {
    get [_controller]() {
      let t67;
      t67 = this[__WebLinkDelegateState__controller];
      return t67 == null ? dart.throw(new _internal.LateError.fieldNI("_controller")) : t67;
    }
    set [_controller](_controller$35param) {
      this[__WebLinkDelegateState__controller] = _controller$35param;
    }
    didUpdateWidget(oldWidget) {
      link$.WebLinkDelegate.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.link.uri, oldWidget.link.uri)) {
        this[_controller].setUri(this.widget.link.uri);
      }
      if (!this.widget.link.target[$_equals](oldWidget.link.target)) {
        this[_controller].setTarget(this.widget.link.target);
      }
    }
    [_followLink]() {
      link$.LinkViewController.registerHitTest(this[_controller]);
      return T$.FutureOfvoid().value();
    }
    build(context) {
      let t69, t68, t67;
      return new basic.Stack.new({fit: stack.StackFit.passthrough, children: T$.JSArrayOfWidget().of([(t67 = this.widget.link, t68 = context, t69 = this.widget.link.isDisabled ? null : dart.bind(this, _followLink), t67.builder(t68, t69)), new basic.Positioned.fill({child: new platform_view.PlatformViewLink.new({viewType: "__url_launcher::link", onCreatePlatformView: dart.fn(params => {
                let t67;
                this[_controller] = link$.LinkViewController.fromParams(params);
                t67 = this[_controller];
                return (() => {
                  t67.setUri(this.widget.link.uri);
                  t67.setTarget(this.widget.link.target);
                  return t67;
                })();
              }, T$.PlatformViewCreationParamsToLinkViewController()), surfaceFactory: dart.fn((context, controller) => new platform_view.PlatformViewSurface.new({controller: controller, gestureRecognizers: C[31] || CT.C31, hitTestBehavior: platform_view$.PlatformViewHitTestBehavior.transparent}), T$.BuildContextAndPlatformViewControllerToPlatformViewSurface())})})])});
    }
    static ['_#new#tearOff']() {
      return new link$.WebLinkDelegateState.new();
    }
  };
  (link$.WebLinkDelegateState.new = function() {
    this[__WebLinkDelegateState__controller] = null;
    link$.WebLinkDelegateState.__proto__.new.call(this);
    ;
  }).prototype = link$.WebLinkDelegateState.prototype;
  dart.addTypeTests(link$.WebLinkDelegateState);
  dart.addTypeCaches(link$.WebLinkDelegateState);
  dart.setMethodSignature(link$.WebLinkDelegateState, () => ({
    __proto__: dart.getMethods(link$.WebLinkDelegateState.__proto__),
    [_followLink]: dart.fnType(async.Future$(dart.void), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(link$.WebLinkDelegateState, () => ({
    __proto__: dart.getGetters(link$.WebLinkDelegateState.__proto__),
    [_controller]: link$.LinkViewController
  }));
  dart.setSetterSignature(link$.WebLinkDelegateState, () => ({
    __proto__: dart.getSetters(link$.WebLinkDelegateState.__proto__),
    [_controller]: link$.LinkViewController
  }));
  dart.setLibraryUri(link$.WebLinkDelegateState, I[29]);
  dart.setFieldSignature(link$.WebLinkDelegateState, () => ({
    __proto__: dart.getFields(link$.WebLinkDelegateState.__proto__),
    [__WebLinkDelegateState__controller]: dart.fieldType(dart.nullable(link$.LinkViewController))
  }));
  var viewId$ = dart.privateName(link$, "LinkViewController.viewId");
  var __LinkViewController__element = dart.privateName(link$, "_#LinkViewController#_element");
  var _uri = dart.privateName(link$, "_uri");
  var _initialize = dart.privateName(link$, "_initialize");
  var _element = dart.privateName(link$, "_element");
  var _onDomClick = dart.privateName(link$, "_onDomClick");
  var _getHtmlTarget = dart.privateName(link$, "_getHtmlTarget");
  link$.LinkViewController = class LinkViewController extends platform_views.PlatformViewController {
    get viewId() {
      return this[viewId$];
    }
    set viewId(value) {
      super.viewId = value;
    }
    static ['_#new#tearOff'](viewId) {
      return new link$.LinkViewController.new(viewId);
    }
    static fromParams(params) {
      let viewId = params.id;
      let controller = new link$.LinkViewController.new(viewId);
      controller[_initialize]().then(core.Null, dart.fn(_ => {
        let t68, t67;
        if (dart.equals(link$.LinkViewController._instances[$_get](viewId), controller)) {
          t67 = params;
          t68 = viewId;
          t67.onPlatformViewCreated(t68);
        }
      }, T$.voidToNull()));
      return controller;
    }
    static ['_#fromParams#tearOff'](params) {
      return link$.LinkViewController.fromParams(params);
    }
    static _viewFactory(viewId) {
      return dart.nullCheck(link$.LinkViewController._instances[$_get](viewId))[_element];
    }
    static get _clickSubscription() {
      let t67;
      t67 = link$.LinkViewController['_#_clickSubscription'];
      return t67 == null ? dart.throw(new _internal.LateError.fieldNI("_clickSubscription")) : t67;
    }
    static set _clickSubscription(_clickSubscription$35param) {
      link$.LinkViewController['_#_clickSubscription'] = _clickSubscription$35param;
    }
    static _onGlobalClick(event) {
      let t67;
      let viewId = link$.getViewIdFromTarget(event);
      t67 = link$.LinkViewController._instances[$_get](viewId);
      t67 == null ? null : t67[_onDomClick](event);
      link$.LinkViewController.unregisterHitTest();
    }
    static registerHitTest(controller) {
      link$.LinkViewController._hitTestedViewId = controller.viewId;
    }
    static unregisterHitTest() {
      link$.LinkViewController._hitTestedViewId = null;
    }
    get [_element]() {
      let t67;
      t67 = this[__LinkViewController__element];
      return t67 == null ? dart.throw(new _internal.LateError.fieldNI("_element")) : t67;
    }
    set [_element](_element$35param) {
      this[__LinkViewController__element] = _element$35param;
    }
    [_initialize]() {
      return async.async(dart.void, (function* _initialize() {
        let t67;
        this[_element] = html.Element.tag("a");
        js_util._setPropertyUnchecked(core.int, this[_element], "__url_launcher::link::viewId", this.viewId);
        t67 = this[_element][$style];
        (() => {
          t67[$opacity] = "0";
          t67[$display] = "block";
          t67[$width] = "100%";
          t67[$height] = "100%";
          t67[$cursor] = "unset";
          return t67;
        })();
        this[_element][$setAttribute]("rel", "noreferrer noopener");
        let args = new (T$.IdentityMapOfString$dynamic()).from(["id", this.viewId, "viewType", "__url_launcher::link"]);
        yield system_channels.SystemChannels.platform_views.invokeMethod(dart.void, "create", args);
      }).bind(this));
    }
    [_onDomClick](event) {
      let isHitTested = link$.LinkViewController._hitTestedViewId === this.viewId;
      if (!isHitTested) {
        event.preventDefault();
        return;
      }
      if (this[_uri] != null && dart.nullCheck(this[_uri]).hasScheme) {
        return;
      }
      event.preventDefault();
      let routeName = dart.toString(this[_uri]);
      link.pushRouteNameToFramework(null, routeName);
    }
    setUri(uri) {
      let t67, t67$;
      this[_uri] = uri;
      if (uri == null) {
        this[_element][$removeAttribute]("href");
      } else {
        let href = dart.toString(uri);
        if (!uri.hasScheme) {
          href = (t67$ = (t67 = url_strategy.urlStrategy, t67 == null ? null : t67.prepareExternalUrl(href)), t67$ == null ? href : t67$);
        }
        this[_element][$setAttribute]("href", href);
      }
    }
    setTarget(target) {
      this[_element][$setAttribute]("target", this[_getHtmlTarget](target));
    }
    [_getHtmlTarget](target) {
      switch (target) {
        case C[27] || CT.C27:
        case C[28] || CT.C28:
          {
            return "_self";
          }
        case C[29] || CT.C29:
          {
            return "_blank";
          }
      }
      return "_self";
    }
    clearFocus() {
      return async.async(dart.void, function* clearFocus() {
      });
    }
    dispatchPointerEvent(event) {
      return async.async(dart.void, function* dispatchPointerEvent() {
      });
    }
    dispose() {
      return async.async(dart.void, (function* dispose() {
        if (!dart.equals(link$.LinkViewController._instances[$_get](this.viewId), this)) dart.assertFailed(null, I[30], 269, 12, "_instances[viewId] == this");
        link$.LinkViewController._instances[$remove](this.viewId);
        if (link$.LinkViewController._instances[$isEmpty]) {
          yield link$.LinkViewController._clickSubscription.cancel();
        }
        yield system_channels.SystemChannels.platform_views.invokeMethod(dart.void, "dispose", this.viewId);
      }).bind(this));
    }
  };
  (link$.LinkViewController.new = function(viewId) {
    this[__LinkViewController__element] = null;
    this[_uri] = null;
    this[viewId$] = viewId;
    if (link$.LinkViewController._instances[$isEmpty]) {
      link$.LinkViewController._clickSubscription = html.window[$onClick].listen(C[32] || CT.C32);
    }
    link$.LinkViewController._instances[$_set](this.viewId, this);
  }).prototype = link$.LinkViewController.prototype;
  dart.addTypeTests(link$.LinkViewController);
  dart.addTypeCaches(link$.LinkViewController);
  dart.setMethodSignature(link$.LinkViewController, () => ({
    __proto__: dart.getMethods(link$.LinkViewController.__proto__),
    [_initialize]: dart.fnType(async.Future$(dart.void), []),
    [_onDomClick]: dart.fnType(dart.void, [html.MouseEvent]),
    setUri: dart.fnType(dart.void, [dart.nullable(core.Uri)]),
    setTarget: dart.fnType(dart.void, [link.LinkTarget]),
    [_getHtmlTarget]: dart.fnType(core.String, [link.LinkTarget]),
    clearFocus: dart.fnType(async.Future$(dart.void), []),
    dispatchPointerEvent: dart.fnType(async.Future$(dart.void), [events.PointerEvent]),
    dispose: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(link$.LinkViewController, () => ['fromParams', '_viewFactory', '_onGlobalClick', 'registerHitTest', 'unregisterHitTest']);
  dart.setGetterSignature(link$.LinkViewController, () => ({
    __proto__: dart.getGetters(link$.LinkViewController.__proto__),
    [_element]: html.Element
  }));
  dart.setSetterSignature(link$.LinkViewController, () => ({
    __proto__: dart.getSetters(link$.LinkViewController.__proto__),
    [_element]: html.Element
  }));
  dart.setStaticGetterSignature(link$.LinkViewController, () => ['_clickSubscription']);
  dart.setStaticSetterSignature(link$.LinkViewController, () => ['_clickSubscription']);
  dart.setLibraryUri(link$.LinkViewController, I[29]);
  dart.setFieldSignature(link$.LinkViewController, () => ({
    __proto__: dart.getFields(link$.LinkViewController.__proto__),
    viewId: dart.finalFieldType(core.int),
    [__LinkViewController__element]: dart.fieldType(dart.nullable(html.Element)),
    [_uri]: dart.fieldType(dart.nullable(core.Uri))
  }));
  dart.setStaticFieldSignature(link$.LinkViewController, () => ['_instances', '_hitTestedViewId', '_#_clickSubscription']);
  dart.defineLazy(link$.LinkViewController, {
    /*link$.LinkViewController._instances*/get _instances() {
      return new (T$.IdentityMapOfint$LinkViewController()).new();
    },
    /*link$.LinkViewController._hitTestedViewId*/get _hitTestedViewId() {
      return null;
    },
    set _hitTestedViewId(value) {},
    /*link$.LinkViewController['_#_clickSubscription']*/get ['_#_clickSubscription']() {
      return null;
    },
    set ['_#_clickSubscription'](value) {}
  }, false);
  link$.getViewIdFromTarget = function getViewIdFromTarget(event) {
    let linkElement = link$.getLinkElementFromTarget(event);
    if (linkElement != null) {
      return js_util.getProperty(T$.intN(), linkElement, "__url_launcher::link::viewId");
    }
    return null;
  };
  link$.getLinkElementFromTarget = function getLinkElementFromTarget(event) {
    let target = event[$target];
    if (target != null && html.Element.is(target)) {
      if (link$.isLinkElement(target)) {
        return target;
      }
      if (target[$shadowRoot] != null) {
        let child = dart.nullCheck(target[$shadowRoot]).lastChild;
        if (child != null && html.Element.is(child) && link$.isLinkElement(child)) {
          return child;
        }
      }
    }
    return null;
  };
  link$.isLinkElement = function isLinkElement(element) {
    return element != null && element[$tagName] === "A" && js_util.hasProperty(element, "__url_launcher::link::viewId");
  };
  dart.copyProperties(link$, {
    get linkViewFactory() {
      return C[33] || CT.C33;
    }
  });
  dart.defineLazy(link$, {
    /*link$.linkViewType*/get linkViewType() {
      return "__url_launcher::link";
    },
    /*link$.linkViewIdProperty*/get linkViewIdProperty() {
      return "__url_launcher::link::viewId";
    }
  }, false);
  var operation$ = dart.privateName(action_code_info, "ActionCodeInfo.operation");
  var _data = dart.privateName(action_code_info, "_data");
  action_code_info.ActionCodeInfo = class ActionCodeInfo extends core.Object {
    get operation() {
      return this[operation$];
    }
    set operation(value) {
      this[operation$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let operation = opts && 'operation' in opts ? opts.operation : null;
      let data = opts && 'data' in opts ? opts.data : null;
      return new action_code_info.ActionCodeInfo.new({operation: operation, data: data});
    }
    get data() {
      return this[_data].toMap();
    }
  };
  (action_code_info.ActionCodeInfo.new = function(opts) {
    let operation = opts && 'operation' in opts ? opts.operation : null;
    let data = opts && 'data' in opts ? opts.data : null;
    this[operation$] = operation;
    this[_data] = data;
    ;
  }).prototype = action_code_info.ActionCodeInfo.prototype;
  dart.addTypeTests(action_code_info.ActionCodeInfo);
  dart.addTypeCaches(action_code_info.ActionCodeInfo);
  dart.setGetterSignature(action_code_info.ActionCodeInfo, () => ({
    __proto__: dart.getGetters(action_code_info.ActionCodeInfo.__proto__),
    data: core.Map$(core.String, dart.dynamic)
  }));
  dart.setLibraryUri(action_code_info.ActionCodeInfo, I[31]);
  dart.setFieldSignature(action_code_info.ActionCodeInfo, () => ({
    __proto__: dart.getFields(action_code_info.ActionCodeInfo.__proto__),
    operation: dart.fieldType(messages$46pigeon.ActionCodeInfoOperation),
    [_data]: dart.fieldType(action_code_info.ActionCodeInfoData)
  }));
  var email$ = dart.privateName(action_code_info, "ActionCodeInfoData.email");
  var previousEmail$ = dart.privateName(action_code_info, "ActionCodeInfoData.previousEmail");
  action_code_info.ActionCodeInfoData = class ActionCodeInfoData extends core.Object {
    get email() {
      return this[email$];
    }
    set email(value) {
      super.email = value;
    }
    get previousEmail() {
      return this[previousEmail$];
    }
    set previousEmail(value) {
      super.previousEmail = value;
    }
    static ['_#new#tearOff'](opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let previousEmail = opts && 'previousEmail' in opts ? opts.previousEmail : null;
      return new action_code_info.ActionCodeInfoData.new({email: email, previousEmail: previousEmail});
    }
    toMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["email", this.email, "previousEmail", this.previousEmail]);
    }
  };
  (action_code_info.ActionCodeInfoData.new = function(opts) {
    let email = opts && 'email' in opts ? opts.email : null;
    let previousEmail = opts && 'previousEmail' in opts ? opts.previousEmail : null;
    this[email$] = email;
    this[previousEmail$] = previousEmail;
    ;
  }).prototype = action_code_info.ActionCodeInfoData.prototype;
  dart.addTypeTests(action_code_info.ActionCodeInfoData);
  dart.addTypeCaches(action_code_info.ActionCodeInfoData);
  dart.setMethodSignature(action_code_info.ActionCodeInfoData, () => ({
    __proto__: dart.getMethods(action_code_info.ActionCodeInfoData.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(action_code_info.ActionCodeInfoData, I[31]);
  dart.setFieldSignature(action_code_info.ActionCodeInfoData, () => ({
    __proto__: dart.getFields(action_code_info.ActionCodeInfoData.__proto__),
    email: dart.finalFieldType(dart.nullable(core.String)),
    previousEmail: dart.finalFieldType(dart.nullable(core.String))
  }));
  var androidPackageName$ = dart.privateName(action_code_settings, "ActionCodeSettings.androidPackageName");
  var androidMinimumVersion$ = dart.privateName(action_code_settings, "ActionCodeSettings.androidMinimumVersion");
  var androidInstallApp$ = dart.privateName(action_code_settings, "ActionCodeSettings.androidInstallApp");
  var iOSBundleId$ = dart.privateName(action_code_settings, "ActionCodeSettings.iOSBundleId");
  var dynamicLinkDomain$ = dart.privateName(action_code_settings, "ActionCodeSettings.dynamicLinkDomain");
  var handleCodeInApp$ = dart.privateName(action_code_settings, "ActionCodeSettings.handleCodeInApp");
  var url$ = dart.privateName(action_code_settings, "ActionCodeSettings.url");
  action_code_settings.ActionCodeSettings = class ActionCodeSettings extends core.Object {
    get androidPackageName() {
      return this[androidPackageName$];
    }
    set androidPackageName(value) {
      super.androidPackageName = value;
    }
    get androidMinimumVersion() {
      return this[androidMinimumVersion$];
    }
    set androidMinimumVersion(value) {
      super.androidMinimumVersion = value;
    }
    get androidInstallApp() {
      return this[androidInstallApp$];
    }
    set androidInstallApp(value) {
      super.androidInstallApp = value;
    }
    get iOSBundleId() {
      return this[iOSBundleId$];
    }
    set iOSBundleId(value) {
      super.iOSBundleId = value;
    }
    get dynamicLinkDomain() {
      return this[dynamicLinkDomain$];
    }
    set dynamicLinkDomain(value) {
      super.dynamicLinkDomain = value;
    }
    get handleCodeInApp() {
      return this[handleCodeInApp$];
    }
    set handleCodeInApp(value) {
      super.handleCodeInApp = value;
    }
    get url() {
      return this[url$];
    }
    set url(value) {
      super.url = value;
    }
    static ['_#new#tearOff'](opts) {
      let androidPackageName = opts && 'androidPackageName' in opts ? opts.androidPackageName : null;
      let androidMinimumVersion = opts && 'androidMinimumVersion' in opts ? opts.androidMinimumVersion : null;
      let androidInstallApp = opts && 'androidInstallApp' in opts ? opts.androidInstallApp : false;
      let dynamicLinkDomain = opts && 'dynamicLinkDomain' in opts ? opts.dynamicLinkDomain : null;
      let handleCodeInApp = opts && 'handleCodeInApp' in opts ? opts.handleCodeInApp : false;
      let iOSBundleId = opts && 'iOSBundleId' in opts ? opts.iOSBundleId : null;
      let url = opts && 'url' in opts ? opts.url : null;
      return new action_code_settings.ActionCodeSettings.new({androidPackageName: androidPackageName, androidMinimumVersion: androidMinimumVersion, androidInstallApp: androidInstallApp, dynamicLinkDomain: dynamicLinkDomain, handleCodeInApp: handleCodeInApp, iOSBundleId: iOSBundleId, url: url});
    }
    asMap() {
      return (() => {
        let t67 = new (T$.IdentityMapOfString$dynamic()).new();
        t67[$_set]("url", this.url);
        t67[$_set]("dynamicLinkDomain", this.dynamicLinkDomain);
        t67[$_set]("handleCodeInApp", this.handleCodeInApp);
        if (this.iOSBundleId != null) t67[$_set]("iOS", new (T$.IdentityMapOfString$StringN()).from(["bundleId", this.iOSBundleId]));
        if (this.androidPackageName != null) t67[$_set]("android", new (T$.IdentityMapOfString$ObjectN()).from(["packageName", this.androidPackageName, "minimumVersion", this.androidMinimumVersion, "installApp", this.androidInstallApp]));
        return t67;
      })();
    }
    toString() {
      return dart.str(dart.wrapType(action_code_settings.ActionCodeSettings)) + "(" + dart.str(dart.bind(this, 'asMap')) + ")";
    }
  };
  (action_code_settings.ActionCodeSettings.new = function(opts) {
    let androidPackageName = opts && 'androidPackageName' in opts ? opts.androidPackageName : null;
    let androidMinimumVersion = opts && 'androidMinimumVersion' in opts ? opts.androidMinimumVersion : null;
    let androidInstallApp = opts && 'androidInstallApp' in opts ? opts.androidInstallApp : false;
    let dynamicLinkDomain = opts && 'dynamicLinkDomain' in opts ? opts.dynamicLinkDomain : null;
    let handleCodeInApp = opts && 'handleCodeInApp' in opts ? opts.handleCodeInApp : false;
    let iOSBundleId = opts && 'iOSBundleId' in opts ? opts.iOSBundleId : null;
    let url = opts && 'url' in opts ? opts.url : null;
    this[androidPackageName$] = androidPackageName;
    this[androidMinimumVersion$] = androidMinimumVersion;
    this[androidInstallApp$] = androidInstallApp;
    this[dynamicLinkDomain$] = dynamicLinkDomain;
    this[handleCodeInApp$] = handleCodeInApp;
    this[iOSBundleId$] = iOSBundleId;
    this[url$] = url;
    ;
  }).prototype = action_code_settings.ActionCodeSettings.prototype;
  dart.addTypeTests(action_code_settings.ActionCodeSettings);
  dart.addTypeCaches(action_code_settings.ActionCodeSettings);
  dart.setMethodSignature(action_code_settings.ActionCodeSettings, () => ({
    __proto__: dart.getMethods(action_code_settings.ActionCodeSettings.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(action_code_settings.ActionCodeSettings, I[32]);
  dart.setFieldSignature(action_code_settings.ActionCodeSettings, () => ({
    __proto__: dart.getFields(action_code_settings.ActionCodeSettings.__proto__),
    androidPackageName: dart.finalFieldType(dart.nullable(core.String)),
    androidMinimumVersion: dart.finalFieldType(dart.nullable(core.String)),
    androidInstallApp: dart.finalFieldType(core.bool),
    iOSBundleId: dart.finalFieldType(dart.nullable(core.String)),
    dynamicLinkDomain: dart.finalFieldType(dart.nullable(core.String)),
    handleCodeInApp: dart.finalFieldType(core.bool),
    url: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(action_code_settings.ActionCodeSettings, ['toString']);
  var isNewUser$ = dart.privateName(additional_user_info, "AdditionalUserInfo.isNewUser");
  var profile$ = dart.privateName(additional_user_info, "AdditionalUserInfo.profile");
  var providerId$ = dart.privateName(additional_user_info, "AdditionalUserInfo.providerId");
  var username$ = dart.privateName(additional_user_info, "AdditionalUserInfo.username");
  additional_user_info.AdditionalUserInfo = class AdditionalUserInfo extends core.Object {
    get isNewUser() {
      return this[isNewUser$];
    }
    set isNewUser(value) {
      super.isNewUser = value;
    }
    get profile() {
      return this[profile$];
    }
    set profile(value) {
      super.profile = value;
    }
    get providerId() {
      return this[providerId$];
    }
    set providerId(value) {
      super.providerId = value;
    }
    get username() {
      return this[username$];
    }
    set username(value) {
      super.username = value;
    }
    static ['_#new#tearOff'](opts) {
      let isNewUser = opts && 'isNewUser' in opts ? opts.isNewUser : null;
      let profile = opts && 'profile' in opts ? opts.profile : null;
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let username = opts && 'username' in opts ? opts.username : null;
      return new additional_user_info.AdditionalUserInfo.new({isNewUser: isNewUser, profile: profile, providerId: providerId, username: username});
    }
    toString() {
      return dart.str(dart.wrapType(additional_user_info.AdditionalUserInfo)) + "(" + "isNewUser: " + dart.str(this.isNewUser) + ", " + "profile: " + dart.str(this.profile) + ", " + "providerId: " + dart.str(this.providerId) + ", " + "username: " + dart.str(this.username) + ")";
    }
  };
  (additional_user_info.AdditionalUserInfo.new = function(opts) {
    let isNewUser = opts && 'isNewUser' in opts ? opts.isNewUser : null;
    let profile = opts && 'profile' in opts ? opts.profile : null;
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let username = opts && 'username' in opts ? opts.username : null;
    this[isNewUser$] = isNewUser;
    this[profile$] = profile;
    this[providerId$] = providerId;
    this[username$] = username;
    ;
  }).prototype = additional_user_info.AdditionalUserInfo.prototype;
  dart.addTypeTests(additional_user_info.AdditionalUserInfo);
  dart.addTypeCaches(additional_user_info.AdditionalUserInfo);
  dart.setLibraryUri(additional_user_info.AdditionalUserInfo, I[33]);
  dart.setFieldSignature(additional_user_info.AdditionalUserInfo, () => ({
    __proto__: dart.getFields(additional_user_info.AdditionalUserInfo.__proto__),
    isNewUser: dart.finalFieldType(core.bool),
    profile: dart.finalFieldType(dart.nullable(core.Map$(core.String, dart.dynamic))),
    providerId: dart.finalFieldType(dart.nullable(core.String)),
    username: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(additional_user_info.AdditionalUserInfo, ['toString']);
  var providerId$0 = dart.privateName(auth_credential, "AuthCredential.providerId");
  var signInMethod$ = dart.privateName(auth_credential, "AuthCredential.signInMethod");
  var token$ = dart.privateName(auth_credential, "AuthCredential.token");
  var accessToken$ = dart.privateName(auth_credential, "AuthCredential.accessToken");
  auth_credential.AuthCredential = class AuthCredential extends core.Object {
    get providerId() {
      return this[providerId$0];
    }
    set providerId(value) {
      super.providerId = value;
    }
    get signInMethod() {
      return this[signInMethod$];
    }
    set signInMethod(value) {
      super.signInMethod = value;
    }
    get token() {
      return this[token$];
    }
    set token(value) {
      super.token = value;
    }
    get accessToken() {
      return this[accessToken$];
    }
    set accessToken(value) {
      super.accessToken = value;
    }
    static ['_#new#tearOff'](opts) {
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      let token = opts && 'token' in opts ? opts.token : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new auth_credential.AuthCredential.new({providerId: providerId, signInMethod: signInMethod, token: token, accessToken: accessToken});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "token", this.token, "accessToken", this.accessToken]);
    }
    toString() {
      return "AuthCredential(providerId: " + this.providerId + ", signInMethod: " + this.signInMethod + ", token: " + dart.str(this.token) + ", accessToken: " + dart.str(this.accessToken) + ")";
    }
  };
  (auth_credential.AuthCredential.new = function(opts) {
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
    let token = opts && 'token' in opts ? opts.token : null;
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    this[providerId$0] = providerId;
    this[signInMethod$] = signInMethod;
    this[token$] = token;
    this[accessToken$] = accessToken;
    ;
  }).prototype = auth_credential.AuthCredential.prototype;
  dart.addTypeTests(auth_credential.AuthCredential);
  dart.addTypeCaches(auth_credential.AuthCredential);
  dart.setMethodSignature(auth_credential.AuthCredential, () => ({
    __proto__: dart.getMethods(auth_credential.AuthCredential.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(auth_credential.AuthCredential, I[34]);
  dart.setFieldSignature(auth_credential.AuthCredential, () => ({
    __proto__: dart.getFields(auth_credential.AuthCredential.__proto__),
    providerId: dart.finalFieldType(core.String),
    signInMethod: dart.finalFieldType(core.String),
    token: dart.finalFieldType(dart.nullable(core.int)),
    accessToken: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(auth_credential.AuthCredential, ['toString']);
  var providerId$1 = dart.privateName(auth_provider, "AuthProvider.providerId");
  auth_provider.AuthProvider = class AuthProvider extends core.Object {
    get providerId() {
      return this[providerId$1];
    }
    set providerId(value) {
      super.providerId = value;
    }
    toString() {
      return "AuthProvider(providerId: " + this.providerId + ")";
    }
  };
  (auth_provider.AuthProvider.new = function(providerId) {
    this[providerId$1] = providerId;
    ;
  }).prototype = auth_provider.AuthProvider.prototype;
  dart.addTypeTests(auth_provider.AuthProvider);
  dart.addTypeCaches(auth_provider.AuthProvider);
  dart.setLibraryUri(auth_provider.AuthProvider, I[35]);
  dart.setFieldSignature(auth_provider.AuthProvider, () => ({
    __proto__: dart.getFields(auth_provider.AuthProvider.__proto__),
    providerId: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(auth_provider.AuthProvider, ['toString']);
  var email$0 = dart.privateName(firebase_auth_exception, "FirebaseAuthException.email");
  var credential$0 = dart.privateName(firebase_auth_exception, "FirebaseAuthException.credential");
  var phoneNumber$ = dart.privateName(firebase_auth_exception, "FirebaseAuthException.phoneNumber");
  var tenantId$ = dart.privateName(firebase_auth_exception, "FirebaseAuthException.tenantId");
  firebase_auth_exception.FirebaseAuthException = class FirebaseAuthException extends firebase_core_platform_interface.FirebaseException {
    get email() {
      return this[email$0];
    }
    set email(value) {
      super.email = value;
    }
    get credential() {
      return this[credential$0];
    }
    set credential(value) {
      super.credential = value;
    }
    get phoneNumber() {
      return this[phoneNumber$];
    }
    set phoneNumber(value) {
      super.phoneNumber = value;
    }
    get tenantId() {
      return this[tenantId$];
    }
    set tenantId(value) {
      super.tenantId = value;
    }
    static ['_#new#tearOff'](opts) {
      let message = opts && 'message' in opts ? opts.message : null;
      let code = opts && 'code' in opts ? opts.code : null;
      let email = opts && 'email' in opts ? opts.email : null;
      let credential = opts && 'credential' in opts ? opts.credential : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      return new firebase_auth_exception.FirebaseAuthException.new({message: message, code: code, email: email, credential: credential, phoneNumber: phoneNumber, tenantId: tenantId});
    }
  };
  (firebase_auth_exception.FirebaseAuthException.new = function(opts) {
    let message = opts && 'message' in opts ? opts.message : null;
    let code = opts && 'code' in opts ? opts.code : null;
    let email = opts && 'email' in opts ? opts.email : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    this[email$0] = email;
    this[credential$0] = credential;
    this[phoneNumber$] = phoneNumber;
    this[tenantId$] = tenantId;
    firebase_auth_exception.FirebaseAuthException.__proto__.new.call(this, {plugin: "firebase_auth", message: message, code: code});
    ;
  }).prototype = firebase_auth_exception.FirebaseAuthException.prototype;
  dart.addTypeTests(firebase_auth_exception.FirebaseAuthException);
  dart.addTypeCaches(firebase_auth_exception.FirebaseAuthException);
  firebase_auth_exception.FirebaseAuthException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(firebase_auth_exception.FirebaseAuthException, I[36]);
  dart.setFieldSignature(firebase_auth_exception.FirebaseAuthException, () => ({
    __proto__: dart.getFields(firebase_auth_exception.FirebaseAuthException.__proto__),
    email: dart.finalFieldType(dart.nullable(core.String)),
    credential: dart.finalFieldType(dart.nullable(auth_credential.AuthCredential)),
    phoneNumber: dart.finalFieldType(dart.nullable(core.String)),
    tenantId: dart.finalFieldType(dart.nullable(core.String))
  }));
  var resolver$ = dart.privateName(firebase_auth_multi_factor_exception, "FirebaseAuthMultiFactorExceptionPlatform.resolver");
  firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform = class FirebaseAuthMultiFactorExceptionPlatform extends firebase_auth_exception.FirebaseAuthException {
    get resolver() {
      return this[resolver$];
    }
    set resolver(value) {
      super.resolver = value;
    }
    static ['_#new#tearOff'](opts) {
      let message = opts && 'message' in opts ? opts.message : null;
      let code = opts && 'code' in opts ? opts.code : null;
      let email = opts && 'email' in opts ? opts.email : null;
      let credential = opts && 'credential' in opts ? opts.credential : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      let resolver = opts && 'resolver' in opts ? opts.resolver : null;
      return new firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new({message: message, code: code, email: email, credential: credential, phoneNumber: phoneNumber, tenantId: tenantId, resolver: resolver});
    }
  };
  (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new = function(opts) {
    let message = opts && 'message' in opts ? opts.message : null;
    let code = opts && 'code' in opts ? opts.code : null;
    let email = opts && 'email' in opts ? opts.email : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    let resolver = opts && 'resolver' in opts ? opts.resolver : null;
    this[resolver$] = resolver;
    firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.__proto__.new.call(this, {message: message, code: code, email: email, credential: credential, phoneNumber: phoneNumber, tenantId: tenantId});
    ;
  }).prototype = firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.prototype;
  dart.addTypeTests(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform);
  dart.addTypeCaches(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform);
  firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform, I[37]);
  dart.setFieldSignature(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform, () => ({
    __proto__: dart.getFields(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.__proto__),
    resolver: dart.finalFieldType(platform_interface_multi_factor.MultiFactorResolverPlatform)
  }));
  var _data$ = dart.privateName(id_token_result, "_data");
  id_token_result.IdTokenResult = class IdTokenResult extends core.Object {
    static ['_#new#tearOff'](_data) {
      return new id_token_result.IdTokenResult.new(_data);
    }
    get authTime() {
      return this[_data$].authTimestamp == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[_data$].authTimestamp));
    }
    get claims() {
      return this[_data$].claims == null ? null : T$.LinkedHashMapOfString$dynamic().from(dart.nullCheck(this[_data$].claims));
    }
    get expirationTime() {
      return this[_data$].expirationTimestamp == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[_data$].expirationTimestamp));
    }
    get issuedAtTime() {
      return this[_data$].issuedAtTimestamp == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[_data$].issuedAtTimestamp));
    }
    get signInProvider() {
      return this[_data$].signInProvider;
    }
    get token() {
      return this[_data$].token;
    }
    toString() {
      return dart.str(dart.wrapType(id_token_result.IdTokenResult)) + "(authTime: " + dart.str(this.authTime) + ", claims: " + dart.str(this.claims) + ", expirationTime: " + dart.str(this.expirationTime) + ", issuedAtTime: " + dart.str(this.issuedAtTime) + ", signInProvider: " + dart.str(this.signInProvider) + ", token: " + dart.str(this.token) + ")";
    }
  };
  (id_token_result.IdTokenResult.new = function(_data) {
    this[_data$] = _data;
    ;
  }).prototype = id_token_result.IdTokenResult.prototype;
  dart.addTypeTests(id_token_result.IdTokenResult);
  dart.addTypeCaches(id_token_result.IdTokenResult);
  dart.setGetterSignature(id_token_result.IdTokenResult, () => ({
    __proto__: dart.getGetters(id_token_result.IdTokenResult.__proto__),
    authTime: dart.nullable(core.DateTime),
    claims: dart.nullable(core.Map$(core.String, dart.dynamic)),
    expirationTime: dart.nullable(core.DateTime),
    issuedAtTime: dart.nullable(core.DateTime),
    signInProvider: dart.nullable(core.String),
    token: dart.nullable(core.String)
  }));
  dart.setLibraryUri(id_token_result.IdTokenResult, I[38]);
  dart.setFieldSignature(id_token_result.IdTokenResult, () => ({
    __proto__: dart.getFields(id_token_result.IdTokenResult.__proto__),
    [_data$]: dart.finalFieldType(messages$46pigeon.PigeonIdTokenResult)
  }));
  dart.defineExtensionMethods(id_token_result.IdTokenResult, ['toString']);
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  messages$46pigeon.ActionCodeInfoOperation = class ActionCodeInfoOperation extends core._Enum {
    [_enumToString]() {
      return "ActionCodeInfoOperation." + this[_name];
    }
  };
  (messages$46pigeon.ActionCodeInfoOperation.new = function(index, name) {
    messages$46pigeon.ActionCodeInfoOperation.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon.ActionCodeInfoOperation.prototype;
  dart.addTypeTests(messages$46pigeon.ActionCodeInfoOperation);
  dart.addTypeCaches(messages$46pigeon.ActionCodeInfoOperation);
  dart.setMethodSignature(messages$46pigeon.ActionCodeInfoOperation, () => ({
    __proto__: dart.getMethods(messages$46pigeon.ActionCodeInfoOperation.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon.ActionCodeInfoOperation, I[39]);
  dart.setStaticFieldSignature(messages$46pigeon.ActionCodeInfoOperation, () => ['values', 'unknown', 'passwordReset', 'verifyEmail', 'recoverEmail', 'emailSignIn', 'verifyAndChangeEmail', 'revertSecondFactorAddition']);
  dart.defineLazy(messages$46pigeon.ActionCodeInfoOperation, {
    /*messages$46pigeon.ActionCodeInfoOperation.values*/get values() {
      return C[34] || CT.C34;
    },
    /*messages$46pigeon.ActionCodeInfoOperation.unknown*/get unknown() {
      return C[35] || CT.C35;
    },
    /*messages$46pigeon.ActionCodeInfoOperation.passwordReset*/get passwordReset() {
      return C[36] || CT.C36;
    },
    /*messages$46pigeon.ActionCodeInfoOperation.verifyEmail*/get verifyEmail() {
      return C[37] || CT.C37;
    },
    /*messages$46pigeon.ActionCodeInfoOperation.recoverEmail*/get recoverEmail() {
      return C[38] || CT.C38;
    },
    /*messages$46pigeon.ActionCodeInfoOperation.emailSignIn*/get emailSignIn() {
      return C[39] || CT.C39;
    },
    /*messages$46pigeon.ActionCodeInfoOperation.verifyAndChangeEmail*/get verifyAndChangeEmail() {
      return C[40] || CT.C40;
    },
    /*messages$46pigeon.ActionCodeInfoOperation.revertSecondFactorAddition*/get revertSecondFactorAddition() {
      return C[41] || CT.C41;
    }
  }, false);
  var id$0 = dart.privateName(messages$46pigeon, "PigeonMultiFactorSession.id");
  messages$46pigeon.PigeonMultiFactorSession = class PigeonMultiFactorSession extends core.Object {
    get id() {
      return this[id$0];
    }
    set id(value) {
      this[id$0] = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      return new messages$46pigeon.PigeonMultiFactorSession.new({id: id});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.id]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonMultiFactorSession.new({id: core.String.as(dart.nullCheck(result[$_get](0)))});
    }
  };
  (messages$46pigeon.PigeonMultiFactorSession.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    this[id$0] = id;
    ;
  }).prototype = messages$46pigeon.PigeonMultiFactorSession.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonMultiFactorSession);
  dart.addTypeCaches(messages$46pigeon.PigeonMultiFactorSession);
  dart.setMethodSignature(messages$46pigeon.PigeonMultiFactorSession, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonMultiFactorSession.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonMultiFactorSession, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonMultiFactorSession, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonMultiFactorSession, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonMultiFactorSession.__proto__),
    id: dart.fieldType(core.String)
  }));
  var verificationId$0 = dart.privateName(messages$46pigeon, "PigeonPhoneMultiFactorAssertion.verificationId");
  var verificationCode$ = dart.privateName(messages$46pigeon, "PigeonPhoneMultiFactorAssertion.verificationCode");
  messages$46pigeon.PigeonPhoneMultiFactorAssertion = class PigeonPhoneMultiFactorAssertion extends core.Object {
    get verificationId() {
      return this[verificationId$0];
    }
    set verificationId(value) {
      this[verificationId$0] = value;
    }
    get verificationCode() {
      return this[verificationCode$];
    }
    set verificationCode(value) {
      this[verificationCode$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
      let verificationCode = opts && 'verificationCode' in opts ? opts.verificationCode : null;
      return new messages$46pigeon.PigeonPhoneMultiFactorAssertion.new({verificationId: verificationId, verificationCode: verificationCode});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.verificationId, this.verificationCode]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonPhoneMultiFactorAssertion.new({verificationId: core.String.as(dart.nullCheck(result[$_get](0))), verificationCode: core.String.as(dart.nullCheck(result[$_get](1)))});
    }
  };
  (messages$46pigeon.PigeonPhoneMultiFactorAssertion.new = function(opts) {
    let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
    let verificationCode = opts && 'verificationCode' in opts ? opts.verificationCode : null;
    this[verificationId$0] = verificationId;
    this[verificationCode$] = verificationCode;
    ;
  }).prototype = messages$46pigeon.PigeonPhoneMultiFactorAssertion.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonPhoneMultiFactorAssertion);
  dart.addTypeCaches(messages$46pigeon.PigeonPhoneMultiFactorAssertion);
  dart.setMethodSignature(messages$46pigeon.PigeonPhoneMultiFactorAssertion, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonPhoneMultiFactorAssertion.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonPhoneMultiFactorAssertion, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonPhoneMultiFactorAssertion, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonPhoneMultiFactorAssertion, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonPhoneMultiFactorAssertion.__proto__),
    verificationId: dart.fieldType(core.String),
    verificationCode: dart.fieldType(core.String)
  }));
  var displayName$ = dart.privateName(messages$46pigeon, "PigeonMultiFactorInfo.displayName");
  var enrollmentTimestamp$ = dart.privateName(messages$46pigeon, "PigeonMultiFactorInfo.enrollmentTimestamp");
  var factorId$ = dart.privateName(messages$46pigeon, "PigeonMultiFactorInfo.factorId");
  var uid$ = dart.privateName(messages$46pigeon, "PigeonMultiFactorInfo.uid");
  var phoneNumber$0 = dart.privateName(messages$46pigeon, "PigeonMultiFactorInfo.phoneNumber");
  messages$46pigeon.PigeonMultiFactorInfo = class PigeonMultiFactorInfo extends core.Object {
    get displayName() {
      return this[displayName$];
    }
    set displayName(value) {
      this[displayName$] = value;
    }
    get enrollmentTimestamp() {
      return this[enrollmentTimestamp$];
    }
    set enrollmentTimestamp(value) {
      this[enrollmentTimestamp$] = value;
    }
    get factorId() {
      return this[factorId$];
    }
    set factorId(value) {
      this[factorId$] = value;
    }
    get uid() {
      return this[uid$];
    }
    set uid(value) {
      this[uid$] = value;
    }
    get phoneNumber() {
      return this[phoneNumber$0];
    }
    set phoneNumber(value) {
      this[phoneNumber$0] = value;
    }
    static ['_#new#tearOff'](opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
      let factorId = opts && 'factorId' in opts ? opts.factorId : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      return new messages$46pigeon.PigeonMultiFactorInfo.new({displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid, phoneNumber: phoneNumber});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.displayName, this.enrollmentTimestamp, this.factorId, this.uid, this.phoneNumber]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonMultiFactorInfo.new({displayName: T$.StringN().as(result[$_get](0)), enrollmentTimestamp: core.double.as(dart.nullCheck(result[$_get](1))), factorId: T$.StringN().as(result[$_get](2)), uid: core.String.as(dart.nullCheck(result[$_get](3))), phoneNumber: T$.StringN().as(result[$_get](4))});
    }
  };
  (messages$46pigeon.PigeonMultiFactorInfo.new = function(opts) {
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
    let factorId = opts && 'factorId' in opts ? opts.factorId : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    this[displayName$] = displayName;
    this[enrollmentTimestamp$] = enrollmentTimestamp;
    this[factorId$] = factorId;
    this[uid$] = uid;
    this[phoneNumber$0] = phoneNumber;
    ;
  }).prototype = messages$46pigeon.PigeonMultiFactorInfo.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonMultiFactorInfo);
  dart.addTypeCaches(messages$46pigeon.PigeonMultiFactorInfo);
  dart.setMethodSignature(messages$46pigeon.PigeonMultiFactorInfo, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonMultiFactorInfo.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonMultiFactorInfo, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonMultiFactorInfo, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonMultiFactorInfo, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonMultiFactorInfo.__proto__),
    displayName: dart.fieldType(dart.nullable(core.String)),
    enrollmentTimestamp: dart.fieldType(core.double),
    factorId: dart.fieldType(dart.nullable(core.String)),
    uid: dart.fieldType(core.String),
    phoneNumber: dart.fieldType(dart.nullable(core.String))
  }));
  var appName$ = dart.privateName(messages$46pigeon, "PigeonFirebaseApp.appName");
  var tenantId$0 = dart.privateName(messages$46pigeon, "PigeonFirebaseApp.tenantId");
  messages$46pigeon.PigeonFirebaseApp = class PigeonFirebaseApp extends core.Object {
    get appName() {
      return this[appName$];
    }
    set appName(value) {
      this[appName$] = value;
    }
    get tenantId() {
      return this[tenantId$0];
    }
    set tenantId(value) {
      this[tenantId$0] = value;
    }
    static ['_#new#tearOff'](opts) {
      let appName = opts && 'appName' in opts ? opts.appName : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      return new messages$46pigeon.PigeonFirebaseApp.new({appName: appName, tenantId: tenantId});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.appName, this.tenantId]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonFirebaseApp.new({appName: core.String.as(dart.nullCheck(result[$_get](0))), tenantId: T$.StringN().as(result[$_get](1))});
    }
  };
  (messages$46pigeon.PigeonFirebaseApp.new = function(opts) {
    let appName = opts && 'appName' in opts ? opts.appName : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    this[appName$] = appName;
    this[tenantId$0] = tenantId;
    ;
  }).prototype = messages$46pigeon.PigeonFirebaseApp.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonFirebaseApp);
  dart.addTypeCaches(messages$46pigeon.PigeonFirebaseApp);
  dart.setMethodSignature(messages$46pigeon.PigeonFirebaseApp, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonFirebaseApp.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonFirebaseApp, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonFirebaseApp, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonFirebaseApp, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonFirebaseApp.__proto__),
    appName: dart.fieldType(core.String),
    tenantId: dart.fieldType(dart.nullable(core.String))
  }));
  var operation$0 = dart.privateName(messages$46pigeon, "PigeonActionCodeInfo.operation");
  var data$ = dart.privateName(messages$46pigeon, "PigeonActionCodeInfo.data");
  messages$46pigeon.PigeonActionCodeInfo = class PigeonActionCodeInfo extends core.Object {
    get operation() {
      return this[operation$0];
    }
    set operation(value) {
      this[operation$0] = value;
    }
    get data() {
      return this[data$];
    }
    set data(value) {
      this[data$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let operation = opts && 'operation' in opts ? opts.operation : null;
      let data = opts && 'data' in opts ? opts.data : null;
      return new messages$46pigeon.PigeonActionCodeInfo.new({operation: operation, data: data});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.operation.index, this.data.encode()]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonActionCodeInfo.new({operation: messages$46pigeon.ActionCodeInfoOperation.values[$_get](core.int.as(dart.nullCheck(result[$_get](0)))), data: messages$46pigeon.PigeonActionCodeInfoData.decode(T$.ListOfObjectN().as(dart.nullCheck(result[$_get](1))))});
    }
  };
  (messages$46pigeon.PigeonActionCodeInfo.new = function(opts) {
    let operation = opts && 'operation' in opts ? opts.operation : null;
    let data = opts && 'data' in opts ? opts.data : null;
    this[operation$0] = operation;
    this[data$] = data;
    ;
  }).prototype = messages$46pigeon.PigeonActionCodeInfo.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonActionCodeInfo);
  dart.addTypeCaches(messages$46pigeon.PigeonActionCodeInfo);
  dart.setMethodSignature(messages$46pigeon.PigeonActionCodeInfo, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonActionCodeInfo.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonActionCodeInfo, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonActionCodeInfo, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonActionCodeInfo, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonActionCodeInfo.__proto__),
    operation: dart.fieldType(messages$46pigeon.ActionCodeInfoOperation),
    data: dart.fieldType(messages$46pigeon.PigeonActionCodeInfoData)
  }));
  var email$1 = dart.privateName(messages$46pigeon, "PigeonActionCodeInfoData.email");
  var previousEmail$0 = dart.privateName(messages$46pigeon, "PigeonActionCodeInfoData.previousEmail");
  messages$46pigeon.PigeonActionCodeInfoData = class PigeonActionCodeInfoData extends core.Object {
    get email() {
      return this[email$1];
    }
    set email(value) {
      this[email$1] = value;
    }
    get previousEmail() {
      return this[previousEmail$0];
    }
    set previousEmail(value) {
      this[previousEmail$0] = value;
    }
    static ['_#new#tearOff'](opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let previousEmail = opts && 'previousEmail' in opts ? opts.previousEmail : null;
      return new messages$46pigeon.PigeonActionCodeInfoData.new({email: email, previousEmail: previousEmail});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.email, this.previousEmail]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonActionCodeInfoData.new({email: T$.StringN().as(result[$_get](0)), previousEmail: T$.StringN().as(result[$_get](1))});
    }
  };
  (messages$46pigeon.PigeonActionCodeInfoData.new = function(opts) {
    let email = opts && 'email' in opts ? opts.email : null;
    let previousEmail = opts && 'previousEmail' in opts ? opts.previousEmail : null;
    this[email$1] = email;
    this[previousEmail$0] = previousEmail;
    ;
  }).prototype = messages$46pigeon.PigeonActionCodeInfoData.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonActionCodeInfoData);
  dart.addTypeCaches(messages$46pigeon.PigeonActionCodeInfoData);
  dart.setMethodSignature(messages$46pigeon.PigeonActionCodeInfoData, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonActionCodeInfoData.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonActionCodeInfoData, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonActionCodeInfoData, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonActionCodeInfoData, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonActionCodeInfoData.__proto__),
    email: dart.fieldType(dart.nullable(core.String)),
    previousEmail: dart.fieldType(dart.nullable(core.String))
  }));
  var user$0 = dart.privateName(messages$46pigeon, "PigeonUserCredential.user");
  var additionalUserInfo$0 = dart.privateName(messages$46pigeon, "PigeonUserCredential.additionalUserInfo");
  var credential$1 = dart.privateName(messages$46pigeon, "PigeonUserCredential.credential");
  messages$46pigeon.PigeonUserCredential = class PigeonUserCredential extends core.Object {
    get user() {
      return this[user$0];
    }
    set user(value) {
      this[user$0] = value;
    }
    get additionalUserInfo() {
      return this[additionalUserInfo$0];
    }
    set additionalUserInfo(value) {
      this[additionalUserInfo$0] = value;
    }
    get credential() {
      return this[credential$1];
    }
    set credential(value) {
      this[credential$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let user = opts && 'user' in opts ? opts.user : null;
      let additionalUserInfo = opts && 'additionalUserInfo' in opts ? opts.additionalUserInfo : null;
      let credential = opts && 'credential' in opts ? opts.credential : null;
      return new messages$46pigeon.PigeonUserCredential.new({user: user, additionalUserInfo: additionalUserInfo, credential: credential});
    }
    encode() {
      let t70, t70$, t70$0;
      return T$.JSArrayOfObjectN().of([(t70 = this.user, t70 == null ? null : t70.encode()), (t70$ = this.additionalUserInfo, t70$ == null ? null : t70$.encode()), (t70$0 = this.credential, t70$0 == null ? null : t70$0.encode())]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonUserCredential.new({user: result[$_get](0) != null ? messages$46pigeon.PigeonUserDetails.decode(T$.ListOfObjectN().as(dart.nullCheck(result[$_get](0)))) : null, additionalUserInfo: result[$_get](1) != null ? messages$46pigeon.PigeonAdditionalUserInfo.decode(T$.ListOfObjectN().as(dart.nullCheck(result[$_get](1)))) : null, credential: result[$_get](2) != null ? messages$46pigeon.PigeonAuthCredential.decode(T$.ListOfObjectN().as(dart.nullCheck(result[$_get](2)))) : null});
    }
  };
  (messages$46pigeon.PigeonUserCredential.new = function(opts) {
    let user = opts && 'user' in opts ? opts.user : null;
    let additionalUserInfo = opts && 'additionalUserInfo' in opts ? opts.additionalUserInfo : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    this[user$0] = user;
    this[additionalUserInfo$0] = additionalUserInfo;
    this[credential$1] = credential;
    ;
  }).prototype = messages$46pigeon.PigeonUserCredential.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonUserCredential);
  dart.addTypeCaches(messages$46pigeon.PigeonUserCredential);
  dart.setMethodSignature(messages$46pigeon.PigeonUserCredential, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonUserCredential.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonUserCredential, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonUserCredential, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonUserCredential, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonUserCredential.__proto__),
    user: dart.fieldType(dart.nullable(messages$46pigeon.PigeonUserDetails)),
    additionalUserInfo: dart.fieldType(dart.nullable(messages$46pigeon.PigeonAdditionalUserInfo)),
    credential: dart.fieldType(dart.nullable(messages$46pigeon.PigeonAuthCredential))
  }));
  var isNewUser$0 = dart.privateName(messages$46pigeon, "PigeonAdditionalUserInfo.isNewUser");
  var providerId$2 = dart.privateName(messages$46pigeon, "PigeonAdditionalUserInfo.providerId");
  var username$0 = dart.privateName(messages$46pigeon, "PigeonAdditionalUserInfo.username");
  var profile$0 = dart.privateName(messages$46pigeon, "PigeonAdditionalUserInfo.profile");
  messages$46pigeon.PigeonAdditionalUserInfo = class PigeonAdditionalUserInfo extends core.Object {
    get isNewUser() {
      return this[isNewUser$0];
    }
    set isNewUser(value) {
      this[isNewUser$0] = value;
    }
    get providerId() {
      return this[providerId$2];
    }
    set providerId(value) {
      this[providerId$2] = value;
    }
    get username() {
      return this[username$0];
    }
    set username(value) {
      this[username$0] = value;
    }
    get profile() {
      return this[profile$0];
    }
    set profile(value) {
      this[profile$0] = value;
    }
    static ['_#new#tearOff'](opts) {
      let isNewUser = opts && 'isNewUser' in opts ? opts.isNewUser : null;
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let username = opts && 'username' in opts ? opts.username : null;
      let profile = opts && 'profile' in opts ? opts.profile : null;
      return new messages$46pigeon.PigeonAdditionalUserInfo.new({isNewUser: isNewUser, providerId: providerId, username: username, profile: profile});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.isNewUser, this.providerId, this.username, this.profile]);
    }
    static decode(result) {
      let t70;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonAdditionalUserInfo.new({isNewUser: core.bool.as(dart.nullCheck(result[$_get](0))), providerId: T$.StringN().as(result[$_get](1)), username: T$.StringN().as(result[$_get](2)), profile: (t70 = T$.MapNOfObjectN$ObjectN().as(result[$_get](3)), t70 == null ? null : t70[$cast](T$.StringN(), T$.ObjectN()))});
    }
  };
  (messages$46pigeon.PigeonAdditionalUserInfo.new = function(opts) {
    let isNewUser = opts && 'isNewUser' in opts ? opts.isNewUser : null;
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let username = opts && 'username' in opts ? opts.username : null;
    let profile = opts && 'profile' in opts ? opts.profile : null;
    this[isNewUser$0] = isNewUser;
    this[providerId$2] = providerId;
    this[username$0] = username;
    this[profile$0] = profile;
    ;
  }).prototype = messages$46pigeon.PigeonAdditionalUserInfo.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonAdditionalUserInfo);
  dart.addTypeCaches(messages$46pigeon.PigeonAdditionalUserInfo);
  dart.setMethodSignature(messages$46pigeon.PigeonAdditionalUserInfo, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonAdditionalUserInfo.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonAdditionalUserInfo, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonAdditionalUserInfo, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonAdditionalUserInfo, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonAdditionalUserInfo.__proto__),
    isNewUser: dart.fieldType(core.bool),
    providerId: dart.fieldType(dart.nullable(core.String)),
    username: dart.fieldType(dart.nullable(core.String)),
    profile: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object))))
  }));
  var providerId$3 = dart.privateName(messages$46pigeon, "PigeonAuthCredential.providerId");
  var signInMethod$0 = dart.privateName(messages$46pigeon, "PigeonAuthCredential.signInMethod");
  var nativeId$ = dart.privateName(messages$46pigeon, "PigeonAuthCredential.nativeId");
  var accessToken$0 = dart.privateName(messages$46pigeon, "PigeonAuthCredential.accessToken");
  messages$46pigeon.PigeonAuthCredential = class PigeonAuthCredential extends core.Object {
    get providerId() {
      return this[providerId$3];
    }
    set providerId(value) {
      this[providerId$3] = value;
    }
    get signInMethod() {
      return this[signInMethod$0];
    }
    set signInMethod(value) {
      this[signInMethod$0] = value;
    }
    get nativeId() {
      return this[nativeId$];
    }
    set nativeId(value) {
      this[nativeId$] = value;
    }
    get accessToken() {
      return this[accessToken$0];
    }
    set accessToken(value) {
      this[accessToken$0] = value;
    }
    static ['_#new#tearOff'](opts) {
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      let nativeId = opts && 'nativeId' in opts ? opts.nativeId : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new messages$46pigeon.PigeonAuthCredential.new({providerId: providerId, signInMethod: signInMethod, nativeId: nativeId, accessToken: accessToken});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.providerId, this.signInMethod, this.nativeId, this.accessToken]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonAuthCredential.new({providerId: core.String.as(dart.nullCheck(result[$_get](0))), signInMethod: core.String.as(dart.nullCheck(result[$_get](1))), nativeId: core.int.as(dart.nullCheck(result[$_get](2))), accessToken: T$.StringN().as(result[$_get](3))});
    }
  };
  (messages$46pigeon.PigeonAuthCredential.new = function(opts) {
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
    let nativeId = opts && 'nativeId' in opts ? opts.nativeId : null;
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    this[providerId$3] = providerId;
    this[signInMethod$0] = signInMethod;
    this[nativeId$] = nativeId;
    this[accessToken$0] = accessToken;
    ;
  }).prototype = messages$46pigeon.PigeonAuthCredential.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonAuthCredential);
  dart.addTypeCaches(messages$46pigeon.PigeonAuthCredential);
  dart.setMethodSignature(messages$46pigeon.PigeonAuthCredential, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonAuthCredential.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonAuthCredential, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonAuthCredential, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonAuthCredential, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonAuthCredential.__proto__),
    providerId: dart.fieldType(core.String),
    signInMethod: dart.fieldType(core.String),
    nativeId: dart.fieldType(core.int),
    accessToken: dart.fieldType(dart.nullable(core.String))
  }));
  var uid$0 = dart.privateName(messages$46pigeon, "PigeonUserInfo.uid");
  var email$2 = dart.privateName(messages$46pigeon, "PigeonUserInfo.email");
  var displayName$0 = dart.privateName(messages$46pigeon, "PigeonUserInfo.displayName");
  var photoUrl$ = dart.privateName(messages$46pigeon, "PigeonUserInfo.photoUrl");
  var phoneNumber$1 = dart.privateName(messages$46pigeon, "PigeonUserInfo.phoneNumber");
  var isAnonymous$ = dart.privateName(messages$46pigeon, "PigeonUserInfo.isAnonymous");
  var isEmailVerified$ = dart.privateName(messages$46pigeon, "PigeonUserInfo.isEmailVerified");
  var providerId$4 = dart.privateName(messages$46pigeon, "PigeonUserInfo.providerId");
  var tenantId$1 = dart.privateName(messages$46pigeon, "PigeonUserInfo.tenantId");
  var refreshToken$ = dart.privateName(messages$46pigeon, "PigeonUserInfo.refreshToken");
  var creationTimestamp$ = dart.privateName(messages$46pigeon, "PigeonUserInfo.creationTimestamp");
  var lastSignInTimestamp$ = dart.privateName(messages$46pigeon, "PigeonUserInfo.lastSignInTimestamp");
  messages$46pigeon.PigeonUserInfo = class PigeonUserInfo extends core.Object {
    get uid() {
      return this[uid$0];
    }
    set uid(value) {
      this[uid$0] = value;
    }
    get email() {
      return this[email$2];
    }
    set email(value) {
      this[email$2] = value;
    }
    get displayName() {
      return this[displayName$0];
    }
    set displayName(value) {
      this[displayName$0] = value;
    }
    get photoUrl() {
      return this[photoUrl$];
    }
    set photoUrl(value) {
      this[photoUrl$] = value;
    }
    get phoneNumber() {
      return this[phoneNumber$1];
    }
    set phoneNumber(value) {
      this[phoneNumber$1] = value;
    }
    get isAnonymous() {
      return this[isAnonymous$];
    }
    set isAnonymous(value) {
      this[isAnonymous$] = value;
    }
    get isEmailVerified() {
      return this[isEmailVerified$];
    }
    set isEmailVerified(value) {
      this[isEmailVerified$] = value;
    }
    get providerId() {
      return this[providerId$4];
    }
    set providerId(value) {
      this[providerId$4] = value;
    }
    get tenantId() {
      return this[tenantId$1];
    }
    set tenantId(value) {
      this[tenantId$1] = value;
    }
    get refreshToken() {
      return this[refreshToken$];
    }
    set refreshToken(value) {
      this[refreshToken$] = value;
    }
    get creationTimestamp() {
      return this[creationTimestamp$];
    }
    set creationTimestamp(value) {
      this[creationTimestamp$] = value;
    }
    get lastSignInTimestamp() {
      return this[lastSignInTimestamp$];
    }
    set lastSignInTimestamp(value) {
      this[lastSignInTimestamp$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let uid = opts && 'uid' in opts ? opts.uid : null;
      let email = opts && 'email' in opts ? opts.email : null;
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let photoUrl = opts && 'photoUrl' in opts ? opts.photoUrl : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let isAnonymous = opts && 'isAnonymous' in opts ? opts.isAnonymous : null;
      let isEmailVerified = opts && 'isEmailVerified' in opts ? opts.isEmailVerified : null;
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      let refreshToken = opts && 'refreshToken' in opts ? opts.refreshToken : null;
      let creationTimestamp = opts && 'creationTimestamp' in opts ? opts.creationTimestamp : null;
      let lastSignInTimestamp = opts && 'lastSignInTimestamp' in opts ? opts.lastSignInTimestamp : null;
      return new messages$46pigeon.PigeonUserInfo.new({uid: uid, email: email, displayName: displayName, photoUrl: photoUrl, phoneNumber: phoneNumber, isAnonymous: isAnonymous, isEmailVerified: isEmailVerified, providerId: providerId, tenantId: tenantId, refreshToken: refreshToken, creationTimestamp: creationTimestamp, lastSignInTimestamp: lastSignInTimestamp});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.uid, this.email, this.displayName, this.photoUrl, this.phoneNumber, this.isAnonymous, this.isEmailVerified, this.providerId, this.tenantId, this.refreshToken, this.creationTimestamp, this.lastSignInTimestamp]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonUserInfo.new({uid: core.String.as(dart.nullCheck(result[$_get](0))), email: T$.StringN().as(result[$_get](1)), displayName: T$.StringN().as(result[$_get](2)), photoUrl: T$.StringN().as(result[$_get](3)), phoneNumber: T$.StringN().as(result[$_get](4)), isAnonymous: core.bool.as(dart.nullCheck(result[$_get](5))), isEmailVerified: core.bool.as(dart.nullCheck(result[$_get](6))), providerId: T$.StringN().as(result[$_get](7)), tenantId: T$.StringN().as(result[$_get](8)), refreshToken: T$.StringN().as(result[$_get](9)), creationTimestamp: T$.intN().as(result[$_get](10)), lastSignInTimestamp: T$.intN().as(result[$_get](11))});
    }
  };
  (messages$46pigeon.PigeonUserInfo.new = function(opts) {
    let uid = opts && 'uid' in opts ? opts.uid : null;
    let email = opts && 'email' in opts ? opts.email : null;
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let photoUrl = opts && 'photoUrl' in opts ? opts.photoUrl : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let isAnonymous = opts && 'isAnonymous' in opts ? opts.isAnonymous : null;
    let isEmailVerified = opts && 'isEmailVerified' in opts ? opts.isEmailVerified : null;
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    let refreshToken = opts && 'refreshToken' in opts ? opts.refreshToken : null;
    let creationTimestamp = opts && 'creationTimestamp' in opts ? opts.creationTimestamp : null;
    let lastSignInTimestamp = opts && 'lastSignInTimestamp' in opts ? opts.lastSignInTimestamp : null;
    this[uid$0] = uid;
    this[email$2] = email;
    this[displayName$0] = displayName;
    this[photoUrl$] = photoUrl;
    this[phoneNumber$1] = phoneNumber;
    this[isAnonymous$] = isAnonymous;
    this[isEmailVerified$] = isEmailVerified;
    this[providerId$4] = providerId;
    this[tenantId$1] = tenantId;
    this[refreshToken$] = refreshToken;
    this[creationTimestamp$] = creationTimestamp;
    this[lastSignInTimestamp$] = lastSignInTimestamp;
    ;
  }).prototype = messages$46pigeon.PigeonUserInfo.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonUserInfo);
  dart.addTypeCaches(messages$46pigeon.PigeonUserInfo);
  dart.setMethodSignature(messages$46pigeon.PigeonUserInfo, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonUserInfo.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonUserInfo, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonUserInfo, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonUserInfo, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonUserInfo.__proto__),
    uid: dart.fieldType(core.String),
    email: dart.fieldType(dart.nullable(core.String)),
    displayName: dart.fieldType(dart.nullable(core.String)),
    photoUrl: dart.fieldType(dart.nullable(core.String)),
    phoneNumber: dart.fieldType(dart.nullable(core.String)),
    isAnonymous: dart.fieldType(core.bool),
    isEmailVerified: dart.fieldType(core.bool),
    providerId: dart.fieldType(dart.nullable(core.String)),
    tenantId: dart.fieldType(dart.nullable(core.String)),
    refreshToken: dart.fieldType(dart.nullable(core.String)),
    creationTimestamp: dart.fieldType(dart.nullable(core.int)),
    lastSignInTimestamp: dart.fieldType(dart.nullable(core.int))
  }));
  var userInfo$ = dart.privateName(messages$46pigeon, "PigeonUserDetails.userInfo");
  var providerData$ = dart.privateName(messages$46pigeon, "PigeonUserDetails.providerData");
  messages$46pigeon.PigeonUserDetails = class PigeonUserDetails extends core.Object {
    get userInfo() {
      return this[userInfo$];
    }
    set userInfo(value) {
      this[userInfo$] = value;
    }
    get providerData() {
      return this[providerData$];
    }
    set providerData(value) {
      this[providerData$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let userInfo = opts && 'userInfo' in opts ? opts.userInfo : null;
      let providerData = opts && 'providerData' in opts ? opts.providerData : null;
      return new messages$46pigeon.PigeonUserDetails.new({userInfo: userInfo, providerData: providerData});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.userInfo.encode(), this.providerData]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonUserDetails.new({userInfo: messages$46pigeon.PigeonUserInfo.decode(T$.ListOfObjectN().as(dart.nullCheck(result[$_get](0)))), providerData: dart.nullCheck(T$.ListNOfObjectN().as(result[$_get](1)))[$cast](T$.MapNOfObjectN$ObjectN())});
    }
  };
  (messages$46pigeon.PigeonUserDetails.new = function(opts) {
    let userInfo = opts && 'userInfo' in opts ? opts.userInfo : null;
    let providerData = opts && 'providerData' in opts ? opts.providerData : null;
    this[userInfo$] = userInfo;
    this[providerData$] = providerData;
    ;
  }).prototype = messages$46pigeon.PigeonUserDetails.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonUserDetails);
  dart.addTypeCaches(messages$46pigeon.PigeonUserDetails);
  dart.setMethodSignature(messages$46pigeon.PigeonUserDetails, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonUserDetails.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonUserDetails, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonUserDetails, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonUserDetails, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonUserDetails.__proto__),
    userInfo: dart.fieldType(messages$46pigeon.PigeonUserInfo),
    providerData: dart.fieldType(core.List$(dart.nullable(core.Map$(dart.nullable(core.Object), dart.nullable(core.Object)))))
  }));
  var url$0 = dart.privateName(messages$46pigeon, "PigeonActionCodeSettings.url");
  var dynamicLinkDomain$0 = dart.privateName(messages$46pigeon, "PigeonActionCodeSettings.dynamicLinkDomain");
  var handleCodeInApp$0 = dart.privateName(messages$46pigeon, "PigeonActionCodeSettings.handleCodeInApp");
  var iOSBundleId$0 = dart.privateName(messages$46pigeon, "PigeonActionCodeSettings.iOSBundleId");
  var androidPackageName$0 = dart.privateName(messages$46pigeon, "PigeonActionCodeSettings.androidPackageName");
  var androidInstallApp$0 = dart.privateName(messages$46pigeon, "PigeonActionCodeSettings.androidInstallApp");
  var androidMinimumVersion$0 = dart.privateName(messages$46pigeon, "PigeonActionCodeSettings.androidMinimumVersion");
  messages$46pigeon.PigeonActionCodeSettings = class PigeonActionCodeSettings extends core.Object {
    get url() {
      return this[url$0];
    }
    set url(value) {
      this[url$0] = value;
    }
    get dynamicLinkDomain() {
      return this[dynamicLinkDomain$0];
    }
    set dynamicLinkDomain(value) {
      this[dynamicLinkDomain$0] = value;
    }
    get handleCodeInApp() {
      return this[handleCodeInApp$0];
    }
    set handleCodeInApp(value) {
      this[handleCodeInApp$0] = value;
    }
    get iOSBundleId() {
      return this[iOSBundleId$0];
    }
    set iOSBundleId(value) {
      this[iOSBundleId$0] = value;
    }
    get androidPackageName() {
      return this[androidPackageName$0];
    }
    set androidPackageName(value) {
      this[androidPackageName$0] = value;
    }
    get androidInstallApp() {
      return this[androidInstallApp$0];
    }
    set androidInstallApp(value) {
      this[androidInstallApp$0] = value;
    }
    get androidMinimumVersion() {
      return this[androidMinimumVersion$0];
    }
    set androidMinimumVersion(value) {
      this[androidMinimumVersion$0] = value;
    }
    static ['_#new#tearOff'](opts) {
      let url = opts && 'url' in opts ? opts.url : null;
      let dynamicLinkDomain = opts && 'dynamicLinkDomain' in opts ? opts.dynamicLinkDomain : null;
      let handleCodeInApp = opts && 'handleCodeInApp' in opts ? opts.handleCodeInApp : null;
      let iOSBundleId = opts && 'iOSBundleId' in opts ? opts.iOSBundleId : null;
      let androidPackageName = opts && 'androidPackageName' in opts ? opts.androidPackageName : null;
      let androidInstallApp = opts && 'androidInstallApp' in opts ? opts.androidInstallApp : null;
      let androidMinimumVersion = opts && 'androidMinimumVersion' in opts ? opts.androidMinimumVersion : null;
      return new messages$46pigeon.PigeonActionCodeSettings.new({url: url, dynamicLinkDomain: dynamicLinkDomain, handleCodeInApp: handleCodeInApp, iOSBundleId: iOSBundleId, androidPackageName: androidPackageName, androidInstallApp: androidInstallApp, androidMinimumVersion: androidMinimumVersion});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.url, this.dynamicLinkDomain, this.handleCodeInApp, this.iOSBundleId, this.androidPackageName, this.androidInstallApp, this.androidMinimumVersion]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonActionCodeSettings.new({url: core.String.as(dart.nullCheck(result[$_get](0))), dynamicLinkDomain: T$.StringN().as(result[$_get](1)), handleCodeInApp: core.bool.as(dart.nullCheck(result[$_get](2))), iOSBundleId: T$.StringN().as(result[$_get](3)), androidPackageName: T$.StringN().as(result[$_get](4)), androidInstallApp: core.bool.as(dart.nullCheck(result[$_get](5))), androidMinimumVersion: T$.StringN().as(result[$_get](6))});
    }
  };
  (messages$46pigeon.PigeonActionCodeSettings.new = function(opts) {
    let url = opts && 'url' in opts ? opts.url : null;
    let dynamicLinkDomain = opts && 'dynamicLinkDomain' in opts ? opts.dynamicLinkDomain : null;
    let handleCodeInApp = opts && 'handleCodeInApp' in opts ? opts.handleCodeInApp : null;
    let iOSBundleId = opts && 'iOSBundleId' in opts ? opts.iOSBundleId : null;
    let androidPackageName = opts && 'androidPackageName' in opts ? opts.androidPackageName : null;
    let androidInstallApp = opts && 'androidInstallApp' in opts ? opts.androidInstallApp : null;
    let androidMinimumVersion = opts && 'androidMinimumVersion' in opts ? opts.androidMinimumVersion : null;
    this[url$0] = url;
    this[dynamicLinkDomain$0] = dynamicLinkDomain;
    this[handleCodeInApp$0] = handleCodeInApp;
    this[iOSBundleId$0] = iOSBundleId;
    this[androidPackageName$0] = androidPackageName;
    this[androidInstallApp$0] = androidInstallApp;
    this[androidMinimumVersion$0] = androidMinimumVersion;
    ;
  }).prototype = messages$46pigeon.PigeonActionCodeSettings.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonActionCodeSettings);
  dart.addTypeCaches(messages$46pigeon.PigeonActionCodeSettings);
  dart.setMethodSignature(messages$46pigeon.PigeonActionCodeSettings, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonActionCodeSettings.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonActionCodeSettings, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonActionCodeSettings, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonActionCodeSettings, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonActionCodeSettings.__proto__),
    url: dart.fieldType(core.String),
    dynamicLinkDomain: dart.fieldType(dart.nullable(core.String)),
    handleCodeInApp: dart.fieldType(core.bool),
    iOSBundleId: dart.fieldType(dart.nullable(core.String)),
    androidPackageName: dart.fieldType(dart.nullable(core.String)),
    androidInstallApp: dart.fieldType(core.bool),
    androidMinimumVersion: dart.fieldType(dart.nullable(core.String))
  }));
  var appVerificationDisabledForTesting$ = dart.privateName(messages$46pigeon, "PigeonFirebaseAuthSettings.appVerificationDisabledForTesting");
  var userAccessGroup$ = dart.privateName(messages$46pigeon, "PigeonFirebaseAuthSettings.userAccessGroup");
  var phoneNumber$2 = dart.privateName(messages$46pigeon, "PigeonFirebaseAuthSettings.phoneNumber");
  var smsCode$ = dart.privateName(messages$46pigeon, "PigeonFirebaseAuthSettings.smsCode");
  var forceRecaptchaFlow$ = dart.privateName(messages$46pigeon, "PigeonFirebaseAuthSettings.forceRecaptchaFlow");
  messages$46pigeon.PigeonFirebaseAuthSettings = class PigeonFirebaseAuthSettings extends core.Object {
    get appVerificationDisabledForTesting() {
      return this[appVerificationDisabledForTesting$];
    }
    set appVerificationDisabledForTesting(value) {
      this[appVerificationDisabledForTesting$] = value;
    }
    get userAccessGroup() {
      return this[userAccessGroup$];
    }
    set userAccessGroup(value) {
      this[userAccessGroup$] = value;
    }
    get phoneNumber() {
      return this[phoneNumber$2];
    }
    set phoneNumber(value) {
      this[phoneNumber$2] = value;
    }
    get smsCode() {
      return this[smsCode$];
    }
    set smsCode(value) {
      this[smsCode$] = value;
    }
    get forceRecaptchaFlow() {
      return this[forceRecaptchaFlow$];
    }
    set forceRecaptchaFlow(value) {
      this[forceRecaptchaFlow$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : null;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      return new messages$46pigeon.PigeonFirebaseAuthSettings.new({appVerificationDisabledForTesting: appVerificationDisabledForTesting, userAccessGroup: userAccessGroup, phoneNumber: phoneNumber, smsCode: smsCode, forceRecaptchaFlow: forceRecaptchaFlow});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.appVerificationDisabledForTesting, this.userAccessGroup, this.phoneNumber, this.smsCode, this.forceRecaptchaFlow]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonFirebaseAuthSettings.new({appVerificationDisabledForTesting: core.bool.as(dart.nullCheck(result[$_get](0))), userAccessGroup: T$.StringN().as(result[$_get](1)), phoneNumber: T$.StringN().as(result[$_get](2)), smsCode: T$.StringN().as(result[$_get](3)), forceRecaptchaFlow: T$.boolN().as(result[$_get](4))});
    }
  };
  (messages$46pigeon.PigeonFirebaseAuthSettings.new = function(opts) {
    let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : null;
    let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
    let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
    this[appVerificationDisabledForTesting$] = appVerificationDisabledForTesting;
    this[userAccessGroup$] = userAccessGroup;
    this[phoneNumber$2] = phoneNumber;
    this[smsCode$] = smsCode;
    this[forceRecaptchaFlow$] = forceRecaptchaFlow;
    ;
  }).prototype = messages$46pigeon.PigeonFirebaseAuthSettings.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonFirebaseAuthSettings);
  dart.addTypeCaches(messages$46pigeon.PigeonFirebaseAuthSettings);
  dart.setMethodSignature(messages$46pigeon.PigeonFirebaseAuthSettings, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonFirebaseAuthSettings.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonFirebaseAuthSettings, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonFirebaseAuthSettings, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonFirebaseAuthSettings, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonFirebaseAuthSettings.__proto__),
    appVerificationDisabledForTesting: dart.fieldType(core.bool),
    userAccessGroup: dart.fieldType(dart.nullable(core.String)),
    phoneNumber: dart.fieldType(dart.nullable(core.String)),
    smsCode: dart.fieldType(dart.nullable(core.String)),
    forceRecaptchaFlow: dart.fieldType(dart.nullable(core.bool))
  }));
  var providerId$5 = dart.privateName(messages$46pigeon, "PigeonSignInProvider.providerId");
  var scopes$ = dart.privateName(messages$46pigeon, "PigeonSignInProvider.scopes");
  var customParameters$ = dart.privateName(messages$46pigeon, "PigeonSignInProvider.customParameters");
  messages$46pigeon.PigeonSignInProvider = class PigeonSignInProvider extends core.Object {
    get providerId() {
      return this[providerId$5];
    }
    set providerId(value) {
      this[providerId$5] = value;
    }
    get scopes() {
      return this[scopes$];
    }
    set scopes(value) {
      this[scopes$] = value;
    }
    get customParameters() {
      return this[customParameters$];
    }
    set customParameters(value) {
      this[customParameters$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let scopes = opts && 'scopes' in opts ? opts.scopes : null;
      let customParameters = opts && 'customParameters' in opts ? opts.customParameters : null;
      return new messages$46pigeon.PigeonSignInProvider.new({providerId: providerId, scopes: scopes, customParameters: customParameters});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.providerId, this.scopes, this.customParameters]);
    }
    static decode(result) {
      let t70, t70$;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonSignInProvider.new({providerId: core.String.as(dart.nullCheck(result[$_get](0))), scopes: (t70 = T$.ListNOfObjectN().as(result[$_get](1)), t70 == null ? null : t70[$cast](T$.StringN())), customParameters: (t70$ = T$.MapNOfObjectN$ObjectN().as(result[$_get](2)), t70$ == null ? null : t70$[$cast](T$.StringN(), T$.StringN()))});
    }
  };
  (messages$46pigeon.PigeonSignInProvider.new = function(opts) {
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let scopes = opts && 'scopes' in opts ? opts.scopes : null;
    let customParameters = opts && 'customParameters' in opts ? opts.customParameters : null;
    this[providerId$5] = providerId;
    this[scopes$] = scopes;
    this[customParameters$] = customParameters;
    ;
  }).prototype = messages$46pigeon.PigeonSignInProvider.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonSignInProvider);
  dart.addTypeCaches(messages$46pigeon.PigeonSignInProvider);
  dart.setMethodSignature(messages$46pigeon.PigeonSignInProvider, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonSignInProvider.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonSignInProvider, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonSignInProvider, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonSignInProvider, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonSignInProvider.__proto__),
    providerId: dart.fieldType(core.String),
    scopes: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.String)))),
    customParameters: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.String))))
  }));
  var phoneNumber$3 = dart.privateName(messages$46pigeon, "PigeonVerifyPhoneNumberRequest.phoneNumber");
  var timeout$ = dart.privateName(messages$46pigeon, "PigeonVerifyPhoneNumberRequest.timeout");
  var forceResendingToken$ = dart.privateName(messages$46pigeon, "PigeonVerifyPhoneNumberRequest.forceResendingToken");
  var autoRetrievedSmsCodeForTesting$ = dart.privateName(messages$46pigeon, "PigeonVerifyPhoneNumberRequest.autoRetrievedSmsCodeForTesting");
  var multiFactorInfoId$ = dart.privateName(messages$46pigeon, "PigeonVerifyPhoneNumberRequest.multiFactorInfoId");
  var multiFactorSessionId$ = dart.privateName(messages$46pigeon, "PigeonVerifyPhoneNumberRequest.multiFactorSessionId");
  messages$46pigeon.PigeonVerifyPhoneNumberRequest = class PigeonVerifyPhoneNumberRequest extends core.Object {
    get phoneNumber() {
      return this[phoneNumber$3];
    }
    set phoneNumber(value) {
      this[phoneNumber$3] = value;
    }
    get timeout() {
      return this[timeout$];
    }
    set timeout(value) {
      this[timeout$] = value;
    }
    get forceResendingToken() {
      return this[forceResendingToken$];
    }
    set forceResendingToken(value) {
      this[forceResendingToken$] = value;
    }
    get autoRetrievedSmsCodeForTesting() {
      return this[autoRetrievedSmsCodeForTesting$];
    }
    set autoRetrievedSmsCodeForTesting(value) {
      this[autoRetrievedSmsCodeForTesting$] = value;
    }
    get multiFactorInfoId() {
      return this[multiFactorInfoId$];
    }
    set multiFactorInfoId(value) {
      this[multiFactorInfoId$] = value;
    }
    get multiFactorSessionId() {
      return this[multiFactorSessionId$];
    }
    set multiFactorSessionId(value) {
      this[multiFactorSessionId$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : null;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      let multiFactorInfoId = opts && 'multiFactorInfoId' in opts ? opts.multiFactorInfoId : null;
      let multiFactorSessionId = opts && 'multiFactorSessionId' in opts ? opts.multiFactorSessionId : null;
      return new messages$46pigeon.PigeonVerifyPhoneNumberRequest.new({phoneNumber: phoneNumber, timeout: timeout, forceResendingToken: forceResendingToken, autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting, multiFactorInfoId: multiFactorInfoId, multiFactorSessionId: multiFactorSessionId});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.phoneNumber, this.timeout, this.forceResendingToken, this.autoRetrievedSmsCodeForTesting, this.multiFactorInfoId, this.multiFactorSessionId]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonVerifyPhoneNumberRequest.new({phoneNumber: T$.StringN().as(result[$_get](0)), timeout: core.int.as(dart.nullCheck(result[$_get](1))), forceResendingToken: T$.intN().as(result[$_get](2)), autoRetrievedSmsCodeForTesting: T$.StringN().as(result[$_get](3)), multiFactorInfoId: T$.StringN().as(result[$_get](4)), multiFactorSessionId: T$.StringN().as(result[$_get](5))});
    }
  };
  (messages$46pigeon.PigeonVerifyPhoneNumberRequest.new = function(opts) {
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let timeout = opts && 'timeout' in opts ? opts.timeout : null;
    let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
    let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
    let multiFactorInfoId = opts && 'multiFactorInfoId' in opts ? opts.multiFactorInfoId : null;
    let multiFactorSessionId = opts && 'multiFactorSessionId' in opts ? opts.multiFactorSessionId : null;
    this[phoneNumber$3] = phoneNumber;
    this[timeout$] = timeout;
    this[forceResendingToken$] = forceResendingToken;
    this[autoRetrievedSmsCodeForTesting$] = autoRetrievedSmsCodeForTesting;
    this[multiFactorInfoId$] = multiFactorInfoId;
    this[multiFactorSessionId$] = multiFactorSessionId;
    ;
  }).prototype = messages$46pigeon.PigeonVerifyPhoneNumberRequest.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonVerifyPhoneNumberRequest);
  dart.addTypeCaches(messages$46pigeon.PigeonVerifyPhoneNumberRequest);
  dart.setMethodSignature(messages$46pigeon.PigeonVerifyPhoneNumberRequest, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonVerifyPhoneNumberRequest.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonVerifyPhoneNumberRequest, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonVerifyPhoneNumberRequest, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonVerifyPhoneNumberRequest, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonVerifyPhoneNumberRequest.__proto__),
    phoneNumber: dart.fieldType(dart.nullable(core.String)),
    timeout: dart.fieldType(core.int),
    forceResendingToken: dart.fieldType(dart.nullable(core.int)),
    autoRetrievedSmsCodeForTesting: dart.fieldType(dart.nullable(core.String)),
    multiFactorInfoId: dart.fieldType(dart.nullable(core.String)),
    multiFactorSessionId: dart.fieldType(dart.nullable(core.String))
  }));
  var token$0 = dart.privateName(messages$46pigeon, "PigeonIdTokenResult.token");
  var expirationTimestamp$ = dart.privateName(messages$46pigeon, "PigeonIdTokenResult.expirationTimestamp");
  var authTimestamp$ = dart.privateName(messages$46pigeon, "PigeonIdTokenResult.authTimestamp");
  var issuedAtTimestamp$ = dart.privateName(messages$46pigeon, "PigeonIdTokenResult.issuedAtTimestamp");
  var signInProvider$ = dart.privateName(messages$46pigeon, "PigeonIdTokenResult.signInProvider");
  var claims$ = dart.privateName(messages$46pigeon, "PigeonIdTokenResult.claims");
  var signInSecondFactor$ = dart.privateName(messages$46pigeon, "PigeonIdTokenResult.signInSecondFactor");
  messages$46pigeon.PigeonIdTokenResult = class PigeonIdTokenResult extends core.Object {
    get token() {
      return this[token$0];
    }
    set token(value) {
      this[token$0] = value;
    }
    get expirationTimestamp() {
      return this[expirationTimestamp$];
    }
    set expirationTimestamp(value) {
      this[expirationTimestamp$] = value;
    }
    get authTimestamp() {
      return this[authTimestamp$];
    }
    set authTimestamp(value) {
      this[authTimestamp$] = value;
    }
    get issuedAtTimestamp() {
      return this[issuedAtTimestamp$];
    }
    set issuedAtTimestamp(value) {
      this[issuedAtTimestamp$] = value;
    }
    get signInProvider() {
      return this[signInProvider$];
    }
    set signInProvider(value) {
      this[signInProvider$] = value;
    }
    get claims() {
      return this[claims$];
    }
    set claims(value) {
      this[claims$] = value;
    }
    get signInSecondFactor() {
      return this[signInSecondFactor$];
    }
    set signInSecondFactor(value) {
      this[signInSecondFactor$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let token = opts && 'token' in opts ? opts.token : null;
      let expirationTimestamp = opts && 'expirationTimestamp' in opts ? opts.expirationTimestamp : null;
      let authTimestamp = opts && 'authTimestamp' in opts ? opts.authTimestamp : null;
      let issuedAtTimestamp = opts && 'issuedAtTimestamp' in opts ? opts.issuedAtTimestamp : null;
      let signInProvider = opts && 'signInProvider' in opts ? opts.signInProvider : null;
      let claims = opts && 'claims' in opts ? opts.claims : null;
      let signInSecondFactor = opts && 'signInSecondFactor' in opts ? opts.signInSecondFactor : null;
      return new messages$46pigeon.PigeonIdTokenResult.new({token: token, expirationTimestamp: expirationTimestamp, authTimestamp: authTimestamp, issuedAtTimestamp: issuedAtTimestamp, signInProvider: signInProvider, claims: claims, signInSecondFactor: signInSecondFactor});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.token, this.expirationTimestamp, this.authTimestamp, this.issuedAtTimestamp, this.signInProvider, this.claims, this.signInSecondFactor]);
    }
    static decode(result) {
      let t70;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonIdTokenResult.new({token: T$.StringN().as(result[$_get](0)), expirationTimestamp: T$.intN().as(result[$_get](1)), authTimestamp: T$.intN().as(result[$_get](2)), issuedAtTimestamp: T$.intN().as(result[$_get](3)), signInProvider: T$.StringN().as(result[$_get](4)), claims: (t70 = T$.MapNOfObjectN$ObjectN().as(result[$_get](5)), t70 == null ? null : t70[$cast](T$.StringN(), T$.ObjectN())), signInSecondFactor: T$.StringN().as(result[$_get](6))});
    }
  };
  (messages$46pigeon.PigeonIdTokenResult.new = function(opts) {
    let token = opts && 'token' in opts ? opts.token : null;
    let expirationTimestamp = opts && 'expirationTimestamp' in opts ? opts.expirationTimestamp : null;
    let authTimestamp = opts && 'authTimestamp' in opts ? opts.authTimestamp : null;
    let issuedAtTimestamp = opts && 'issuedAtTimestamp' in opts ? opts.issuedAtTimestamp : null;
    let signInProvider = opts && 'signInProvider' in opts ? opts.signInProvider : null;
    let claims = opts && 'claims' in opts ? opts.claims : null;
    let signInSecondFactor = opts && 'signInSecondFactor' in opts ? opts.signInSecondFactor : null;
    this[token$0] = token;
    this[expirationTimestamp$] = expirationTimestamp;
    this[authTimestamp$] = authTimestamp;
    this[issuedAtTimestamp$] = issuedAtTimestamp;
    this[signInProvider$] = signInProvider;
    this[claims$] = claims;
    this[signInSecondFactor$] = signInSecondFactor;
    ;
  }).prototype = messages$46pigeon.PigeonIdTokenResult.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonIdTokenResult);
  dart.addTypeCaches(messages$46pigeon.PigeonIdTokenResult);
  dart.setMethodSignature(messages$46pigeon.PigeonIdTokenResult, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonIdTokenResult.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonIdTokenResult, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonIdTokenResult, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonIdTokenResult, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonIdTokenResult.__proto__),
    token: dart.fieldType(dart.nullable(core.String)),
    expirationTimestamp: dart.fieldType(dart.nullable(core.int)),
    authTimestamp: dart.fieldType(dart.nullable(core.int)),
    issuedAtTimestamp: dart.fieldType(dart.nullable(core.int)),
    signInProvider: dart.fieldType(dart.nullable(core.String)),
    claims: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object)))),
    signInSecondFactor: dart.fieldType(dart.nullable(core.String))
  }));
  var displayName$1 = dart.privateName(messages$46pigeon, "PigeonUserProfile.displayName");
  var photoUrl$0 = dart.privateName(messages$46pigeon, "PigeonUserProfile.photoUrl");
  var displayNameChanged$ = dart.privateName(messages$46pigeon, "PigeonUserProfile.displayNameChanged");
  var photoUrlChanged$ = dart.privateName(messages$46pigeon, "PigeonUserProfile.photoUrlChanged");
  messages$46pigeon.PigeonUserProfile = class PigeonUserProfile extends core.Object {
    get displayName() {
      return this[displayName$1];
    }
    set displayName(value) {
      this[displayName$1] = value;
    }
    get photoUrl() {
      return this[photoUrl$0];
    }
    set photoUrl(value) {
      this[photoUrl$0] = value;
    }
    get displayNameChanged() {
      return this[displayNameChanged$];
    }
    set displayNameChanged(value) {
      this[displayNameChanged$] = value;
    }
    get photoUrlChanged() {
      return this[photoUrlChanged$];
    }
    set photoUrlChanged(value) {
      this[photoUrlChanged$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let photoUrl = opts && 'photoUrl' in opts ? opts.photoUrl : null;
      let displayNameChanged = opts && 'displayNameChanged' in opts ? opts.displayNameChanged : null;
      let photoUrlChanged = opts && 'photoUrlChanged' in opts ? opts.photoUrlChanged : null;
      return new messages$46pigeon.PigeonUserProfile.new({displayName: displayName, photoUrl: photoUrl, displayNameChanged: displayNameChanged, photoUrlChanged: photoUrlChanged});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.displayName, this.photoUrl, this.displayNameChanged, this.photoUrlChanged]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonUserProfile.new({displayName: T$.StringN().as(result[$_get](0)), photoUrl: T$.StringN().as(result[$_get](1)), displayNameChanged: core.bool.as(dart.nullCheck(result[$_get](2))), photoUrlChanged: core.bool.as(dart.nullCheck(result[$_get](3)))});
    }
  };
  (messages$46pigeon.PigeonUserProfile.new = function(opts) {
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let photoUrl = opts && 'photoUrl' in opts ? opts.photoUrl : null;
    let displayNameChanged = opts && 'displayNameChanged' in opts ? opts.displayNameChanged : null;
    let photoUrlChanged = opts && 'photoUrlChanged' in opts ? opts.photoUrlChanged : null;
    this[displayName$1] = displayName;
    this[photoUrl$0] = photoUrl;
    this[displayNameChanged$] = displayNameChanged;
    this[photoUrlChanged$] = photoUrlChanged;
    ;
  }).prototype = messages$46pigeon.PigeonUserProfile.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonUserProfile);
  dart.addTypeCaches(messages$46pigeon.PigeonUserProfile);
  dart.setMethodSignature(messages$46pigeon.PigeonUserProfile, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonUserProfile.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonUserProfile, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonUserProfile, I[39]);
  dart.setFieldSignature(messages$46pigeon.PigeonUserProfile, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonUserProfile.__proto__),
    displayName: dart.fieldType(dart.nullable(core.String)),
    photoUrl: dart.fieldType(dart.nullable(core.String)),
    displayNameChanged: dart.fieldType(core.bool),
    photoUrlChanged: dart.fieldType(core.bool)
  }));
  messages$46pigeon._FirebaseAuthHostApiCodec = class _FirebaseAuthHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._FirebaseAuthHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.PigeonActionCodeInfo.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonActionCodeInfoData.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonActionCodeSettings.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonAdditionalUserInfo.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonAuthCredential.is(value)) {
        buffer.putUint8(132);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonFirebaseApp.is(value)) {
        buffer.putUint8(133);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonFirebaseAuthSettings.is(value)) {
        buffer.putUint8(134);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonIdTokenResult.is(value)) {
        buffer.putUint8(135);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(136);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonMultiFactorSession.is(value)) {
        buffer.putUint8(137);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonPhoneMultiFactorAssertion.is(value)) {
        buffer.putUint8(138);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonSignInProvider.is(value)) {
        buffer.putUint8(139);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserCredential.is(value)) {
        buffer.putUint8(140);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserDetails.is(value)) {
        buffer.putUint8(141);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserInfo.is(value)) {
        buffer.putUint8(142);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserProfile.is(value)) {
        buffer.putUint8(143);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonVerifyPhoneNumberRequest.is(value)) {
        buffer.putUint8(144);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.PigeonActionCodeInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon.PigeonActionCodeInfoData.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon.PigeonActionCodeSettings.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon.PigeonAdditionalUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 132:
          {
            return messages$46pigeon.PigeonAuthCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 133:
          {
            return messages$46pigeon.PigeonFirebaseApp.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 134:
          {
            return messages$46pigeon.PigeonFirebaseAuthSettings.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 135:
          {
            return messages$46pigeon.PigeonIdTokenResult.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 136:
          {
            return messages$46pigeon.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 137:
          {
            return messages$46pigeon.PigeonMultiFactorSession.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 138:
          {
            return messages$46pigeon.PigeonPhoneMultiFactorAssertion.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 139:
          {
            return messages$46pigeon.PigeonSignInProvider.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 140:
          {
            return messages$46pigeon.PigeonUserCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 141:
          {
            return messages$46pigeon.PigeonUserDetails.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 142:
          {
            return messages$46pigeon.PigeonUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 143:
          {
            return messages$46pigeon.PigeonUserProfile.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 144:
          {
            return messages$46pigeon.PigeonVerifyPhoneNumberRequest.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon._FirebaseAuthHostApiCodec.new = function() {
    messages$46pigeon._FirebaseAuthHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._FirebaseAuthHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon._FirebaseAuthHostApiCodec);
  dart.addTypeCaches(messages$46pigeon._FirebaseAuthHostApiCodec);
  dart.setLibraryUri(messages$46pigeon._FirebaseAuthHostApiCodec, I[39]);
  var _binaryMessenger = dart.privateName(messages$46pigeon, "_binaryMessenger");
  messages$46pigeon.FirebaseAuthHostApi = class FirebaseAuthHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.FirebaseAuthHostApi.new({binaryMessenger: binaryMessenger});
    }
    registerIdTokenListener(arg_app) {
      return async.async(core.String, (function* registerIdTokenListener() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.registerIdTokenListener", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    registerAuthStateListener(arg_app) {
      return async.async(core.String, (function* registerAuthStateListener() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.registerAuthStateListener", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    useEmulator(arg_app, arg_host, arg_port) {
      return async.async(dart.void, (function* useEmulator() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.useEmulator", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_host, arg_port])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    applyActionCode(arg_app, arg_code) {
      return async.async(dart.void, (function* applyActionCode() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.applyActionCode", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_code])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    checkActionCode(arg_app, arg_code) {
      return async.async(messages$46pigeon.PigeonActionCodeInfo, (function* checkActionCode() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.checkActionCode", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_code])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonActionCodeInfoN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    confirmPasswordReset(arg_app, arg_code, arg_newPassword) {
      return async.async(dart.void, (function* confirmPasswordReset() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.confirmPasswordReset", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_code, arg_newPassword])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    createUserWithEmailAndPassword(arg_app, arg_email, arg_password) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* createUserWithEmailAndPassword() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.createUserWithEmailAndPassword", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_password])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    signInAnonymously(arg_app) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* signInAnonymously() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.signInAnonymously", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    signInWithCredential(arg_app, arg_input) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* signInWithCredential() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.signInWithCredential", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_input])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    signInWithCustomToken(arg_app, arg_token) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* signInWithCustomToken() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.signInWithCustomToken", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_token])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    signInWithEmailAndPassword(arg_app, arg_email, arg_password) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* signInWithEmailAndPassword() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.signInWithEmailAndPassword", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_password])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    signInWithEmailLink(arg_app, arg_email, arg_emailLink) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* signInWithEmailLink() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.signInWithEmailLink", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_emailLink])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    signInWithProvider(arg_app, arg_signInProvider) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* signInWithProvider() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.signInWithProvider", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_signInProvider])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    signOut(arg_app) {
      return async.async(dart.void, (function* signOut() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.signOut", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    fetchSignInMethodsForEmail(arg_app, arg_email) {
      return async.async(T$.ListOfStringN(), (function* fetchSignInMethodsForEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.fetchSignInMethodsForEmail", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.ListNOfObjectN().as(replyList[$_get](0)))[$cast](T$.StringN());
        }
      }).bind(this));
    }
    sendPasswordResetEmail(arg_app, arg_email, arg_actionCodeSettings) {
      return async.async(dart.void, (function* sendPasswordResetEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.sendPasswordResetEmail", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_actionCodeSettings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    sendSignInLinkToEmail(arg_app, arg_email, arg_actionCodeSettings) {
      return async.async(dart.void, (function* sendSignInLinkToEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.sendSignInLinkToEmail", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_actionCodeSettings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    setLanguageCode(arg_app, arg_languageCode) {
      return async.async(core.String, (function* setLanguageCode() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.setLanguageCode", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_languageCode])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    setSettings(arg_app, arg_settings) {
      return async.async(dart.void, (function* setSettings() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.setSettings", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_settings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    verifyPasswordResetCode(arg_app, arg_code) {
      return async.async(core.String, (function* verifyPasswordResetCode() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.verifyPasswordResetCode", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_code])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    verifyPhoneNumber(arg_app, arg_request) {
      return async.async(core.String, (function* verifyPhoneNumber() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthHostApi.verifyPhoneNumber", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_request])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.FirebaseAuthHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[_binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.FirebaseAuthHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.FirebaseAuthHostApi);
  dart.addTypeCaches(messages$46pigeon.FirebaseAuthHostApi);
  dart.setMethodSignature(messages$46pigeon.FirebaseAuthHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.FirebaseAuthHostApi.__proto__),
    registerIdTokenListener: dart.fnType(async.Future$(core.String), [messages$46pigeon.PigeonFirebaseApp]),
    registerAuthStateListener: dart.fnType(async.Future$(core.String), [messages$46pigeon.PigeonFirebaseApp]),
    useEmulator: dart.fnType(async.Future$(dart.void), [messages$46pigeon.PigeonFirebaseApp, core.String, core.int]),
    applyActionCode: dart.fnType(async.Future$(dart.void), [messages$46pigeon.PigeonFirebaseApp, core.String]),
    checkActionCode: dart.fnType(async.Future$(messages$46pigeon.PigeonActionCodeInfo), [messages$46pigeon.PigeonFirebaseApp, core.String]),
    confirmPasswordReset: dart.fnType(async.Future$(dart.void), [messages$46pigeon.PigeonFirebaseApp, core.String, core.String]),
    createUserWithEmailAndPassword: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.PigeonFirebaseApp, core.String, core.String]),
    signInAnonymously: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.PigeonFirebaseApp]),
    signInWithCredential: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.PigeonFirebaseApp, core.Map$(dart.nullable(core.String), dart.nullable(core.Object))]),
    signInWithCustomToken: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.PigeonFirebaseApp, core.String]),
    signInWithEmailAndPassword: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.PigeonFirebaseApp, core.String, core.String]),
    signInWithEmailLink: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.PigeonFirebaseApp, core.String, core.String]),
    signInWithProvider: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.PigeonFirebaseApp, messages$46pigeon.PigeonSignInProvider]),
    signOut: dart.fnType(async.Future$(dart.void), [messages$46pigeon.PigeonFirebaseApp]),
    fetchSignInMethodsForEmail: dart.fnType(async.Future$(core.List$(dart.nullable(core.String))), [messages$46pigeon.PigeonFirebaseApp, core.String]),
    sendPasswordResetEmail: dart.fnType(async.Future$(dart.void), [messages$46pigeon.PigeonFirebaseApp, core.String, dart.nullable(messages$46pigeon.PigeonActionCodeSettings)]),
    sendSignInLinkToEmail: dart.fnType(async.Future$(dart.void), [messages$46pigeon.PigeonFirebaseApp, core.String, messages$46pigeon.PigeonActionCodeSettings]),
    setLanguageCode: dart.fnType(async.Future$(core.String), [messages$46pigeon.PigeonFirebaseApp, dart.nullable(core.String)]),
    setSettings: dart.fnType(async.Future$(dart.void), [messages$46pigeon.PigeonFirebaseApp, messages$46pigeon.PigeonFirebaseAuthSettings]),
    verifyPasswordResetCode: dart.fnType(async.Future$(core.String), [messages$46pigeon.PigeonFirebaseApp, core.String]),
    verifyPhoneNumber: dart.fnType(async.Future$(core.String), [messages$46pigeon.PigeonFirebaseApp, messages$46pigeon.PigeonVerifyPhoneNumberRequest])
  }));
  dart.setLibraryUri(messages$46pigeon.FirebaseAuthHostApi, I[39]);
  dart.setFieldSignature(messages$46pigeon.FirebaseAuthHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.FirebaseAuthHostApi.__proto__),
    [_binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.FirebaseAuthHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.FirebaseAuthHostApi, {
    /*messages$46pigeon.FirebaseAuthHostApi.codec*/get codec() {
      return C[42] || CT.C42;
    }
  }, false);
  messages$46pigeon._FirebaseAuthUserHostApiCodec = class _FirebaseAuthUserHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._FirebaseAuthUserHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.PigeonActionCodeInfo.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonActionCodeInfoData.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonActionCodeSettings.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonAdditionalUserInfo.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonAuthCredential.is(value)) {
        buffer.putUint8(132);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonFirebaseApp.is(value)) {
        buffer.putUint8(133);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonFirebaseAuthSettings.is(value)) {
        buffer.putUint8(134);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonIdTokenResult.is(value)) {
        buffer.putUint8(135);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(136);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonMultiFactorSession.is(value)) {
        buffer.putUint8(137);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonPhoneMultiFactorAssertion.is(value)) {
        buffer.putUint8(138);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonSignInProvider.is(value)) {
        buffer.putUint8(139);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserCredential.is(value)) {
        buffer.putUint8(140);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserDetails.is(value)) {
        buffer.putUint8(141);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserInfo.is(value)) {
        buffer.putUint8(142);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserProfile.is(value)) {
        buffer.putUint8(143);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonVerifyPhoneNumberRequest.is(value)) {
        buffer.putUint8(144);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.PigeonActionCodeInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon.PigeonActionCodeInfoData.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon.PigeonActionCodeSettings.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon.PigeonAdditionalUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 132:
          {
            return messages$46pigeon.PigeonAuthCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 133:
          {
            return messages$46pigeon.PigeonFirebaseApp.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 134:
          {
            return messages$46pigeon.PigeonFirebaseAuthSettings.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 135:
          {
            return messages$46pigeon.PigeonIdTokenResult.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 136:
          {
            return messages$46pigeon.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 137:
          {
            return messages$46pigeon.PigeonMultiFactorSession.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 138:
          {
            return messages$46pigeon.PigeonPhoneMultiFactorAssertion.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 139:
          {
            return messages$46pigeon.PigeonSignInProvider.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 140:
          {
            return messages$46pigeon.PigeonUserCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 141:
          {
            return messages$46pigeon.PigeonUserDetails.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 142:
          {
            return messages$46pigeon.PigeonUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 143:
          {
            return messages$46pigeon.PigeonUserProfile.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 144:
          {
            return messages$46pigeon.PigeonVerifyPhoneNumberRequest.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon._FirebaseAuthUserHostApiCodec.new = function() {
    messages$46pigeon._FirebaseAuthUserHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._FirebaseAuthUserHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon._FirebaseAuthUserHostApiCodec);
  dart.addTypeCaches(messages$46pigeon._FirebaseAuthUserHostApiCodec);
  dart.setLibraryUri(messages$46pigeon._FirebaseAuthUserHostApiCodec, I[39]);
  messages$46pigeon.FirebaseAuthUserHostApi = class FirebaseAuthUserHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.FirebaseAuthUserHostApi.new({binaryMessenger: binaryMessenger});
    }
    delete(arg_app) {
      return async.async(dart.void, (function* $delete() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthUserHostApi.delete", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    getIdToken(arg_app, arg_forceRefresh) {
      return async.async(messages$46pigeon.PigeonIdTokenResult, (function* getIdToken() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthUserHostApi.getIdToken", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_forceRefresh])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonIdTokenResultN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    linkWithCredential(arg_app, arg_input) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* linkWithCredential() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthUserHostApi.linkWithCredential", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_input])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    linkWithProvider(arg_app, arg_signInProvider) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* linkWithProvider() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthUserHostApi.linkWithProvider", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_signInProvider])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    reauthenticateWithCredential(arg_app, arg_input) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* reauthenticateWithCredential() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthUserHostApi.reauthenticateWithCredential", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_input])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    reauthenticateWithProvider(arg_app, arg_signInProvider) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* reauthenticateWithProvider() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthUserHostApi.reauthenticateWithProvider", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_signInProvider])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    reload(arg_app) {
      return async.async(messages$46pigeon.PigeonUserDetails, (function* reload() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthUserHostApi.reload", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    sendEmailVerification(arg_app, arg_actionCodeSettings) {
      return async.async(dart.void, (function* sendEmailVerification() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthUserHostApi.sendEmailVerification", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_actionCodeSettings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    unlink(arg_app, arg_providerId) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* unlink() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthUserHostApi.unlink", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_providerId])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    updateEmail(arg_app, arg_newEmail) {
      return async.async(messages$46pigeon.PigeonUserDetails, (function* updateEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthUserHostApi.updateEmail", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_newEmail])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    updatePassword(arg_app, arg_newPassword) {
      return async.async(messages$46pigeon.PigeonUserDetails, (function* updatePassword() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthUserHostApi.updatePassword", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_newPassword])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    updatePhoneNumber(arg_app, arg_input) {
      return async.async(messages$46pigeon.PigeonUserDetails, (function* updatePhoneNumber() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthUserHostApi.updatePhoneNumber", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_input])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    updateProfile(arg_app, arg_profile) {
      return async.async(messages$46pigeon.PigeonUserDetails, (function* updateProfile() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthUserHostApi.updateProfile", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_profile])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    verifyBeforeUpdateEmail(arg_app, arg_newEmail, arg_actionCodeSettings) {
      return async.async(dart.void, (function* verifyBeforeUpdateEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAuthUserHostApi.verifyBeforeUpdateEmail", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_newEmail, arg_actionCodeSettings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.FirebaseAuthUserHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[_binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.FirebaseAuthUserHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.FirebaseAuthUserHostApi);
  dart.addTypeCaches(messages$46pigeon.FirebaseAuthUserHostApi);
  dart.setMethodSignature(messages$46pigeon.FirebaseAuthUserHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.FirebaseAuthUserHostApi.__proto__),
    delete: dart.fnType(async.Future$(dart.void), [messages$46pigeon.PigeonFirebaseApp]),
    getIdToken: dart.fnType(async.Future$(messages$46pigeon.PigeonIdTokenResult), [messages$46pigeon.PigeonFirebaseApp, core.bool]),
    linkWithCredential: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.PigeonFirebaseApp, core.Map$(dart.nullable(core.String), dart.nullable(core.Object))]),
    linkWithProvider: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.PigeonFirebaseApp, messages$46pigeon.PigeonSignInProvider]),
    reauthenticateWithCredential: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.PigeonFirebaseApp, core.Map$(dart.nullable(core.String), dart.nullable(core.Object))]),
    reauthenticateWithProvider: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.PigeonFirebaseApp, messages$46pigeon.PigeonSignInProvider]),
    reload: dart.fnType(async.Future$(messages$46pigeon.PigeonUserDetails), [messages$46pigeon.PigeonFirebaseApp]),
    sendEmailVerification: dart.fnType(async.Future$(dart.void), [messages$46pigeon.PigeonFirebaseApp, dart.nullable(messages$46pigeon.PigeonActionCodeSettings)]),
    unlink: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.PigeonFirebaseApp, core.String]),
    updateEmail: dart.fnType(async.Future$(messages$46pigeon.PigeonUserDetails), [messages$46pigeon.PigeonFirebaseApp, core.String]),
    updatePassword: dart.fnType(async.Future$(messages$46pigeon.PigeonUserDetails), [messages$46pigeon.PigeonFirebaseApp, core.String]),
    updatePhoneNumber: dart.fnType(async.Future$(messages$46pigeon.PigeonUserDetails), [messages$46pigeon.PigeonFirebaseApp, core.Map$(dart.nullable(core.String), dart.nullable(core.Object))]),
    updateProfile: dart.fnType(async.Future$(messages$46pigeon.PigeonUserDetails), [messages$46pigeon.PigeonFirebaseApp, messages$46pigeon.PigeonUserProfile]),
    verifyBeforeUpdateEmail: dart.fnType(async.Future$(dart.void), [messages$46pigeon.PigeonFirebaseApp, core.String, dart.nullable(messages$46pigeon.PigeonActionCodeSettings)])
  }));
  dart.setLibraryUri(messages$46pigeon.FirebaseAuthUserHostApi, I[39]);
  dart.setFieldSignature(messages$46pigeon.FirebaseAuthUserHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.FirebaseAuthUserHostApi.__proto__),
    [_binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.FirebaseAuthUserHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.FirebaseAuthUserHostApi, {
    /*messages$46pigeon.FirebaseAuthUserHostApi.codec*/get codec() {
      return C[43] || CT.C43;
    }
  }, false);
  messages$46pigeon._MultiFactorUserHostApiCodec = class _MultiFactorUserHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._MultiFactorUserHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.PigeonFirebaseApp.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonMultiFactorSession.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonPhoneMultiFactorAssertion.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.PigeonFirebaseApp.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon.PigeonMultiFactorSession.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon.PigeonPhoneMultiFactorAssertion.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon._MultiFactorUserHostApiCodec.new = function() {
    messages$46pigeon._MultiFactorUserHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._MultiFactorUserHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon._MultiFactorUserHostApiCodec);
  dart.addTypeCaches(messages$46pigeon._MultiFactorUserHostApiCodec);
  dart.setLibraryUri(messages$46pigeon._MultiFactorUserHostApiCodec, I[39]);
  messages$46pigeon.MultiFactorUserHostApi = class MultiFactorUserHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.MultiFactorUserHostApi.new({binaryMessenger: binaryMessenger});
    }
    enrollPhone(arg_app, arg_assertion, arg_displayName) {
      return async.async(dart.void, (function* enrollPhone() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.MultiFactorUserHostApi.enrollPhone", messages$46pigeon.MultiFactorUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_assertion, arg_displayName])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    getSession(arg_app) {
      return async.async(messages$46pigeon.PigeonMultiFactorSession, (function* getSession() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.MultiFactorUserHostApi.getSession", messages$46pigeon.MultiFactorUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonMultiFactorSessionN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    unenroll(arg_app, arg_factorUid) {
      return async.async(dart.void, (function* unenroll() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.MultiFactorUserHostApi.unenroll", messages$46pigeon.MultiFactorUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_factorUid])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    getEnrolledFactors(arg_app) {
      return async.async(T$.ListOfPigeonMultiFactorInfoN(), (function* getEnrolledFactors() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.MultiFactorUserHostApi.getEnrolledFactors", messages$46pigeon.MultiFactorUserHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.ListNOfObjectN().as(replyList[$_get](0)))[$cast](T$.PigeonMultiFactorInfoN());
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.MultiFactorUserHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[_binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.MultiFactorUserHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.MultiFactorUserHostApi);
  dart.addTypeCaches(messages$46pigeon.MultiFactorUserHostApi);
  dart.setMethodSignature(messages$46pigeon.MultiFactorUserHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.MultiFactorUserHostApi.__proto__),
    enrollPhone: dart.fnType(async.Future$(dart.void), [messages$46pigeon.PigeonFirebaseApp, messages$46pigeon.PigeonPhoneMultiFactorAssertion, dart.nullable(core.String)]),
    getSession: dart.fnType(async.Future$(messages$46pigeon.PigeonMultiFactorSession), [messages$46pigeon.PigeonFirebaseApp]),
    unenroll: dart.fnType(async.Future$(dart.void), [messages$46pigeon.PigeonFirebaseApp, core.String]),
    getEnrolledFactors: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon.PigeonMultiFactorInfo))), [messages$46pigeon.PigeonFirebaseApp])
  }));
  dart.setLibraryUri(messages$46pigeon.MultiFactorUserHostApi, I[39]);
  dart.setFieldSignature(messages$46pigeon.MultiFactorUserHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.MultiFactorUserHostApi.__proto__),
    [_binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.MultiFactorUserHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.MultiFactorUserHostApi, {
    /*messages$46pigeon.MultiFactorUserHostApi.codec*/get codec() {
      return C[44] || CT.C44;
    }
  }, false);
  messages$46pigeon._MultiFactoResolverHostApiCodec = class _MultiFactoResolverHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._MultiFactoResolverHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.PigeonAdditionalUserInfo.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonAuthCredential.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonPhoneMultiFactorAssertion.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserCredential.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserDetails.is(value)) {
        buffer.putUint8(132);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserInfo.is(value)) {
        buffer.putUint8(133);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.PigeonAdditionalUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon.PigeonAuthCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon.PigeonPhoneMultiFactorAssertion.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon.PigeonUserCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 132:
          {
            return messages$46pigeon.PigeonUserDetails.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 133:
          {
            return messages$46pigeon.PigeonUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon._MultiFactoResolverHostApiCodec.new = function() {
    messages$46pigeon._MultiFactoResolverHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._MultiFactoResolverHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon._MultiFactoResolverHostApiCodec);
  dart.addTypeCaches(messages$46pigeon._MultiFactoResolverHostApiCodec);
  dart.setLibraryUri(messages$46pigeon._MultiFactoResolverHostApiCodec, I[39]);
  messages$46pigeon.MultiFactoResolverHostApi = class MultiFactoResolverHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.MultiFactoResolverHostApi.new({binaryMessenger: binaryMessenger});
    }
    resolveSignIn(arg_resolverId, arg_assertion) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* resolveSignIn() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.MultiFactoResolverHostApi.resolveSignIn", messages$46pigeon.MultiFactoResolverHostApi.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_resolverId, arg_assertion])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.MultiFactoResolverHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[_binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.MultiFactoResolverHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.MultiFactoResolverHostApi);
  dart.addTypeCaches(messages$46pigeon.MultiFactoResolverHostApi);
  dart.setMethodSignature(messages$46pigeon.MultiFactoResolverHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.MultiFactoResolverHostApi.__proto__),
    resolveSignIn: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [core.String, messages$46pigeon.PigeonPhoneMultiFactorAssertion])
  }));
  dart.setLibraryUri(messages$46pigeon.MultiFactoResolverHostApi, I[39]);
  dart.setFieldSignature(messages$46pigeon.MultiFactoResolverHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.MultiFactoResolverHostApi.__proto__),
    [_binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.MultiFactoResolverHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.MultiFactoResolverHostApi, {
    /*messages$46pigeon.MultiFactoResolverHostApi.codec*/get codec() {
      return C[45] || CT.C45;
    }
  }, false);
  messages$46pigeon._GenerateInterfacesCodec = class _GenerateInterfacesCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._GenerateInterfacesCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon._GenerateInterfacesCodec.new = function() {
    messages$46pigeon._GenerateInterfacesCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._GenerateInterfacesCodec.prototype;
  dart.addTypeTests(messages$46pigeon._GenerateInterfacesCodec);
  dart.addTypeCaches(messages$46pigeon._GenerateInterfacesCodec);
  dart.setLibraryUri(messages$46pigeon._GenerateInterfacesCodec, I[39]);
  messages$46pigeon.GenerateInterfaces = class GenerateInterfaces extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.GenerateInterfaces.new({binaryMessenger: binaryMessenger});
    }
    generateInterfaces(arg_info) {
      return async.async(dart.void, (function* generateInterfaces() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.GenerateInterfaces.generateInterfaces", messages$46pigeon.GenerateInterfaces.codec, {binaryMessenger: this[_binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_info])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.GenerateInterfaces.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[_binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.GenerateInterfaces.prototype;
  dart.addTypeTests(messages$46pigeon.GenerateInterfaces);
  dart.addTypeCaches(messages$46pigeon.GenerateInterfaces);
  dart.setMethodSignature(messages$46pigeon.GenerateInterfaces, () => ({
    __proto__: dart.getMethods(messages$46pigeon.GenerateInterfaces.__proto__),
    generateInterfaces: dart.fnType(async.Future$(dart.void), [messages$46pigeon.PigeonMultiFactorInfo])
  }));
  dart.setLibraryUri(messages$46pigeon.GenerateInterfaces, I[39]);
  dart.setFieldSignature(messages$46pigeon.GenerateInterfaces, () => ({
    __proto__: dart.getFields(messages$46pigeon.GenerateInterfaces.__proto__),
    [_binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.GenerateInterfaces, () => ['codec']);
  dart.defineLazy(messages$46pigeon.GenerateInterfaces, {
    /*messages$46pigeon.GenerateInterfaces.codec*/get codec() {
      return C[46] || CT.C46;
    }
  }, false);
  var displayName$2 = dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.displayName");
  var enrollmentTimestamp$0 = dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.enrollmentTimestamp");
  var factorId$0 = dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.factorId");
  var uid$1 = dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.uid");
  platform_interface_multi_factor.MultiFactorInfo = class MultiFactorInfo extends core.Object {
    get displayName() {
      return this[displayName$2];
    }
    set displayName(value) {
      super.displayName = value;
    }
    get enrollmentTimestamp() {
      return this[enrollmentTimestamp$0];
    }
    set enrollmentTimestamp(value) {
      super.enrollmentTimestamp = value;
    }
    get factorId() {
      return this[factorId$0];
    }
    set factorId(value) {
      super.factorId = value;
    }
    get uid() {
      return this[uid$1];
    }
    set uid(value) {
      super.uid = value;
    }
    static ['_#new#tearOff'](opts) {
      let factorId = opts && 'factorId' in opts ? opts.factorId : null;
      let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      return new platform_interface_multi_factor.MultiFactorInfo.new({factorId: factorId, enrollmentTimestamp: enrollmentTimestamp, displayName: displayName, uid: uid});
    }
    toString() {
      return "MultiFactorInfo{enrollmentTimestamp: " + dart.str(this.enrollmentTimestamp) + ", displayName: " + dart.str(this.displayName) + ", uid: " + this.uid + "}";
    }
  };
  (platform_interface_multi_factor.MultiFactorInfo.new = function(opts) {
    let factorId = opts && 'factorId' in opts ? opts.factorId : null;
    let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    this[factorId$0] = factorId;
    this[enrollmentTimestamp$0] = enrollmentTimestamp;
    this[displayName$2] = displayName;
    this[uid$1] = uid;
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorInfo.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorInfo);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorInfo);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorInfo, I[11]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorInfo, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorInfo.__proto__),
    displayName: dart.finalFieldType(dart.nullable(core.String)),
    enrollmentTimestamp: dart.finalFieldType(core.double),
    factorId: dart.finalFieldType(core.String),
    uid: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(platform_interface_multi_factor.MultiFactorInfo, ['toString']);
  var phoneNumber$4 = dart.privateName(platform_interface_multi_factor, "PhoneMultiFactorInfo.phoneNumber");
  platform_interface_multi_factor.PhoneMultiFactorInfo = class PhoneMultiFactorInfo extends platform_interface_multi_factor.MultiFactorInfo {
    get phoneNumber() {
      return this[phoneNumber$4];
    }
    set phoneNumber(value) {
      super.phoneNumber = value;
    }
    static ['_#new#tearOff'](opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
      let factorId = opts && 'factorId' in opts ? opts.factorId : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      return new platform_interface_multi_factor.PhoneMultiFactorInfo.new({displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid, phoneNumber: phoneNumber});
    }
  };
  (platform_interface_multi_factor.PhoneMultiFactorInfo.new = function(opts) {
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
    let factorId = opts && 'factorId' in opts ? opts.factorId : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    this[phoneNumber$4] = phoneNumber;
    platform_interface_multi_factor.PhoneMultiFactorInfo.__proto__.new.call(this, {displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid});
    ;
  }).prototype = platform_interface_multi_factor.PhoneMultiFactorInfo.prototype;
  dart.addTypeTests(platform_interface_multi_factor.PhoneMultiFactorInfo);
  dart.addTypeCaches(platform_interface_multi_factor.PhoneMultiFactorInfo);
  dart.setLibraryUri(platform_interface_multi_factor.PhoneMultiFactorInfo, I[11]);
  dart.setFieldSignature(platform_interface_multi_factor.PhoneMultiFactorInfo, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.PhoneMultiFactorInfo.__proto__),
    phoneNumber: dart.finalFieldType(core.String)
  }));
  platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize = class RecaptchaVerifierSize extends core._Enum {
    [_enumToString]() {
      return "RecaptchaVerifierSize." + this[_name];
    }
  };
  (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.new = function(index, name) {
    platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.prototype;
  dart.addTypeTests(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize);
  dart.addTypeCaches(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize);
  dart.setMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, () => ({
    __proto__: dart.getMethods(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, I[17]);
  dart.setStaticFieldSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, () => ['values', 'normal', 'compact']);
  dart.defineLazy(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, {
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.values*/get values() {
      return C[47] || CT.C47;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.normal*/get normal() {
      return C[9] || CT.C9;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.compact*/get compact() {
      return C[8] || CT.C8;
    }
  }, false);
  platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme = class RecaptchaVerifierTheme extends core._Enum {
    [_enumToString]() {
      return "RecaptchaVerifierTheme." + this[_name];
    }
  };
  (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.new = function(index, name) {
    platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.prototype;
  dart.addTypeTests(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme);
  dart.addTypeCaches(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme);
  dart.setMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, () => ({
    __proto__: dart.getMethods(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, I[17]);
  dart.setStaticFieldSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, () => ['values', 'light', 'dark']);
  dart.defineLazy(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, {
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.values*/get values() {
      return C[48] || CT.C48;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.light*/get light() {
      return C[11] || CT.C11;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.dark*/get dark() {
      return C[10] || CT.C10;
    }
  }, false);
  var _scopes = dart.privateName(apple_auth, "_scopes");
  var _parameters = dart.privateName(apple_auth, "_parameters");
  apple_auth.AppleAuthProvider = class AppleAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new apple_auth.AppleAuthProvider.new();
    }
    static credential(accessToken) {
      return apple_auth.AppleAuthCredential._credential(accessToken);
    }
    static get APPLE_SIGN_IN_METHOD() {
      return "apple.com";
    }
    static get PROVIDER_ID() {
      return "apple.com";
    }
    get scopes() {
      return this[_scopes];
    }
    get parameters() {
      return this[_parameters];
    }
    addScope(scope) {
      this[_scopes][$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[_parameters] = customOAuthParameters;
      return this;
    }
  };
  (apple_auth.AppleAuthProvider.new = function() {
    this[_scopes] = T$.JSArrayOfString().of([]);
    this[_parameters] = new (T$.IdentityMapOfString$String()).new();
    apple_auth.AppleAuthProvider.__proto__.new.call(this, "apple.com");
    ;
  }).prototype = apple_auth.AppleAuthProvider.prototype;
  dart.addTypeTests(apple_auth.AppleAuthProvider);
  dart.addTypeCaches(apple_auth.AppleAuthProvider);
  dart.setMethodSignature(apple_auth.AppleAuthProvider, () => ({
    __proto__: dart.getMethods(apple_auth.AppleAuthProvider.__proto__),
    addScope: dart.fnType(apple_auth.AppleAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(apple_auth.AppleAuthProvider, [core.Map$(core.String, core.String)])
  }));
  dart.setStaticMethodSignature(apple_auth.AppleAuthProvider, () => ['credential']);
  dart.setGetterSignature(apple_auth.AppleAuthProvider, () => ({
    __proto__: dart.getGetters(apple_auth.AppleAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setStaticGetterSignature(apple_auth.AppleAuthProvider, () => ['APPLE_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(apple_auth.AppleAuthProvider, I[40]);
  dart.setFieldSignature(apple_auth.AppleAuthProvider, () => ({
    __proto__: dart.getFields(apple_auth.AppleAuthProvider.__proto__),
    [_scopes]: dart.fieldType(core.List$(core.String)),
    [_parameters]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  var idToken$ = dart.privateName(oauth, "OAuthCredential.idToken");
  var secret$ = dart.privateName(oauth, "OAuthCredential.secret");
  var rawNonce$ = dart.privateName(oauth, "OAuthCredential.rawNonce");
  oauth.OAuthCredential = class OAuthCredential extends auth_credential.AuthCredential {
    get idToken() {
      return this[idToken$];
    }
    set idToken(value) {
      super.idToken = value;
    }
    get secret() {
      return this[secret$];
    }
    set secret(value) {
      super.secret = value;
    }
    get rawNonce() {
      return this[rawNonce$];
    }
    set rawNonce(value) {
      super.rawNonce = value;
    }
    static ['_#new#tearOff'](opts) {
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      let rawNonce = opts && 'rawNonce' in opts ? opts.rawNonce : null;
      return new oauth.OAuthCredential.new({providerId: providerId, signInMethod: signInMethod, accessToken: accessToken, idToken: idToken, secret: secret, rawNonce: rawNonce});
    }
    asMap() {
      return new (T$.IdentityMapOfString$StringN()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "idToken", this.idToken, "accessToken", this.accessToken, "secret", this.secret, "rawNonce", this.rawNonce]);
    }
  };
  (oauth.OAuthCredential.new = function(opts) {
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    let idToken = opts && 'idToken' in opts ? opts.idToken : null;
    let secret = opts && 'secret' in opts ? opts.secret : null;
    let rawNonce = opts && 'rawNonce' in opts ? opts.rawNonce : null;
    this[idToken$] = idToken;
    this[secret$] = secret;
    this[rawNonce$] = rawNonce;
    oauth.OAuthCredential.__proto__.new.call(this, {providerId: providerId, signInMethod: signInMethod, accessToken: accessToken});
    ;
  }).prototype = oauth.OAuthCredential.prototype;
  dart.addTypeTests(oauth.OAuthCredential);
  dart.addTypeCaches(oauth.OAuthCredential);
  dart.setMethodSignature(oauth.OAuthCredential, () => ({
    __proto__: dart.getMethods(oauth.OAuthCredential.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.nullable(core.String)), [])
  }));
  dart.setLibraryUri(oauth.OAuthCredential, I[41]);
  dart.setFieldSignature(oauth.OAuthCredential, () => ({
    __proto__: dart.getFields(oauth.OAuthCredential.__proto__),
    idToken: dart.finalFieldType(dart.nullable(core.String)),
    secret: dart.finalFieldType(dart.nullable(core.String)),
    rawNonce: dart.finalFieldType(dart.nullable(core.String))
  }));
  apple_auth.AppleAuthCredential = class AppleAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new apple_auth.AppleAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new apple_auth.AppleAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return apple_auth.AppleAuthCredential._credential(accessToken);
    }
  };
  (apple_auth.AppleAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    apple_auth.AppleAuthCredential.__proto__.new.call(this, {providerId: "apple.com", signInMethod: "apple.com", accessToken: accessToken});
    ;
  }).prototype = apple_auth.AppleAuthCredential.prototype;
  dart.addTypeTests(apple_auth.AppleAuthCredential);
  dart.addTypeCaches(apple_auth.AppleAuthCredential);
  dart.setStaticMethodSignature(apple_auth.AppleAuthCredential, () => ['_credential']);
  dart.setLibraryUri(apple_auth.AppleAuthCredential, I[40]);
  dart.defineLazy(apple_auth, {
    /*apple_auth._kProviderId*/get _kProviderId() {
      return "apple.com";
    }
  }, false);
  email_auth.EmailAuthProvider = class EmailAuthProvider extends auth_provider.AuthProvider {
    static get EMAIL_LINK_SIGN_IN_METHOD() {
      return "emailLink";
    }
    static get EMAIL_PASSWORD_SIGN_IN_METHOD() {
      return "password";
    }
    static get PROVIDER_ID() {
      return "password";
    }
    static credential(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let password = opts && 'password' in opts ? opts.password : null;
      return email_auth.EmailAuthCredential._credential(email, password);
    }
    static credentialWithLink(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let emailLink = opts && 'emailLink' in opts ? opts.emailLink : null;
      return email_auth.EmailAuthCredential._credentialWithLink(email, emailLink);
    }
  };
  (email_auth.EmailAuthProvider.new = function() {
    email_auth.EmailAuthProvider.__proto__.new.call(this, "password");
    ;
  }).prototype = email_auth.EmailAuthProvider.prototype;
  dart.addTypeTests(email_auth.EmailAuthProvider);
  dart.addTypeCaches(email_auth.EmailAuthProvider);
  dart.setStaticMethodSignature(email_auth.EmailAuthProvider, () => ['credential', 'credentialWithLink']);
  dart.setStaticGetterSignature(email_auth.EmailAuthProvider, () => ['EMAIL_LINK_SIGN_IN_METHOD', 'EMAIL_PASSWORD_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(email_auth.EmailAuthProvider, I[42]);
  var email$3 = dart.privateName(email_auth, "EmailAuthCredential.email");
  var password$ = dart.privateName(email_auth, "EmailAuthCredential.password");
  var emailLink$ = dart.privateName(email_auth, "EmailAuthCredential.emailLink");
  email_auth.EmailAuthCredential = class EmailAuthCredential extends auth_credential.AuthCredential {
    get email() {
      return this[email$3];
    }
    set email(value) {
      super.email = value;
    }
    get password() {
      return this[password$];
    }
    set password(value) {
      super.password = value;
    }
    get emailLink() {
      return this[emailLink$];
    }
    set emailLink(value) {
      super.emailLink = value;
    }
    static ['_#_#tearOff'](_signInMethod, opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let password = opts && 'password' in opts ? opts.password : null;
      let emailLink = opts && 'emailLink' in opts ? opts.emailLink : null;
      return new email_auth.EmailAuthCredential.__(_signInMethod, {email: email, password: password, emailLink: emailLink});
    }
    static _credential(email, password) {
      return new email_auth.EmailAuthCredential.__("password", {email: email, password: password});
    }
    static ['_#_credential#tearOff'](email, password) {
      return email_auth.EmailAuthCredential._credential(email, password);
    }
    static _credentialWithLink(email, emailLink) {
      return new email_auth.EmailAuthCredential.__("emailLink", {email: email, emailLink: emailLink});
    }
    static ['_#_credentialWithLink#tearOff'](email, emailLink) {
      return email_auth.EmailAuthCredential._credentialWithLink(email, emailLink);
    }
    asMap() {
      return new (T$.IdentityMapOfString$StringN()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "email", this.email, "emailLink", this.emailLink, "secret", this.password]);
    }
  };
  (email_auth.EmailAuthCredential.__ = function(_signInMethod, opts) {
    let email = opts && 'email' in opts ? opts.email : null;
    let password = opts && 'password' in opts ? opts.password : null;
    let emailLink = opts && 'emailLink' in opts ? opts.emailLink : null;
    this[email$3] = email;
    this[password$] = password;
    this[emailLink$] = emailLink;
    email_auth.EmailAuthCredential.__proto__.new.call(this, {providerId: "password", signInMethod: _signInMethod});
    ;
  }).prototype = email_auth.EmailAuthCredential.prototype;
  dart.addTypeTests(email_auth.EmailAuthCredential);
  dart.addTypeCaches(email_auth.EmailAuthCredential);
  dart.setMethodSignature(email_auth.EmailAuthCredential, () => ({
    __proto__: dart.getMethods(email_auth.EmailAuthCredential.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.nullable(core.String)), [])
  }));
  dart.setStaticMethodSignature(email_auth.EmailAuthCredential, () => ['_credential', '_credentialWithLink']);
  dart.setLibraryUri(email_auth.EmailAuthCredential, I[42]);
  dart.setFieldSignature(email_auth.EmailAuthCredential, () => ({
    __proto__: dart.getFields(email_auth.EmailAuthCredential.__proto__),
    email: dart.finalFieldType(core.String),
    password: dart.finalFieldType(dart.nullable(core.String)),
    emailLink: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineLazy(email_auth, {
    /*email_auth._kLinkProviderId*/get _kLinkProviderId() {
      return "emailLink";
    },
    /*email_auth._kProviderId*/get _kProviderId() {
      return "password";
    }
  }, false);
  var _scopes$ = dart.privateName(facebook_auth, "_scopes");
  var _parameters$ = dart.privateName(facebook_auth, "_parameters");
  facebook_auth.FacebookAuthProvider = class FacebookAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new facebook_auth.FacebookAuthProvider.new();
    }
    static credential(accessToken) {
      return facebook_auth.FacebookAuthCredential._credential(accessToken);
    }
    static get FACEBOOK_SIGN_IN_METHOD() {
      return "facebook.com";
    }
    static get PROVIDER_ID() {
      return "facebook.com";
    }
    get scopes() {
      return this[_scopes$];
    }
    get parameters() {
      return this[_parameters$];
    }
    addScope(scope) {
      this[_scopes$][$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[_parameters$] = customOAuthParameters;
      return this;
    }
  };
  (facebook_auth.FacebookAuthProvider.new = function() {
    this[_scopes$] = T$.JSArrayOfString().of([]);
    this[_parameters$] = new _js_helper.LinkedMap.new();
    facebook_auth.FacebookAuthProvider.__proto__.new.call(this, "facebook.com");
    ;
  }).prototype = facebook_auth.FacebookAuthProvider.prototype;
  dart.addTypeTests(facebook_auth.FacebookAuthProvider);
  dart.addTypeCaches(facebook_auth.FacebookAuthProvider);
  dart.setMethodSignature(facebook_auth.FacebookAuthProvider, () => ({
    __proto__: dart.getMethods(facebook_auth.FacebookAuthProvider.__proto__),
    addScope: dart.fnType(facebook_auth.FacebookAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(facebook_auth.FacebookAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(facebook_auth.FacebookAuthProvider, () => ['credential']);
  dart.setGetterSignature(facebook_auth.FacebookAuthProvider, () => ({
    __proto__: dart.getGetters(facebook_auth.FacebookAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(facebook_auth.FacebookAuthProvider, () => ['FACEBOOK_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(facebook_auth.FacebookAuthProvider, I[43]);
  dart.setFieldSignature(facebook_auth.FacebookAuthProvider, () => ({
    __proto__: dart.getFields(facebook_auth.FacebookAuthProvider.__proto__),
    [_scopes$]: dart.fieldType(core.List$(core.String)),
    [_parameters$]: dart.fieldType(core.Map)
  }));
  facebook_auth.FacebookAuthCredential = class FacebookAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new facebook_auth.FacebookAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new facebook_auth.FacebookAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return facebook_auth.FacebookAuthCredential._credential(accessToken);
    }
  };
  (facebook_auth.FacebookAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    facebook_auth.FacebookAuthCredential.__proto__.new.call(this, {providerId: "facebook.com", signInMethod: "facebook.com", accessToken: accessToken});
    ;
  }).prototype = facebook_auth.FacebookAuthCredential.prototype;
  dart.addTypeTests(facebook_auth.FacebookAuthCredential);
  dart.addTypeCaches(facebook_auth.FacebookAuthCredential);
  dart.setStaticMethodSignature(facebook_auth.FacebookAuthCredential, () => ['_credential']);
  dart.setLibraryUri(facebook_auth.FacebookAuthCredential, I[43]);
  dart.defineLazy(facebook_auth, {
    /*facebook_auth._kProviderId*/get _kProviderId() {
      return "facebook.com";
    }
  }, false);
  var _scopes$0 = dart.privateName(github_auth, "_scopes");
  var _parameters$0 = dart.privateName(github_auth, "_parameters");
  github_auth.GithubAuthProvider = class GithubAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new github_auth.GithubAuthProvider.new();
    }
    static credential(accessToken) {
      return github_auth.GithubAuthCredential._credential(accessToken);
    }
    static get GITHUB_SIGN_IN_METHOD() {
      return "github.com";
    }
    static get PROVIDER_ID() {
      return "github.com";
    }
    get scopes() {
      return this[_scopes$0];
    }
    get parameters() {
      return this[_parameters$0];
    }
    addScope(scope) {
      this[_scopes$0][$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[_parameters$0] = customOAuthParameters;
      return this;
    }
  };
  (github_auth.GithubAuthProvider.new = function() {
    this[_scopes$0] = T$.JSArrayOfString().of([]);
    this[_parameters$0] = new (T$.IdentityMapOfString$String()).new();
    github_auth.GithubAuthProvider.__proto__.new.call(this, "github.com");
    ;
  }).prototype = github_auth.GithubAuthProvider.prototype;
  dart.addTypeTests(github_auth.GithubAuthProvider);
  dart.addTypeCaches(github_auth.GithubAuthProvider);
  dart.setMethodSignature(github_auth.GithubAuthProvider, () => ({
    __proto__: dart.getMethods(github_auth.GithubAuthProvider.__proto__),
    addScope: dart.fnType(github_auth.GithubAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(github_auth.GithubAuthProvider, [core.Map$(core.String, core.String)])
  }));
  dart.setStaticMethodSignature(github_auth.GithubAuthProvider, () => ['credential']);
  dart.setGetterSignature(github_auth.GithubAuthProvider, () => ({
    __proto__: dart.getGetters(github_auth.GithubAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setStaticGetterSignature(github_auth.GithubAuthProvider, () => ['GITHUB_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(github_auth.GithubAuthProvider, I[44]);
  dart.setFieldSignature(github_auth.GithubAuthProvider, () => ({
    __proto__: dart.getFields(github_auth.GithubAuthProvider.__proto__),
    [_scopes$0]: dart.fieldType(core.List$(core.String)),
    [_parameters$0]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  github_auth.GithubAuthCredential = class GithubAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new github_auth.GithubAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new github_auth.GithubAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return github_auth.GithubAuthCredential._credential(accessToken);
    }
  };
  (github_auth.GithubAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    github_auth.GithubAuthCredential.__proto__.new.call(this, {providerId: "github.com", signInMethod: "github.com", accessToken: accessToken});
    ;
  }).prototype = github_auth.GithubAuthCredential.prototype;
  dart.addTypeTests(github_auth.GithubAuthCredential);
  dart.addTypeCaches(github_auth.GithubAuthCredential);
  dart.setStaticMethodSignature(github_auth.GithubAuthCredential, () => ['_credential']);
  dart.setLibraryUri(github_auth.GithubAuthCredential, I[44]);
  dart.defineLazy(github_auth, {
    /*github_auth._kProviderId*/get _kProviderId() {
      return "github.com";
    }
  }, false);
  var _scopes$1 = dart.privateName(google_auth, "_scopes");
  var _parameters$1 = dart.privateName(google_auth, "_parameters");
  google_auth.GoogleAuthProvider = class GoogleAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new google_auth.GoogleAuthProvider.new();
    }
    static credential(opts) {
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      if (!(accessToken != null || idToken != null)) dart.assertFailed("At least one of ID token and access token is required", I[45], 43, 12, "accessToken != null || idToken != null");
      return google_auth.GoogleAuthCredential._credential({idToken: idToken, accessToken: accessToken});
    }
    static get GOOGLE_SIGN_IN_METHOD() {
      return "google.com";
    }
    static get PROVIDER_ID() {
      return "google.com";
    }
    get scopes() {
      return this[_scopes$1];
    }
    get parameters() {
      return this[_parameters$1];
    }
    addScope(scope) {
      this[_scopes$1][$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[_parameters$1] = customOAuthParameters;
      return this;
    }
  };
  (google_auth.GoogleAuthProvider.new = function() {
    this[_scopes$1] = T$.JSArrayOfString().of([]);
    this[_parameters$1] = new _js_helper.LinkedMap.new();
    google_auth.GoogleAuthProvider.__proto__.new.call(this, "google.com");
    ;
  }).prototype = google_auth.GoogleAuthProvider.prototype;
  dart.addTypeTests(google_auth.GoogleAuthProvider);
  dart.addTypeCaches(google_auth.GoogleAuthProvider);
  dart.setMethodSignature(google_auth.GoogleAuthProvider, () => ({
    __proto__: dart.getMethods(google_auth.GoogleAuthProvider.__proto__),
    addScope: dart.fnType(google_auth.GoogleAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(google_auth.GoogleAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(google_auth.GoogleAuthProvider, () => ['credential']);
  dart.setGetterSignature(google_auth.GoogleAuthProvider, () => ({
    __proto__: dart.getGetters(google_auth.GoogleAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(google_auth.GoogleAuthProvider, () => ['GOOGLE_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(google_auth.GoogleAuthProvider, I[46]);
  dart.setFieldSignature(google_auth.GoogleAuthProvider, () => ({
    __proto__: dart.getFields(google_auth.GoogleAuthProvider.__proto__),
    [_scopes$1]: dart.fieldType(core.List$(core.String)),
    [_parameters$1]: dart.fieldType(core.Map)
  }));
  google_auth.GoogleAuthCredential = class GoogleAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      return new google_auth.GoogleAuthCredential.__({accessToken: accessToken, idToken: idToken});
    }
    static _credential(opts) {
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new google_auth.GoogleAuthCredential.__({accessToken: accessToken, idToken: idToken});
    }
    static ['_#_credential#tearOff'](opts) {
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return google_auth.GoogleAuthCredential._credential({idToken: idToken, accessToken: accessToken});
    }
  };
  (google_auth.GoogleAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    let idToken = opts && 'idToken' in opts ? opts.idToken : null;
    google_auth.GoogleAuthCredential.__proto__.new.call(this, {providerId: "google.com", signInMethod: "google.com", accessToken: accessToken, idToken: idToken});
    ;
  }).prototype = google_auth.GoogleAuthCredential.prototype;
  dart.addTypeTests(google_auth.GoogleAuthCredential);
  dart.addTypeCaches(google_auth.GoogleAuthCredential);
  dart.setStaticMethodSignature(google_auth.GoogleAuthCredential, () => ['_credential']);
  dart.setLibraryUri(google_auth.GoogleAuthCredential, I[46]);
  dart.defineLazy(google_auth, {
    /*google_auth._kProviderId*/get _kProviderId() {
      return "google.com";
    }
  }, false);
  var _scopes$2 = dart.privateName(microsoft_auth, "_scopes");
  var _parameters$2 = dart.privateName(microsoft_auth, "_parameters");
  microsoft_auth.MicrosoftAuthProvider = class MicrosoftAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new microsoft_auth.MicrosoftAuthProvider.new();
    }
    static credential(accessToken) {
      return microsoft_auth.MicrosoftAuthCredential._credential(accessToken);
    }
    static get MICROSOFT_SIGN_IN_METHOD() {
      return "microsoft.com";
    }
    static get PROVIDER_ID() {
      return "microsoft.com";
    }
    get scopes() {
      return this[_scopes$2];
    }
    get parameters() {
      return this[_parameters$2];
    }
    addScope(scope) {
      this[_scopes$2][$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[_parameters$2] = customOAuthParameters;
      return this;
    }
  };
  (microsoft_auth.MicrosoftAuthProvider.new = function() {
    this[_scopes$2] = T$.JSArrayOfString().of([]);
    this[_parameters$2] = new (T$.IdentityMapOfString$String()).new();
    microsoft_auth.MicrosoftAuthProvider.__proto__.new.call(this, "microsoft.com");
    ;
  }).prototype = microsoft_auth.MicrosoftAuthProvider.prototype;
  dart.addTypeTests(microsoft_auth.MicrosoftAuthProvider);
  dart.addTypeCaches(microsoft_auth.MicrosoftAuthProvider);
  dart.setMethodSignature(microsoft_auth.MicrosoftAuthProvider, () => ({
    __proto__: dart.getMethods(microsoft_auth.MicrosoftAuthProvider.__proto__),
    addScope: dart.fnType(microsoft_auth.MicrosoftAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(microsoft_auth.MicrosoftAuthProvider, [core.Map$(core.String, core.String)])
  }));
  dart.setStaticMethodSignature(microsoft_auth.MicrosoftAuthProvider, () => ['credential']);
  dart.setGetterSignature(microsoft_auth.MicrosoftAuthProvider, () => ({
    __proto__: dart.getGetters(microsoft_auth.MicrosoftAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setStaticGetterSignature(microsoft_auth.MicrosoftAuthProvider, () => ['MICROSOFT_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(microsoft_auth.MicrosoftAuthProvider, I[47]);
  dart.setFieldSignature(microsoft_auth.MicrosoftAuthProvider, () => ({
    __proto__: dart.getFields(microsoft_auth.MicrosoftAuthProvider.__proto__),
    [_scopes$2]: dart.fieldType(core.List$(core.String)),
    [_parameters$2]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  microsoft_auth.MicrosoftAuthCredential = class MicrosoftAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new microsoft_auth.MicrosoftAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new microsoft_auth.MicrosoftAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return microsoft_auth.MicrosoftAuthCredential._credential(accessToken);
    }
  };
  (microsoft_auth.MicrosoftAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    microsoft_auth.MicrosoftAuthCredential.__proto__.new.call(this, {providerId: "microsoft.com", signInMethod: "microsoft.com", accessToken: accessToken});
    ;
  }).prototype = microsoft_auth.MicrosoftAuthCredential.prototype;
  dart.addTypeTests(microsoft_auth.MicrosoftAuthCredential);
  dart.addTypeCaches(microsoft_auth.MicrosoftAuthCredential);
  dart.setStaticMethodSignature(microsoft_auth.MicrosoftAuthCredential, () => ['_credential']);
  dart.setLibraryUri(microsoft_auth.MicrosoftAuthCredential, I[47]);
  dart.defineLazy(microsoft_auth, {
    /*microsoft_auth._kProviderId*/get _kProviderId() {
      return "microsoft.com";
    }
  }, false);
  var _scopes$3 = dart.privateName(oauth, "_scopes");
  var _parameters$3 = dart.privateName(oauth, "_parameters");
  oauth.OAuthProvider = class OAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff'](providerId) {
      return new oauth.OAuthProvider.new(providerId);
    }
    get scopes() {
      return this[_scopes$3];
    }
    get parameters() {
      return this[_parameters$3];
    }
    setScopes(scopes) {
      this[_scopes$3] = scopes;
      return this;
    }
    addScope(scope) {
      this[_scopes$3][$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[_parameters$3] = customOAuthParameters;
      return this;
    }
    credential(opts) {
      let t74;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let rawNonce = opts && 'rawNonce' in opts ? opts.rawNonce : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      return new oauth.OAuthCredential.new({providerId: this.providerId, signInMethod: (t74 = signInMethod, t74 == null ? "oauth" : t74), accessToken: accessToken, secret: secret, idToken: idToken, rawNonce: rawNonce});
    }
  };
  (oauth.OAuthProvider.new = function(providerId) {
    this[_scopes$3] = T$.JSArrayOfString().of([]);
    this[_parameters$3] = new (T$.IdentityMapOfString$String()).new();
    oauth.OAuthProvider.__proto__.new.call(this, providerId);
    ;
  }).prototype = oauth.OAuthProvider.prototype;
  dart.addTypeTests(oauth.OAuthProvider);
  dart.addTypeCaches(oauth.OAuthProvider);
  dart.setMethodSignature(oauth.OAuthProvider, () => ({
    __proto__: dart.getMethods(oauth.OAuthProvider.__proto__),
    setScopes: dart.fnType(oauth.OAuthProvider, [core.List$(core.String)]),
    addScope: dart.fnType(oauth.OAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(oauth.OAuthProvider, [core.Map$(core.String, core.String)]),
    credential: dart.fnType(oauth.OAuthCredential, [], {accessToken: dart.nullable(core.String), idToken: dart.nullable(core.String), rawNonce: dart.nullable(core.String), secret: dart.nullable(core.String), signInMethod: dart.nullable(core.String)}, {})
  }));
  dart.setGetterSignature(oauth.OAuthProvider, () => ({
    __proto__: dart.getGetters(oauth.OAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setLibraryUri(oauth.OAuthProvider, I[41]);
  dart.setFieldSignature(oauth.OAuthProvider, () => ({
    __proto__: dart.getFields(oauth.OAuthProvider.__proto__),
    [_scopes$3]: dart.fieldType(core.List$(core.String)),
    [_parameters$3]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  phone_auth.PhoneAuthProvider = class PhoneAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new phone_auth.PhoneAuthProvider.new();
    }
    static get PHONE_SIGN_IN_METHOD() {
      return "phone";
    }
    static get PROVIDER_ID() {
      return "phone";
    }
    static credential(opts) {
      let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return phone_auth.PhoneAuthCredential._credential(verificationId, smsCode);
    }
    static credentialFromToken(token, opts) {
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return phone_auth.PhoneAuthCredential._credentialFromToken(token, {smsCode: smsCode});
    }
  };
  (phone_auth.PhoneAuthProvider.new = function() {
    phone_auth.PhoneAuthProvider.__proto__.new.call(this, "phone");
    ;
  }).prototype = phone_auth.PhoneAuthProvider.prototype;
  dart.addTypeTests(phone_auth.PhoneAuthProvider);
  dart.addTypeCaches(phone_auth.PhoneAuthProvider);
  dart.setStaticMethodSignature(phone_auth.PhoneAuthProvider, () => ['credential', 'credentialFromToken']);
  dart.setStaticGetterSignature(phone_auth.PhoneAuthProvider, () => ['PHONE_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(phone_auth.PhoneAuthProvider, I[48]);
  var verificationId$1 = dart.privateName(phone_auth, "PhoneAuthCredential.verificationId");
  var smsCode$0 = dart.privateName(phone_auth, "PhoneAuthCredential.smsCode");
  phone_auth.PhoneAuthCredential = class PhoneAuthCredential extends auth_credential.AuthCredential {
    get verificationId() {
      return this[verificationId$1];
    }
    set verificationId(value) {
      super.verificationId = value;
    }
    get smsCode() {
      return this[smsCode$0];
    }
    set smsCode(value) {
      super.smsCode = value;
    }
    static ['_#_#tearOff'](opts) {
      let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let token = opts && 'token' in opts ? opts.token : null;
      return new phone_auth.PhoneAuthCredential.__({verificationId: verificationId, smsCode: smsCode, token: token});
    }
    static _credential(verificationId, smsCode) {
      return new phone_auth.PhoneAuthCredential.__({verificationId: verificationId, smsCode: smsCode});
    }
    static ['_#_credential#tearOff'](verificationId, smsCode) {
      return phone_auth.PhoneAuthCredential._credential(verificationId, smsCode);
    }
    static _credentialFromToken(token, opts) {
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return new phone_auth.PhoneAuthCredential.__({token: token, smsCode: smsCode});
    }
    static ['_#_credentialFromToken#tearOff'](token, opts) {
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return phone_auth.PhoneAuthCredential._credentialFromToken(token, {smsCode: smsCode});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "verificationId", this.verificationId, "smsCode", this.smsCode, "token", this.token]);
    }
  };
  (phone_auth.PhoneAuthCredential.__ = function(opts) {
    let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
    let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
    let token = opts && 'token' in opts ? opts.token : null;
    this[verificationId$1] = verificationId;
    this[smsCode$0] = smsCode;
    phone_auth.PhoneAuthCredential.__proto__.new.call(this, {providerId: "phone", signInMethod: "phone", token: token});
    ;
  }).prototype = phone_auth.PhoneAuthCredential.prototype;
  dart.addTypeTests(phone_auth.PhoneAuthCredential);
  dart.addTypeCaches(phone_auth.PhoneAuthCredential);
  dart.setStaticMethodSignature(phone_auth.PhoneAuthCredential, () => ['_credential', '_credentialFromToken']);
  dart.setLibraryUri(phone_auth.PhoneAuthCredential, I[48]);
  dart.setFieldSignature(phone_auth.PhoneAuthCredential, () => ({
    __proto__: dart.getFields(phone_auth.PhoneAuthCredential.__proto__),
    verificationId: dart.finalFieldType(dart.nullable(core.String)),
    smsCode: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineLazy(phone_auth, {
    /*phone_auth._kProviderId*/get _kProviderId() {
      return "phone";
    }
  }, false);
  saml_auth.SAMLAuthProvider = class SAMLAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff'](providerId) {
      return new saml_auth.SAMLAuthProvider.new(providerId);
    }
  };
  (saml_auth.SAMLAuthProvider.new = function(providerId) {
    saml_auth.SAMLAuthProvider.__proto__.new.call(this, providerId);
    ;
  }).prototype = saml_auth.SAMLAuthProvider.prototype;
  dart.addTypeTests(saml_auth.SAMLAuthProvider);
  dart.addTypeCaches(saml_auth.SAMLAuthProvider);
  dart.setLibraryUri(saml_auth.SAMLAuthProvider, I[49]);
  var _parameters$4 = dart.privateName(twitter_auth, "_parameters");
  twitter_auth.TwitterAuthProvider = class TwitterAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new twitter_auth.TwitterAuthProvider.new();
    }
    static credential(opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return twitter_auth.TwitterAuthCredential._credential({accessToken: accessToken, secret: secret});
    }
    static get TWITTER_SIGN_IN_METHOD() {
      return "twitter.com";
    }
    static get PROVIDER_ID() {
      return "twitter.com";
    }
    get parameters() {
      return this[_parameters$4];
    }
    setCustomParameters(customOAuthParameters) {
      this[_parameters$4] = customOAuthParameters;
      return this;
    }
  };
  (twitter_auth.TwitterAuthProvider.new = function() {
    this[_parameters$4] = new (T$.IdentityMapOfString$String()).new();
    twitter_auth.TwitterAuthProvider.__proto__.new.call(this, "twitter.com");
    ;
  }).prototype = twitter_auth.TwitterAuthProvider.prototype;
  dart.addTypeTests(twitter_auth.TwitterAuthProvider);
  dart.addTypeCaches(twitter_auth.TwitterAuthProvider);
  dart.setMethodSignature(twitter_auth.TwitterAuthProvider, () => ({
    __proto__: dart.getMethods(twitter_auth.TwitterAuthProvider.__proto__),
    setCustomParameters: dart.fnType(twitter_auth.TwitterAuthProvider, [core.Map$(core.String, core.String)])
  }));
  dart.setStaticMethodSignature(twitter_auth.TwitterAuthProvider, () => ['credential']);
  dart.setGetterSignature(twitter_auth.TwitterAuthProvider, () => ({
    __proto__: dart.getGetters(twitter_auth.TwitterAuthProvider.__proto__),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setStaticGetterSignature(twitter_auth.TwitterAuthProvider, () => ['TWITTER_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(twitter_auth.TwitterAuthProvider, I[50]);
  dart.setFieldSignature(twitter_auth.TwitterAuthProvider, () => ({
    __proto__: dart.getFields(twitter_auth.TwitterAuthProvider.__proto__),
    [_parameters$4]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  twitter_auth.TwitterAuthCredential = class TwitterAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return new twitter_auth.TwitterAuthCredential.__({accessToken: accessToken, secret: secret});
    }
    static _credential(opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return new twitter_auth.TwitterAuthCredential.__({accessToken: accessToken, secret: secret});
    }
    static ['_#_credential#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return twitter_auth.TwitterAuthCredential._credential({accessToken: accessToken, secret: secret});
    }
  };
  (twitter_auth.TwitterAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    let secret = opts && 'secret' in opts ? opts.secret : null;
    twitter_auth.TwitterAuthCredential.__proto__.new.call(this, {providerId: "twitter.com", signInMethod: "twitter.com", accessToken: accessToken, secret: secret});
    ;
  }).prototype = twitter_auth.TwitterAuthCredential.prototype;
  dart.addTypeTests(twitter_auth.TwitterAuthCredential);
  dart.addTypeCaches(twitter_auth.TwitterAuthCredential);
  dart.setStaticMethodSignature(twitter_auth.TwitterAuthCredential, () => ['_credential']);
  dart.setLibraryUri(twitter_auth.TwitterAuthCredential, I[50]);
  dart.defineLazy(twitter_auth, {
    /*twitter_auth._kProviderId*/get _kProviderId() {
      return "twitter.com";
    }
  }, false);
  var _scopes$4 = dart.privateName(yahoo_auth, "_scopes");
  var _parameters$5 = dart.privateName(yahoo_auth, "_parameters");
  yahoo_auth.YahooAuthProvider = class YahooAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new yahoo_auth.YahooAuthProvider.new();
    }
    static credential(accessToken) {
      return yahoo_auth.YahooAuthCredential._credential(accessToken);
    }
    static get YAHOO_SIGN_IN_METHOD() {
      return "yahoo.com";
    }
    static get PROVIDER_ID() {
      return "yahoo.com";
    }
    get scopes() {
      return this[_scopes$4];
    }
    get parameters() {
      return this[_parameters$5];
    }
    addScope(scope) {
      this[_scopes$4][$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[_parameters$5] = customOAuthParameters;
      return this;
    }
  };
  (yahoo_auth.YahooAuthProvider.new = function() {
    this[_scopes$4] = T$.JSArrayOfString().of([]);
    this[_parameters$5] = new _js_helper.LinkedMap.new();
    yahoo_auth.YahooAuthProvider.__proto__.new.call(this, "yahoo.com");
    ;
  }).prototype = yahoo_auth.YahooAuthProvider.prototype;
  dart.addTypeTests(yahoo_auth.YahooAuthProvider);
  dart.addTypeCaches(yahoo_auth.YahooAuthProvider);
  dart.setMethodSignature(yahoo_auth.YahooAuthProvider, () => ({
    __proto__: dart.getMethods(yahoo_auth.YahooAuthProvider.__proto__),
    addScope: dart.fnType(yahoo_auth.YahooAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(yahoo_auth.YahooAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(yahoo_auth.YahooAuthProvider, () => ['credential']);
  dart.setGetterSignature(yahoo_auth.YahooAuthProvider, () => ({
    __proto__: dart.getGetters(yahoo_auth.YahooAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(yahoo_auth.YahooAuthProvider, () => ['YAHOO_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(yahoo_auth.YahooAuthProvider, I[51]);
  dart.setFieldSignature(yahoo_auth.YahooAuthProvider, () => ({
    __proto__: dart.getFields(yahoo_auth.YahooAuthProvider.__proto__),
    [_scopes$4]: dart.fieldType(core.List$(core.String)),
    [_parameters$5]: dart.fieldType(core.Map)
  }));
  yahoo_auth.YahooAuthCredential = class YahooAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new yahoo_auth.YahooAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new yahoo_auth.YahooAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return yahoo_auth.YahooAuthCredential._credential(accessToken);
    }
  };
  (yahoo_auth.YahooAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    yahoo_auth.YahooAuthCredential.__proto__.new.call(this, {providerId: "yahoo.com", signInMethod: "yahoo.com", accessToken: accessToken});
    ;
  }).prototype = yahoo_auth.YahooAuthCredential.prototype;
  dart.addTypeTests(yahoo_auth.YahooAuthCredential);
  dart.addTypeCaches(yahoo_auth.YahooAuthCredential);
  dart.setStaticMethodSignature(yahoo_auth.YahooAuthCredential, () => ['_credential']);
  dart.setLibraryUri(yahoo_auth.YahooAuthCredential, I[51]);
  dart.defineLazy(yahoo_auth, {
    /*yahoo_auth._kProviderId*/get _kProviderId() {
      return "yahoo.com";
    }
  }, false);
  types.Persistence = class Persistence extends core._Enum {
    [_enumToString]() {
      return "Persistence." + this[_name];
    }
  };
  (types.Persistence.new = function(index, name) {
    types.Persistence.__proto__.new.call(this, index, name);
    ;
  }).prototype = types.Persistence.prototype;
  dart.addTypeTests(types.Persistence);
  dart.addTypeCaches(types.Persistence);
  dart.setMethodSignature(types.Persistence, () => ({
    __proto__: dart.getMethods(types.Persistence.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(types.Persistence, I[52]);
  dart.setStaticFieldSignature(types.Persistence, () => ['values', 'LOCAL', 'INDEXED_DB', 'NONE', 'SESSION']);
  dart.defineLazy(types.Persistence, {
    /*types.Persistence.values*/get values() {
      return C[49] || CT.C49;
    },
    /*types.Persistence.LOCAL*/get LOCAL() {
      return C[18] || CT.C18;
    },
    /*types.Persistence.INDEXED_DB*/get INDEXED_DB() {
      return C[19] || CT.C19;
    },
    /*types.Persistence.NONE*/get NONE() {
      return C[21] || CT.C21;
    },
    /*types.Persistence.SESSION*/get SESSION() {
      return C[20] || CT.C20;
    }
  }, false);
  var _data$0 = dart.privateName(user_info, "_data");
  user_info.UserInfo = class UserInfo extends core.Object {
    static ['_#fromPigeon#tearOff'](_data) {
      return new user_info.UserInfo.fromPigeon(_data);
    }
    static ['_#fromJson#tearOff'](data) {
      return new user_info.UserInfo.fromJson(data);
    }
    get displayName() {
      return this[_data$0].displayName;
    }
    get email() {
      return this[_data$0].email;
    }
    get phoneNumber() {
      return this[_data$0].phoneNumber;
    }
    get photoURL() {
      return this[_data$0].photoUrl;
    }
    get providerId() {
      return dart.nullCheck(this[_data$0].providerId);
    }
    get uid() {
      return this[_data$0].uid;
    }
    toString() {
      return dart.str(dart.wrapType(user_info.UserInfo)) + "(displayName: " + dart.str(this.displayName) + ", email: " + dart.str(this.email) + ", phoneNumber: " + dart.str(this.phoneNumber) + ", photoURL: " + dart.str(this.photoURL) + ", providerId: " + this.providerId + ", uid: " + dart.str(this.uid) + ")";
    }
  };
  (user_info.UserInfo.fromPigeon = function(_data) {
    this[_data$0] = _data;
    ;
  }).prototype = user_info.UserInfo.prototype;
  (user_info.UserInfo.fromJson = function(data) {
    this[_data$0] = new messages$46pigeon.PigeonUserInfo.new({uid: core.String.as(data[$_get]("uid")), email: T$.StringN().as(data[$_get]("email")), displayName: T$.StringN().as(data[$_get]("displayName")), photoUrl: T$.StringN().as(data[$_get]("photoUrl")), phoneNumber: T$.StringN().as(data[$_get]("phoneNumber")), isAnonymous: core.bool.as(data[$_get]("isAnonymous")), isEmailVerified: core.bool.as(data[$_get]("isEmailVerified")), providerId: T$.StringN().as(data[$_get]("providerId")), tenantId: T$.StringN().as(data[$_get]("tenantId")), refreshToken: T$.StringN().as(data[$_get]("refreshToken")), creationTimestamp: T$.intN().as(data[$_get]("creationTimestamp")), lastSignInTimestamp: T$.intN().as(data[$_get]("lastSignInTimestamp"))});
    ;
  }).prototype = user_info.UserInfo.prototype;
  dart.addTypeTests(user_info.UserInfo);
  dart.addTypeCaches(user_info.UserInfo);
  dart.setGetterSignature(user_info.UserInfo, () => ({
    __proto__: dart.getGetters(user_info.UserInfo.__proto__),
    displayName: dart.nullable(core.String),
    email: dart.nullable(core.String),
    phoneNumber: dart.nullable(core.String),
    photoURL: dart.nullable(core.String),
    providerId: core.String,
    uid: dart.nullable(core.String)
  }));
  dart.setLibraryUri(user_info.UserInfo, I[53]);
  dart.setFieldSignature(user_info.UserInfo, () => ({
    __proto__: dart.getFields(user_info.UserInfo.__proto__),
    [_data$0]: dart.finalFieldType(messages$46pigeon.PigeonUserInfo)
  }));
  dart.defineExtensionMethods(user_info.UserInfo, ['toString']);
  var _creationTimestamp$ = dart.privateName(user_metadata, "_creationTimestamp");
  var _lastSignInTime$ = dart.privateName(user_metadata, "_lastSignInTime");
  user_metadata.UserMetadata = class UserMetadata extends core.Object {
    static ['_#new#tearOff'](_creationTimestamp, _lastSignInTime) {
      return new user_metadata.UserMetadata.new(_creationTimestamp, _lastSignInTime);
    }
    get creationTime() {
      return this[_creationTimestamp$] == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[_creationTimestamp$]), {isUtc: true});
    }
    get lastSignInTime() {
      return this[_lastSignInTime$] == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[_lastSignInTime$]), {isUtc: true});
    }
    toString() {
      return "UserMetadata(creationTime: " + dart.str(this.creationTime) + ", lastSignInTime: " + dart.str(this.lastSignInTime) + ")";
    }
  };
  (user_metadata.UserMetadata.new = function(_creationTimestamp, _lastSignInTime) {
    this[_creationTimestamp$] = _creationTimestamp;
    this[_lastSignInTime$] = _lastSignInTime;
    ;
  }).prototype = user_metadata.UserMetadata.prototype;
  dart.addTypeTests(user_metadata.UserMetadata);
  dart.addTypeCaches(user_metadata.UserMetadata);
  dart.setGetterSignature(user_metadata.UserMetadata, () => ({
    __proto__: dart.getGetters(user_metadata.UserMetadata.__proto__),
    creationTime: dart.nullable(core.DateTime),
    lastSignInTime: dart.nullable(core.DateTime)
  }));
  dart.setLibraryUri(user_metadata.UserMetadata, I[54]);
  dart.setFieldSignature(user_metadata.UserMetadata, () => ({
    __proto__: dart.getFields(user_metadata.UserMetadata.__proto__),
    [_creationTimestamp$]: dart.finalFieldType(dart.nullable(core.int)),
    [_lastSignInTime$]: dart.finalFieldType(dart.nullable(core.int))
  }));
  dart.defineExtensionMethods(user_metadata.UserMetadata, ['toString']);
  js_interop.dartifyDate = function dartifyDate(jsObject) {
    if (js_util.hasProperty(jsObject, "toDateString")) {
      try {
        let date = jsObject;
        return new core.DateTime.fromMillisecondsSinceEpoch(core.int.as(dart.dsend(date, 'getTime', [])));
      } catch (e) {
        let ex = dart.getThrown(e);
        if (core.NoSuchMethodError.is(ex)) {
          return null;
        } else
          throw e;
      }
    }
    return null;
  };
  utils$.dartify = function dartify$(jsObject, customDartify = null) {
    let t78;
    if (utils$._isBasicType(jsObject)) {
      return jsObject;
    }
    if (core.Iterable.is(jsObject)) {
      return jsObject[$map](dart.dynamic, dart.fn(item => utils$.dartify(item, customDartify), T$.dynamicTodynamic()))[$toList]();
    }
    let jsDate = js_interop.dartifyDate(dart.nullCheck(jsObject));
    if (jsDate != null) {
      return jsDate;
    }
    let value = (t78 = customDartify, t78 == null ? null : t78(jsObject));
    if (value == null) {
      let keys = dart.global.Object.keys(jsObject);
      let map = new (T$.IdentityMapOfString$dynamic()).new();
      for (let key of keys) {
        map[$_set](key, utils$.dartify(js_util.getProperty(T$.ObjectN(), jsObject, key), customDartify));
      }
      return map;
    }
    return value;
  };
  utils$.jsifyList = function jsifyList(list, customJsify = null) {
    return dart.global.Array.from(list[$map](dart.dynamic, dart.fn(item => utils$.jsify(item, customJsify), T$.dynamicTodynamic()))[$toList]());
  };
  utils$.jsify = function jsify$(dartObject, customJsify = null) {
    let t78;
    if (utils$._isBasicType(dartObject)) {
      if (dartObject == null) {
        return null;
      }
      return dartObject;
    }
    if (core.Iterable.is(dartObject)) {
      return utils$.jsifyList(dartObject, customJsify);
    }
    if (core.Map.is(dartObject)) {
      let jsMap = js_util.newObject(dart.dynamic);
      dartObject[$forEach](dart.fn((key, value) => {
        js_util.setProperty(core.Object, core.Object.as(jsMap), core.Object.as(key), utils$.jsify(value, customJsify));
      }, T$.dynamicAnddynamicTovoid()));
      return jsMap;
    }
    if (core.Function.is(dartObject)) {
      return js.allowInterop(core.Function, dartObject);
    }
    let value = (t78 = customJsify, t78 == null ? null : t78(dartObject));
    if (value == null) {
      dart.throw(new core.ArgumentError.value(dartObject, "dartObject", "Could not convert"));
    }
    return value;
  };
  utils$.callMethod = function callMethod(jsObject, method, args) {
    return js_util.callMethod(dart.dynamic, jsObject, method, args);
  };
  utils$._isBasicType = function _isBasicType(value) {
    if (value == null || typeof value == 'number' || typeof value == 'boolean' || typeof value == 'string') {
      return true;
    }
    return false;
  };
  utils$.handleThenable = function handleThenable(T, thenable) {
    return async.async(T, function* handleThenable() {
      return js_util.promiseToFuture(T, thenable);
    });
  };
  utils$.handleFutureWithMapper = function handleFutureWithMapper(T, S, future, mapper) {
    return new dart.global.Promise(js.allowInterop(core.Function, dart.fn((resolve, reject) => {
      future.then(core.Null, dart.fn(value => {
        let mappedValue = mapper(value);
        resolve(mappedValue);
      }, dart.fnType(core.Null, [T]))).catchError(dart.fn(error => reject(core.Object.as(error)), T$.dynamicTodynamic()));
    }, dart.fnType(core.Null, [dart.fnType(dart.dynamic, [S]), T$.ObjectTodynamic()]))));
  };
  var apiKey$0 = dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.apiKey");
  var appId$0 = dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.appId");
  var messagingSenderId$0 = dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.messagingSenderId");
  var projectId$0 = dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.projectId");
  var authDomain$0 = dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.authDomain");
  var databaseURL$0 = dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.databaseURL");
  var storageBucket$0 = dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.storageBucket");
  var measurementId$0 = dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.measurementId");
  var trackingId$0 = dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.trackingId");
  var deepLinkURLScheme$0 = dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.deepLinkURLScheme");
  var androidClientId$0 = dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.androidClientId");
  var iosClientId$0 = dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.iosClientId");
  var iosBundleId$0 = dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.iosBundleId");
  var appGroupId$0 = dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.appGroupId");
  messages$46pigeon$.PigeonFirebaseOptions = class PigeonFirebaseOptions extends core.Object {
    get apiKey() {
      return this[apiKey$0];
    }
    set apiKey(value) {
      this[apiKey$0] = value;
    }
    get appId() {
      return this[appId$0];
    }
    set appId(value) {
      this[appId$0] = value;
    }
    get messagingSenderId() {
      return this[messagingSenderId$0];
    }
    set messagingSenderId(value) {
      this[messagingSenderId$0] = value;
    }
    get projectId() {
      return this[projectId$0];
    }
    set projectId(value) {
      this[projectId$0] = value;
    }
    get authDomain() {
      return this[authDomain$0];
    }
    set authDomain(value) {
      this[authDomain$0] = value;
    }
    get databaseURL() {
      return this[databaseURL$0];
    }
    set databaseURL(value) {
      this[databaseURL$0] = value;
    }
    get storageBucket() {
      return this[storageBucket$0];
    }
    set storageBucket(value) {
      this[storageBucket$0] = value;
    }
    get measurementId() {
      return this[measurementId$0];
    }
    set measurementId(value) {
      this[measurementId$0] = value;
    }
    get trackingId() {
      return this[trackingId$0];
    }
    set trackingId(value) {
      this[trackingId$0] = value;
    }
    get deepLinkURLScheme() {
      return this[deepLinkURLScheme$0];
    }
    set deepLinkURLScheme(value) {
      this[deepLinkURLScheme$0] = value;
    }
    get androidClientId() {
      return this[androidClientId$0];
    }
    set androidClientId(value) {
      this[androidClientId$0] = value;
    }
    get iosClientId() {
      return this[iosClientId$0];
    }
    set iosClientId(value) {
      this[iosClientId$0] = value;
    }
    get iosBundleId() {
      return this[iosBundleId$0];
    }
    set iosBundleId(value) {
      this[iosBundleId$0] = value;
    }
    get appGroupId() {
      return this[appGroupId$0];
    }
    set appGroupId(value) {
      this[appGroupId$0] = value;
    }
    static ['_#new#tearOff'](opts) {
      let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
      let appId = opts && 'appId' in opts ? opts.appId : null;
      let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
      let projectId = opts && 'projectId' in opts ? opts.projectId : null;
      let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
      let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
      let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
      let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
      let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
      let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
      let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
      let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
      return new messages$46pigeon$.PigeonFirebaseOptions.new({apiKey: apiKey, appId: appId, messagingSenderId: messagingSenderId, projectId: projectId, authDomain: authDomain, databaseURL: databaseURL, storageBucket: storageBucket, measurementId: measurementId, trackingId: trackingId, deepLinkURLScheme: deepLinkURLScheme, androidClientId: androidClientId, iosClientId: iosClientId, iosBundleId: iosBundleId, appGroupId: appGroupId});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.apiKey, this.appId, this.messagingSenderId, this.projectId, this.authDomain, this.databaseURL, this.storageBucket, this.measurementId, this.trackingId, this.deepLinkURLScheme, this.androidClientId, this.iosClientId, this.iosBundleId, this.appGroupId]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.PigeonFirebaseOptions.new({apiKey: core.String.as(dart.nullCheck(result[$_get](0))), appId: core.String.as(dart.nullCheck(result[$_get](1))), messagingSenderId: core.String.as(dart.nullCheck(result[$_get](2))), projectId: core.String.as(dart.nullCheck(result[$_get](3))), authDomain: T$.StringN().as(result[$_get](4)), databaseURL: T$.StringN().as(result[$_get](5)), storageBucket: T$.StringN().as(result[$_get](6)), measurementId: T$.StringN().as(result[$_get](7)), trackingId: T$.StringN().as(result[$_get](8)), deepLinkURLScheme: T$.StringN().as(result[$_get](9)), androidClientId: T$.StringN().as(result[$_get](10)), iosClientId: T$.StringN().as(result[$_get](11)), iosBundleId: T$.StringN().as(result[$_get](12)), appGroupId: T$.StringN().as(result[$_get](13))});
    }
  };
  (messages$46pigeon$.PigeonFirebaseOptions.new = function(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
    let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
    let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
    let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
    let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
    let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
    this[apiKey$0] = apiKey;
    this[appId$0] = appId;
    this[messagingSenderId$0] = messagingSenderId;
    this[projectId$0] = projectId;
    this[authDomain$0] = authDomain;
    this[databaseURL$0] = databaseURL;
    this[storageBucket$0] = storageBucket;
    this[measurementId$0] = measurementId;
    this[trackingId$0] = trackingId;
    this[deepLinkURLScheme$0] = deepLinkURLScheme;
    this[androidClientId$0] = androidClientId;
    this[iosClientId$0] = iosClientId;
    this[iosBundleId$0] = iosBundleId;
    this[appGroupId$0] = appGroupId;
    ;
  }).prototype = messages$46pigeon$.PigeonFirebaseOptions.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonFirebaseOptions);
  dart.addTypeCaches(messages$46pigeon$.PigeonFirebaseOptions);
  dart.setMethodSignature(messages$46pigeon$.PigeonFirebaseOptions, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonFirebaseOptions.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonFirebaseOptions, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonFirebaseOptions, I[55]);
  dart.setFieldSignature(messages$46pigeon$.PigeonFirebaseOptions, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonFirebaseOptions.__proto__),
    apiKey: dart.fieldType(core.String),
    appId: dart.fieldType(core.String),
    messagingSenderId: dart.fieldType(core.String),
    projectId: dart.fieldType(core.String),
    authDomain: dart.fieldType(dart.nullable(core.String)),
    databaseURL: dart.fieldType(dart.nullable(core.String)),
    storageBucket: dart.fieldType(dart.nullable(core.String)),
    measurementId: dart.fieldType(dart.nullable(core.String)),
    trackingId: dart.fieldType(dart.nullable(core.String)),
    deepLinkURLScheme: dart.fieldType(dart.nullable(core.String)),
    androidClientId: dart.fieldType(dart.nullable(core.String)),
    iosClientId: dart.fieldType(dart.nullable(core.String)),
    iosBundleId: dart.fieldType(dart.nullable(core.String)),
    appGroupId: dart.fieldType(dart.nullable(core.String))
  }));
  var name$1 = dart.privateName(messages$46pigeon$, "PigeonInitializeResponse.name");
  var options$0 = dart.privateName(messages$46pigeon$, "PigeonInitializeResponse.options");
  var isAutomaticDataCollectionEnabled$ = dart.privateName(messages$46pigeon$, "PigeonInitializeResponse.isAutomaticDataCollectionEnabled");
  var pluginConstants$ = dart.privateName(messages$46pigeon$, "PigeonInitializeResponse.pluginConstants");
  messages$46pigeon$.PigeonInitializeResponse = class PigeonInitializeResponse extends core.Object {
    get name() {
      return this[name$1];
    }
    set name(value) {
      this[name$1] = value;
    }
    get options() {
      return this[options$0];
    }
    set options(value) {
      this[options$0] = value;
    }
    get isAutomaticDataCollectionEnabled() {
      return this[isAutomaticDataCollectionEnabled$];
    }
    set isAutomaticDataCollectionEnabled(value) {
      this[isAutomaticDataCollectionEnabled$] = value;
    }
    get pluginConstants() {
      return this[pluginConstants$];
    }
    set pluginConstants(value) {
      this[pluginConstants$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
      let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
      return new messages$46pigeon$.PigeonInitializeResponse.new({name: name, options: options, isAutomaticDataCollectionEnabled: isAutomaticDataCollectionEnabled, pluginConstants: pluginConstants});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.name, this.options.encode(), this.isAutomaticDataCollectionEnabled, this.pluginConstants]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.PigeonInitializeResponse.new({name: core.String.as(dart.nullCheck(result[$_get](0))), options: messages$46pigeon$.PigeonFirebaseOptions.decode(T$.ListOfObjectN().as(dart.nullCheck(result[$_get](1)))), isAutomaticDataCollectionEnabled: T$.boolN().as(result[$_get](2)), pluginConstants: dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(result[$_get](3)))[$cast](T$.StringN(), T$.ObjectN())});
    }
  };
  (messages$46pigeon$.PigeonInitializeResponse.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let options = opts && 'options' in opts ? opts.options : null;
    let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
    let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
    this[name$1] = name;
    this[options$0] = options;
    this[isAutomaticDataCollectionEnabled$] = isAutomaticDataCollectionEnabled;
    this[pluginConstants$] = pluginConstants;
    ;
  }).prototype = messages$46pigeon$.PigeonInitializeResponse.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonInitializeResponse);
  dart.addTypeCaches(messages$46pigeon$.PigeonInitializeResponse);
  dart.setMethodSignature(messages$46pigeon$.PigeonInitializeResponse, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonInitializeResponse.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonInitializeResponse, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonInitializeResponse, I[55]);
  dart.setFieldSignature(messages$46pigeon$.PigeonInitializeResponse, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonInitializeResponse.__proto__),
    name: dart.fieldType(core.String),
    options: dart.fieldType(messages$46pigeon$.PigeonFirebaseOptions),
    isAutomaticDataCollectionEnabled: dart.fieldType(dart.nullable(core.bool)),
    pluginConstants: dart.fieldType(core.Map$(dart.nullable(core.String), dart.nullable(core.Object)))
  }));
  messages$46pigeon$._FirebaseCoreHostApiCodec = class _FirebaseCoreHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon$._FirebaseCoreHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$.PigeonFirebaseOptions.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonInitializeResponse.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$.PigeonFirebaseOptions.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon$.PigeonInitializeResponse.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon$._FirebaseCoreHostApiCodec.new = function() {
    messages$46pigeon$._FirebaseCoreHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon$._FirebaseCoreHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon$._FirebaseCoreHostApiCodec);
  dart.addTypeCaches(messages$46pigeon$._FirebaseCoreHostApiCodec);
  dart.setLibraryUri(messages$46pigeon$._FirebaseCoreHostApiCodec, I[55]);
  var _binaryMessenger$ = dart.privateName(messages$46pigeon$, "_binaryMessenger");
  messages$46pigeon$.FirebaseCoreHostApi = class FirebaseCoreHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$.FirebaseCoreHostApi.new({binaryMessenger: binaryMessenger});
    }
    initializeApp(arg_appName, arg_initializeAppRequest) {
      return async.async(messages$46pigeon$.PigeonInitializeResponse, (function* initializeApp() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp", messages$46pigeon$.FirebaseCoreHostApi.codec, {binaryMessenger: this[_binaryMessenger$]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_initializeAppRequest])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonInitializeResponseN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
    initializeCore() {
      return async.async(T$.ListOfPigeonInitializeResponseN(), (function* initializeCore() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeCore", messages$46pigeon$.FirebaseCoreHostApi.codec, {binaryMessenger: this[_binaryMessenger$]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(null));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.ListNOfObjectN().as(replyList[$_get](0)))[$cast](T$.PigeonInitializeResponseN());
        }
      }).bind(this));
    }
    optionsFromResource() {
      return async.async(messages$46pigeon$.PigeonFirebaseOptions, (function* optionsFromResource() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.optionsFromResource", messages$46pigeon$.FirebaseCoreHostApi.codec, {binaryMessenger: this[_binaryMessenger$]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(null));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else if (replyList[$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonFirebaseOptionsN().as(replyList[$_get](0)));
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$.FirebaseCoreHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[_binaryMessenger$] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$.FirebaseCoreHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$.FirebaseCoreHostApi);
  dart.addTypeCaches(messages$46pigeon$.FirebaseCoreHostApi);
  dart.setMethodSignature(messages$46pigeon$.FirebaseCoreHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.FirebaseCoreHostApi.__proto__),
    initializeApp: dart.fnType(async.Future$(messages$46pigeon$.PigeonInitializeResponse), [core.String, messages$46pigeon$.PigeonFirebaseOptions]),
    initializeCore: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon$.PigeonInitializeResponse))), []),
    optionsFromResource: dart.fnType(async.Future$(messages$46pigeon$.PigeonFirebaseOptions), [])
  }));
  dart.setLibraryUri(messages$46pigeon$.FirebaseCoreHostApi, I[55]);
  dart.setFieldSignature(messages$46pigeon$.FirebaseCoreHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$.FirebaseCoreHostApi.__proto__),
    [_binaryMessenger$]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$.FirebaseCoreHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$.FirebaseCoreHostApi, {
    /*messages$46pigeon$.FirebaseCoreHostApi.codec*/get codec() {
      return C[50] || CT.C50;
    }
  }, false);
  messages$46pigeon$.FirebaseAppHostApi = class FirebaseAppHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$.FirebaseAppHostApi.new({binaryMessenger: binaryMessenger});
    }
    setAutomaticDataCollectionEnabled(arg_appName, arg_enabled) {
      return async.async(dart.void, (function* setAutomaticDataCollectionEnabled() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled", messages$46pigeon$.FirebaseAppHostApi.codec, {binaryMessenger: this[_binaryMessenger$]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_enabled])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    setAutomaticResourceManagementEnabled(arg_appName, arg_enabled) {
      return async.async(dart.void, (function* setAutomaticResourceManagementEnabled() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled", messages$46pigeon$.FirebaseAppHostApi.codec, {binaryMessenger: this[_binaryMessenger$]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_enabled])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    delete(arg_appName) {
      return async.async(dart.void, (function* $delete() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.delete", messages$46pigeon$.FirebaseAppHostApi.codec, {binaryMessenger: this[_binaryMessenger$]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[$_get](0))), message: T$.StringN().as(replyList[$_get](1)), details: replyList[$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$.FirebaseAppHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[_binaryMessenger$] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$.FirebaseAppHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$.FirebaseAppHostApi);
  dart.addTypeCaches(messages$46pigeon$.FirebaseAppHostApi);
  dart.setMethodSignature(messages$46pigeon$.FirebaseAppHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.FirebaseAppHostApi.__proto__),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.String, core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.String, core.bool]),
    delete: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setLibraryUri(messages$46pigeon$.FirebaseAppHostApi, I[55]);
  dart.setFieldSignature(messages$46pigeon$.FirebaseAppHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$.FirebaseAppHostApi.__proto__),
    [_binaryMessenger$]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$.FirebaseAppHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$.FirebaseAppHostApi, {
    /*messages$46pigeon$.FirebaseAppHostApi.codec*/get codec() {
      return C[51] || CT.C51;
    }
  }, false);
  plugin_platform_interface.MockPlatformInterfaceMixin = class MockPlatformInterfaceMixin extends core.Object {};
  (plugin_platform_interface.MockPlatformInterfaceMixin.new = function() {
    ;
  }).prototype = plugin_platform_interface.MockPlatformInterfaceMixin.prototype;
  dart.addTypeTests(plugin_platform_interface.MockPlatformInterfaceMixin);
  dart.addTypeCaches(plugin_platform_interface.MockPlatformInterfaceMixin);
  plugin_platform_interface.MockPlatformInterfaceMixin[dart.implements] = () => [plugin_platform_interface.PlatformInterface];
  dart.setLibraryUri(plugin_platform_interface.MockPlatformInterfaceMixin, I[3]);
  mocks.MockFirebaseApp = class MockFirebaseApp extends core.Object {
    initializeApp(appName, initializeAppRequest) {
      return async.async(messages$46pigeon$.PigeonInitializeResponse, function* initializeApp() {
        return new messages$46pigeon$.PigeonInitializeResponse.new({name: appName, options: new messages$46pigeon$.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"}), pluginConstants: new (T$.IdentityMapOfStringN$ObjectN()).new()});
      });
    }
    initializeCore() {
      return async.async(T$.ListOfPigeonInitializeResponseN(), function* initializeCore() {
        return T$.JSArrayOfPigeonInitializeResponseN().of([new messages$46pigeon$.PigeonInitializeResponse.new({name: "[DEFAULT]", options: new messages$46pigeon$.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"}), pluginConstants: new (T$.IdentityMapOfStringN$ObjectN()).new()})]);
      });
    }
    optionsFromResource() {
      return async.async(messages$46pigeon$.PigeonFirebaseOptions, function* optionsFromResource() {
        return new messages$46pigeon$.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"});
      });
    }
    static ['_#new#tearOff']() {
      return new mocks.MockFirebaseApp.new();
    }
  };
  (mocks.MockFirebaseApp.new = function() {
    ;
  }).prototype = mocks.MockFirebaseApp.prototype;
  dart.addTypeTests(mocks.MockFirebaseApp);
  dart.addTypeCaches(mocks.MockFirebaseApp);
  mocks.MockFirebaseApp[dart.implements] = () => [test_api.TestFirebaseCoreHostApi];
  dart.setMethodSignature(mocks.MockFirebaseApp, () => ({
    __proto__: dart.getMethods(mocks.MockFirebaseApp.__proto__),
    initializeApp: dart.fnType(async.Future$(messages$46pigeon$.PigeonInitializeResponse), [core.String, messages$46pigeon$.PigeonFirebaseOptions]),
    initializeCore: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon$.PigeonInitializeResponse))), []),
    optionsFromResource: dart.fnType(async.Future$(messages$46pigeon$.PigeonFirebaseOptions), [])
  }));
  dart.setLibraryUri(mocks.MockFirebaseApp, I[56]);
  mocks.setupFirebaseCoreMocks = function setupFirebaseCoreMocks() {
    test_api.TestFirebaseCoreHostApi.setup(new mocks.MockFirebaseApp.new());
  };
  test_api._TestFirebaseCoreHostApiCodec = class _TestFirebaseCoreHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new test_api._TestFirebaseCoreHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$.PigeonFirebaseOptions.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonInitializeResponse.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$.PigeonFirebaseOptions.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon$.PigeonInitializeResponse.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (test_api._TestFirebaseCoreHostApiCodec.new = function() {
    test_api._TestFirebaseCoreHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = test_api._TestFirebaseCoreHostApiCodec.prototype;
  dart.addTypeTests(test_api._TestFirebaseCoreHostApiCodec);
  dart.addTypeCaches(test_api._TestFirebaseCoreHostApiCodec);
  dart.setLibraryUri(test_api._TestFirebaseCoreHostApiCodec, I[57]);
  test_api.TestFirebaseCoreHostApi = class TestFirebaseCoreHostApi extends core.Object {
    static setup(api, opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, null);
        } else {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null.", I[58], 64, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null, expected non-null String.", I[58], 68, 18, "arg_appName != null");
            let arg_initializeAppRequest = T$.PigeonFirebaseOptionsN().as(args[$_get](1));
            if (!(arg_initializeAppRequest != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null, expected non-null PigeonFirebaseOptions.", I[58], 72, 18, "arg_initializeAppRequest != null");
            let output = (yield api.initializeApp(dart.nullCheck(arg_appName), dart.nullCheck(arg_initializeAppRequest)));
            return T$.JSArrayOfObjectN().of([output]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeCore", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, null);
        } else {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            let output = (yield api.initializeCore());
            return T$.JSArrayOfObjectN().of([output]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.optionsFromResource", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, null);
        } else {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            let output = (yield api.optionsFromResource());
            return T$.JSArrayOfObjectN().of([output]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
    }
  };
  (test_api.TestFirebaseCoreHostApi.new = function() {
    ;
  }).prototype = test_api.TestFirebaseCoreHostApi.prototype;
  dart.addTypeTests(test_api.TestFirebaseCoreHostApi);
  dart.addTypeCaches(test_api.TestFirebaseCoreHostApi);
  dart.setStaticMethodSignature(test_api.TestFirebaseCoreHostApi, () => ['setup']);
  dart.setLibraryUri(test_api.TestFirebaseCoreHostApi, I[57]);
  dart.setStaticFieldSignature(test_api.TestFirebaseCoreHostApi, () => ['codec']);
  dart.defineLazy(test_api.TestFirebaseCoreHostApi, {
    /*test_api.TestFirebaseCoreHostApi.codec*/get codec() {
      return C[52] || CT.C52;
    }
  }, false);
  test_api.TestFirebaseAppHostApi = class TestFirebaseAppHostApi extends core.Object {
    static setup(api, opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, null);
        } else {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null.", I[58], 133, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null, expected non-null String.", I[58], 137, 18, "arg_appName != null");
            let arg_enabled = T$.boolN().as(args[$_get](1));
            if (!(arg_enabled != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null, expected non-null bool.", I[58], 140, 18, "arg_enabled != null");
            yield api.setAutomaticDataCollectionEnabled(dart.nullCheck(arg_appName), dart.nullCheck(arg_enabled));
            return T$.JSArrayOfObjectN().of([]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, null);
        } else {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null.", I[58], 157, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null, expected non-null String.", I[58], 161, 18, "arg_appName != null");
            let arg_enabled = T$.boolN().as(args[$_get](1));
            if (!(arg_enabled != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null, expected non-null bool.", I[58], 164, 18, "arg_enabled != null");
            yield api.setAutomaticResourceManagementEnabled(dart.nullCheck(arg_appName), dart.nullCheck(arg_enabled));
            return T$.JSArrayOfObjectN().of([]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.delete", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, null);
        } else {
          deprecated['TestBasicMessageChannelExtension|setMockMessageHandler'](T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.delete was null.", I[58], 180, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.delete was null, expected non-null String.", I[58], 184, 18, "arg_appName != null");
            yield api.delete(dart.nullCheck(arg_appName));
            return T$.JSArrayOfObjectN().of([]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
    }
  };
  (test_api.TestFirebaseAppHostApi.new = function() {
    ;
  }).prototype = test_api.TestFirebaseAppHostApi.prototype;
  dart.addTypeTests(test_api.TestFirebaseAppHostApi);
  dart.addTypeCaches(test_api.TestFirebaseAppHostApi);
  dart.setStaticMethodSignature(test_api.TestFirebaseAppHostApi, () => ['setup']);
  dart.setLibraryUri(test_api.TestFirebaseAppHostApi, I[57]);
  dart.setStaticFieldSignature(test_api.TestFirebaseAppHostApi, () => ['codec']);
  dart.defineLazy(test_api.TestFirebaseAppHostApi, {
    /*test_api.TestFirebaseAppHostApi.codec*/get codec() {
      return C[51] || CT.C51;
    }
  }, false);
  app$.App = class App extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_core.FirebaseApp", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new app$.App._fromJsObject(jsObject);
    }
    get name() {
      return this.jsObject.name;
    }
    get options() {
      return this.jsObject.options;
    }
    static getInstance(jsObject) {
      let t81, t80, t79, t78;
      t78 = app$.App._expando;
      t79 = jsObject;
      t80 = t78._get(t79);
      return t80 == null ? (t81 = new app$.App._fromJsObject(jsObject), t78._set(t79, t81), t81) : t80;
    }
    delete() {
      return utils$.handleThenable(dart.void, dart.global.firebase_core.deleteApp(this.jsObject));
    }
  };
  (app$.App._fromJsObject = function(jsObject) {
    app$.App.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = app$.App.prototype;
  dart.addTypeTests(app$.App);
  dart.addTypeCaches(app$.App);
  dart.setMethodSignature(app$.App, () => ({
    __proto__: dart.getMethods(app$.App.__proto__),
    delete: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(app$.App, () => ['getInstance']);
  dart.setGetterSignature(app$.App, () => ({
    __proto__: dart.getGetters(app$.App.__proto__),
    name: core.String,
    options: dart.packageJSType("FirebaseOptions", false)
  }));
  dart.setLibraryUri(app$.App, I[59]);
  dart.setStaticFieldSignature(app$.App, () => ['_expando']);
  dart.defineLazy(app$.App, {
    /*app$.App._expando*/get _expando() {
      return new (T$.ExpandoOfApp()).new();
    }
  }, false);
  types$.PreferredLaunchMode = class PreferredLaunchMode extends core._Enum {
    [_enumToString]() {
      return "PreferredLaunchMode." + this[_name];
    }
  };
  (types$.PreferredLaunchMode.new = function(index, name) {
    types$.PreferredLaunchMode.__proto__.new.call(this, index, name);
    ;
  }).prototype = types$.PreferredLaunchMode.prototype;
  dart.addTypeTests(types$.PreferredLaunchMode);
  dart.addTypeCaches(types$.PreferredLaunchMode);
  dart.setMethodSignature(types$.PreferredLaunchMode, () => ({
    __proto__: dart.getMethods(types$.PreferredLaunchMode.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(types$.PreferredLaunchMode, I[60]);
  dart.setStaticFieldSignature(types$.PreferredLaunchMode, () => ['values', 'platformDefault', 'inAppWebView', 'externalApplication', 'externalNonBrowserApplication']);
  dart.defineLazy(types$.PreferredLaunchMode, {
    /*types$.PreferredLaunchMode.values*/get values() {
      return C[53] || CT.C53;
    },
    /*types$.PreferredLaunchMode.platformDefault*/get platformDefault() {
      return C[54] || CT.C54;
    },
    /*types$.PreferredLaunchMode.inAppWebView*/get inAppWebView() {
      return C[55] || CT.C55;
    },
    /*types$.PreferredLaunchMode.externalApplication*/get externalApplication() {
      return C[56] || CT.C56;
    },
    /*types$.PreferredLaunchMode.externalNonBrowserApplication*/get externalNonBrowserApplication() {
      return C[57] || CT.C57;
    }
  }, false);
  var enableJavaScript$ = dart.privateName(types$, "InAppWebViewConfiguration.enableJavaScript");
  var enableDomStorage$ = dart.privateName(types$, "InAppWebViewConfiguration.enableDomStorage");
  var headers$ = dart.privateName(types$, "InAppWebViewConfiguration.headers");
  types$.InAppWebViewConfiguration = class InAppWebViewConfiguration extends core.Object {
    get enableJavaScript() {
      return this[enableJavaScript$];
    }
    set enableJavaScript(value) {
      super.enableJavaScript = value;
    }
    get enableDomStorage() {
      return this[enableDomStorage$];
    }
    set enableDomStorage(value) {
      super.enableDomStorage = value;
    }
    get headers() {
      return this[headers$];
    }
    set headers(value) {
      super.headers = value;
    }
    static ['_#new#tearOff'](opts) {
      let enableJavaScript = opts && 'enableJavaScript' in opts ? opts.enableJavaScript : true;
      let enableDomStorage = opts && 'enableDomStorage' in opts ? opts.enableDomStorage : true;
      let headers = opts && 'headers' in opts ? opts.headers : C[6] || CT.C6;
      return new types$.InAppWebViewConfiguration.new({enableJavaScript: enableJavaScript, enableDomStorage: enableDomStorage, headers: headers});
    }
  };
  (types$.InAppWebViewConfiguration.new = function(opts) {
    let enableJavaScript = opts && 'enableJavaScript' in opts ? opts.enableJavaScript : true;
    let enableDomStorage = opts && 'enableDomStorage' in opts ? opts.enableDomStorage : true;
    let headers = opts && 'headers' in opts ? opts.headers : C[6] || CT.C6;
    this[enableJavaScript$] = enableJavaScript;
    this[enableDomStorage$] = enableDomStorage;
    this[headers$] = headers;
    ;
  }).prototype = types$.InAppWebViewConfiguration.prototype;
  dart.addTypeTests(types$.InAppWebViewConfiguration);
  dart.addTypeCaches(types$.InAppWebViewConfiguration);
  dart.setLibraryUri(types$.InAppWebViewConfiguration, I[60]);
  dart.setFieldSignature(types$.InAppWebViewConfiguration, () => ({
    __proto__: dart.getFields(types$.InAppWebViewConfiguration.__proto__),
    enableJavaScript: dart.finalFieldType(core.bool),
    enableDomStorage: dart.finalFieldType(core.bool),
    headers: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  var mode$ = dart.privateName(types$, "LaunchOptions.mode");
  var webViewConfiguration$ = dart.privateName(types$, "LaunchOptions.webViewConfiguration");
  var webOnlyWindowName$ = dart.privateName(types$, "LaunchOptions.webOnlyWindowName");
  types$.LaunchOptions = class LaunchOptions extends core.Object {
    get mode() {
      return this[mode$];
    }
    set mode(value) {
      super.mode = value;
    }
    get webViewConfiguration() {
      return this[webViewConfiguration$];
    }
    set webViewConfiguration(value) {
      super.webViewConfiguration = value;
    }
    get webOnlyWindowName() {
      return this[webOnlyWindowName$];
    }
    set webOnlyWindowName(value) {
      super.webOnlyWindowName = value;
    }
    static ['_#new#tearOff'](opts) {
      let mode = opts && 'mode' in opts ? opts.mode : C[54] || CT.C54;
      let webViewConfiguration = opts && 'webViewConfiguration' in opts ? opts.webViewConfiguration : C[58] || CT.C58;
      let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
      return new types$.LaunchOptions.new({mode: mode, webViewConfiguration: webViewConfiguration, webOnlyWindowName: webOnlyWindowName});
    }
  };
  (types$.LaunchOptions.new = function(opts) {
    let mode = opts && 'mode' in opts ? opts.mode : C[54] || CT.C54;
    let webViewConfiguration = opts && 'webViewConfiguration' in opts ? opts.webViewConfiguration : C[58] || CT.C58;
    let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
    this[mode$] = mode;
    this[webViewConfiguration$] = webViewConfiguration;
    this[webOnlyWindowName$] = webOnlyWindowName;
    ;
  }).prototype = types$.LaunchOptions.prototype;
  dart.addTypeTests(types$.LaunchOptions);
  dart.addTypeCaches(types$.LaunchOptions);
  dart.setLibraryUri(types$.LaunchOptions, I[60]);
  dart.setFieldSignature(types$.LaunchOptions, () => ({
    __proto__: dart.getFields(types$.LaunchOptions.__proto__),
    mode: dart.finalFieldType(types$.PreferredLaunchMode),
    webViewConfiguration: dart.finalFieldType(types$.InAppWebViewConfiguration),
    webOnlyWindowName: dart.finalFieldType(dart.nullable(core.String))
  }));
  var currentUser = dart.privateName(method_channel_firebase_auth, "MethodChannelFirebaseAuth.currentUser");
  var languageCode = dart.privateName(method_channel_firebase_auth, "MethodChannelFirebaseAuth.languageCode");
  var _api$ = dart.privateName(method_channel_firebase_auth, "_api");
  var _handleIdTokenChangesListener = dart.privateName(method_channel_firebase_auth, "_handleIdTokenChangesListener");
  var _handleAuthStateChangesListener = dart.privateName(method_channel_firebase_auth, "_handleAuthStateChangesListener");
  var _createBroadcastStream = dart.privateName(method_channel_firebase_auth, "_createBroadcastStream");
  var _ValueWrapper_value = dart.privateName(method_channel_firebase_auth, "_ValueWrapper.value");
  var MethodChannel__binaryMessenger = dart.privateName(platform_channel, "MethodChannel._binaryMessenger");
  var StandardMethodCodec_messageCodec = dart.privateName(message_codecs, "StandardMethodCodec.messageCodec");
  var MethodChannel_codec = dart.privateName(platform_channel, "MethodChannel.codec");
  var MethodChannel_name = dart.privateName(platform_channel, "MethodChannel.name");
  method_channel_firebase_auth.MethodChannelFirebaseAuth = class MethodChannelFirebaseAuth extends platform_interface_firebase_auth.FirebaseAuthPlatform {
    get currentUser() {
      return this[currentUser];
    }
    set currentUser(value) {
      this[currentUser] = value;
    }
    get languageCode() {
      return this[languageCode];
    }
    set languageCode(value) {
      this[languageCode] = value;
    }
    [_createBroadcastStream](T) {
      return async.StreamController$(T).broadcast();
    }
    static get instance() {
      return new method_channel_firebase_auth.MethodChannelFirebaseAuth.__();
    }
    get pigeonDefault() {
      return new messages$46pigeon.PigeonFirebaseApp.new({appName: this.app.name, tenantId: this.tenantId});
    }
    static ['_#_#tearOff']() {
      return new method_channel_firebase_auth.MethodChannelFirebaseAuth.__();
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new method_channel_firebase_auth.MethodChannelFirebaseAuth.new({app: app});
    }
    sendAuthChangesEvent(appName, userPlatform) {
      if (!(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[$_get](appName) != null)) dart.assertFailed(null, I[61], 116, 12, "_userChangesListeners[appName] != null");
      dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[$_get](appName)).add(new (T$._ValueWrapperOfUserPlatform()).new(userPlatform));
    }
    [_handleAuthStateChangesListener](appName, $arguments) {
      return async.async(dart.void, function* _handleAuthStateChangesListener() {
        let streamController = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners[$_get](appName));
        let instance = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[$_get](appName));
        let multiFactorInstance = method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[$_get](appName);
        if (multiFactorInstance == null) {
          multiFactorInstance = new method_channel_multi_factor.MethodChannelMultiFactor.new(instance);
          method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[$_set](appName, multiFactorInstance);
        }
        let userMap = $arguments[$_get]("user");
        if (userMap == null) {
          instance.currentUser = null;
          streamController.add(C[60] || CT.C60);
        } else {
          let user = new method_channel_user.MethodChannelUser.new(instance, multiFactorInstance, messages$46pigeon.PigeonUserDetails.decode(core.Object.as(userMap)));
          instance.currentUser = user;
          streamController.add(new (T$._ValueWrapperOfUserPlatform()).new(instance.currentUser));
        }
      });
    }
    [_handleIdTokenChangesListener](appName, $arguments) {
      return async.async(dart.void, function* _handleIdTokenChangesListener() {
        let idTokenStreamController = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners[$_get](appName));
        let userChangesStreamController = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[$_get](appName));
        let instance = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[$_get](appName));
        let multiFactorInstance = method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[$_get](appName);
        if (multiFactorInstance == null) {
          multiFactorInstance = new method_channel_multi_factor.MethodChannelMultiFactor.new(instance);
          method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[$_set](appName, multiFactorInstance);
        }
        let userMap = $arguments[$_get]("user");
        if (userMap == null) {
          instance.currentUser = null;
          idTokenStreamController.add(C[60] || CT.C60);
          userChangesStreamController.add(C[60] || CT.C60);
        } else {
          let user = new method_channel_user.MethodChannelUser.new(instance, multiFactorInstance, messages$46pigeon.PigeonUserDetails.decode(core.Object.as(userMap)));
          instance.currentUser = user;
          idTokenStreamController.add(new (T$._ValueWrapperOfUserPlatform()).new(user));
          userChangesStreamController.add(new (T$._ValueWrapperOfUserPlatform()).new(user));
        }
      });
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      return method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[$putIfAbsent](app.name, dart.fn(() => new method_channel_firebase_auth.MethodChannelFirebaseAuth.new({app: app}), T$.VoidToMethodChannelFirebaseAuth()));
    }
    setInitialValues(opts) {
      let currentUser = opts && 'currentUser' in opts ? opts.currentUser : null;
      let languageCode = opts && 'languageCode' in opts ? opts.languageCode : null;
      if (currentUser != null) {
        let multiFactor = new method_channel_multi_factor.MethodChannelMultiFactor.new(this);
        this.currentUser = new method_channel_user.MethodChannelUser.new(this, multiFactor, currentUser);
      }
      this.languageCode = languageCode;
      return this;
    }
    useAuthEmulator(host, port) {
      return async.async(dart.void, (function* useAuthEmulator() {
        try {
          yield this[_api$].useEmulator(this.pigeonDefault, host, port);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    applyActionCode(code) {
      return async.async(dart.void, (function* applyActionCode() {
        try {
          yield this[_api$].applyActionCode(this.pigeonDefault, code);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    checkActionCode(code) {
      return async.async(action_code_info.ActionCodeInfo, (function* checkActionCode() {
        try {
          let result = (yield this[_api$].checkActionCode(this.pigeonDefault, code));
          return new action_code_info.ActionCodeInfo.new({operation: result.operation, data: new action_code_info.ActionCodeInfoData.new({email: result.data.email, previousEmail: result.data.previousEmail})});
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    confirmPasswordReset(code, newPassword) {
      return async.async(dart.void, (function* confirmPasswordReset() {
        try {
          yield this[_api$].confirmPasswordReset(this.pigeonDefault, code, newPassword);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    createUserWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* createUserWithEmailAndPassword() {
        try {
          let result = (yield this[_api$].createUserWithEmailAndPassword(this.pigeonDefault, email, password));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInAnonymously() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInAnonymously() {
        try {
          let result = (yield this[_api$].signInAnonymously(this.pigeonDefault));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCredential() {
        try {
          let result = (yield this[_api$].signInWithCredential(this.pigeonDefault, credential.asMap()));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCustomToken(token) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCustomToken() {
        try {
          let result = (yield this[_api$].signInWithCustomToken(this.pigeonDefault, token));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailAndPassword() {
        try {
          let result = (yield this[_api$].signInWithEmailAndPassword(this.pigeonDefault, email, password));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailLink(email, emailLink) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailLink() {
        try {
          let result = (yield this[_api$].signInWithEmailLink(this.pigeonDefault, email, emailLink));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithProvider() {
        try {
          let convertedProvider = convert_auth_provider.convertToOAuthProvider(provider);
          let result = (yield this[_api$].signInWithProvider(this.pigeonDefault, new messages$46pigeon.PigeonSignInProvider.new({providerId: convertedProvider.providerId, scopes: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.scopes : null, customParameters: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.parameters : null})));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithPopup() is only supported on web based platforms"));
    }
    signInWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithRedirect() is only supported on web based platforms"));
    }
    signOut() {
      return async.async(dart.void, (function* signOut() {
        try {
          yield this[_api$].signOut(this.pigeonDefault);
          this.currentUser = null;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return async.async(T$.ListOfString(), (function* fetchSignInMethodsForEmail() {
        try {
          let data = (yield this[_api$].fetchSignInMethodsForEmail(this.pigeonDefault, email));
          return iterable_extensions['IterableNullableExtension|whereNotNull'](core.String, data)[$toList]();
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    authStateChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* authStateChanges(stream) {
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners[$_get](this.app.name)).stream.map(T$.UserPlatformN(), dart.fn(event => event.value, T$._ValueWrapperOfUserPlatformToUserPlatformN())))) return;
        yield;
      }).bind(this)).stream;
    }
    idTokenChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* idTokenChanges(stream) {
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners[$_get](this.app.name)).stream.map(T$.UserPlatformN(), dart.fn(event => event.value, T$._ValueWrapperOfUserPlatformToUserPlatformN())))) return;
        yield;
      }).bind(this)).stream;
    }
    userChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* userChanges(stream) {
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[$_get](this.app.name)).stream.map(T$.UserPlatformN(), dart.fn(event => event.value, T$._ValueWrapperOfUserPlatformToUserPlatformN())))) return;
        yield;
      }).bind(this)).stream;
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      return async.async(dart.void, (function* sendPasswordResetEmail() {
        try {
          yield this[_api$].sendPasswordResetEmail(this.pigeonDefault, email, actionCodeSettings == null ? null : new messages$46pigeon.PigeonActionCodeSettings.new({url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, iOSBundleId: actionCodeSettings.iOSBundleId, androidPackageName: actionCodeSettings.androidPackageName, androidInstallApp: actionCodeSettings.androidInstallApp, androidMinimumVersion: actionCodeSettings.androidMinimumVersion, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendSignInLinkToEmail(email, actionCodeSettings) {
      return async.async(dart.void, (function* sendSignInLinkToEmail() {
        try {
          yield this[_api$].sendSignInLinkToEmail(this.pigeonDefault, email, new messages$46pigeon.PigeonActionCodeSettings.new({url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, iOSBundleId: actionCodeSettings.iOSBundleId, androidPackageName: actionCodeSettings.androidPackageName, androidInstallApp: actionCodeSettings.androidInstallApp, androidMinimumVersion: actionCodeSettings.androidMinimumVersion, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setLanguageCode(languageCode) {
      return async.async(dart.void, (function* setLanguageCode() {
        try {
          let newLanguageCode = (yield this[_api$].setLanguageCode(this.pigeonDefault, languageCode));
          this.languageCode = newLanguageCode;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : false;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      return async.async(dart.void, (function* setSettings() {
        if (phoneNumber != null && smsCode == null || phoneNumber == null && smsCode != null) {
          dart.throw(new core.ArgumentError.new("The [smsCode] and the [phoneNumber] must both be either 'null' or a 'String''."));
        }
        try {
          yield this[_api$].setSettings(this.pigeonDefault, new messages$46pigeon.PigeonFirebaseAuthSettings.new({appVerificationDisabledForTesting: appVerificationDisabledForTesting, userAccessGroup: userAccessGroup, phoneNumber: phoneNumber, smsCode: smsCode, forceRecaptchaFlow: forceRecaptchaFlow}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setPersistence(persistence) {
      dart.throw(new core.UnimplementedError.new("setPersistence() is only supported on web based platforms"));
    }
    verifyPasswordResetCode(code) {
      return async.async(core.String, (function* verifyPasswordResetCode() {
        try {
          let userEmail = (yield this[_api$].verifyPasswordResetCode(this.pigeonDefault, code));
          return userEmail;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[2] || CT.C2;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let multiFactorSession = opts && 'multiFactorSession' in opts ? opts.multiFactorSession : null;
      return async.async(dart.void, (function* verifyPhoneNumber() {
        let t98, t98$;
        if (platform.defaultTargetPlatform === platform.TargetPlatform.macOS) {
          dart.throw(new core.UnimplementedError.new("verifyPhoneNumber() is not available on MacOS platforms."));
        }
        try {
          let eventChannelName = (yield this[_api$].verifyPhoneNumber(this.pigeonDefault, new messages$46pigeon.PigeonVerifyPhoneNumberRequest.new({phoneNumber: phoneNumber, multiFactorInfoId: (t98 = multiFactorInfo, t98 == null ? null : t98.uid), timeout: timeout.inMilliseconds, forceResendingToken: forceResendingToken, autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting, multiFactorSessionId: (t98$ = multiFactorSession, t98$ == null ? null : t98$.id)})));
          exception$0['EventChannelExtension|receiveGuardedBroadcastStream'](new platform_channel.EventChannel.new(eventChannelName), {onError: C[59] || CT.C59}).listen(dart.fn($arguments => {
            let t98, t98$, t99, t98$0, t98$1, t99$, t98$2, t98$3;
            let name = dart.dsend($arguments, '_get', ["name"]);
            if (dart.equals(name, "Auth#phoneVerificationCompleted")) {
              let token = core.int.as(dart.dsend($arguments, '_get', ["token"]));
              let smsCode = T$.StringN().as(dart.dsend($arguments, '_get', ["smsCode"]));
              let phoneAuthCredential = phone_auth.PhoneAuthProvider.credentialFromToken(token, {smsCode: smsCode});
              verificationCompleted(phoneAuthCredential);
            } else if (dart.equals(name, "Auth#phoneVerificationFailed")) {
              let error = T$.MapN().as(dart.dsend($arguments, '_get', ["error"]));
              let details = T$.MapN().as((t98 = error, t98 == null ? null : t98[$_get]("details")));
              let exception = new firebase_auth_exception.FirebaseAuthException.new({message: T$.StringN().as((t98$0 = (t98$ = details, t98$ == null ? null : t98$[$_get]("message")), t98$0 == null ? (t99 = error, t99 == null ? null : t99[$_get]("message")) : t98$0)), code: core.String.as((t98$3 = (t98$2 = (t98$1 = details, t98$1 == null ? null : t98$1[$_get]("code")), t98$2 == null ? (t99$ = error, t99$ == null ? null : t99$[$_get]("code")) : t98$2), t98$3 == null ? "unknown" : t98$3))});
              verificationFailed(exception);
            } else if (dart.equals(name, "Auth#phoneCodeSent")) {
              let verificationId = core.String.as(dart.dsend($arguments, '_get', ["verificationId"]));
              let forceResendingToken = T$.intN().as(dart.dsend($arguments, '_get', ["forceResendingToken"]));
              codeSent(verificationId, forceResendingToken);
            } else if (dart.equals(name, "Auth#phoneCodeAutoRetrievalTimeout")) {
              let verificationId = core.String.as(dart.dsend($arguments, '_get', ["verificationId"]));
              codeAutoRetrievalTimeout(verificationId);
            }
          }, T$.dynamicTovoid()));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (method_channel_firebase_auth.MethodChannelFirebaseAuth.__ = function() {
    this[_api$] = new messages$46pigeon.FirebaseAuthHostApi.new();
    this[currentUser] = null;
    this[languageCode] = null;
    method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__.new.call(this, {appInstance: null});
    ;
  }).prototype = method_channel_firebase_auth.MethodChannelFirebaseAuth.prototype;
  (method_channel_firebase_auth.MethodChannelFirebaseAuth.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    this[_api$] = new messages$46pigeon.FirebaseAuthHostApi.new();
    this[currentUser] = null;
    this[languageCode] = null;
    method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__.new.call(this, {appInstance: app});
    this[_api$].registerIdTokenListener(this.pigeonDefault).then(core.Null, dart.fn(channelName => {
      let events = new platform_channel.EventChannel.new(channelName, method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.codec);
      exception$0['EventChannelExtension|receiveGuardedBroadcastStream'](events, {onError: C[59] || CT.C59}).listen(dart.fn($arguments => {
        this[_handleIdTokenChangesListener](app.name, core.Map.as($arguments));
      }, T$.dynamicTovoid()));
    }, T$.StringToNull()));
    this[_api$].registerAuthStateListener(this.pigeonDefault).then(core.Null, dart.fn(channelName => {
      let events = new platform_channel.EventChannel.new(channelName, method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.codec);
      exception$0['EventChannelExtension|receiveGuardedBroadcastStream'](events, {onError: C[59] || CT.C59}).listen(dart.fn($arguments => {
        this[_handleAuthStateChangesListener](app.name, core.Map.as($arguments));
      }, T$.dynamicTovoid()));
    }, T$.StringToNull()));
    method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners[$_set](app.name, this[_createBroadcastStream](T$._ValueWrapperOfUserPlatform()));
    method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners[$_set](app.name, this[_createBroadcastStream](T$._ValueWrapperOfUserPlatform()));
    method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[$_set](app.name, this[_createBroadcastStream](T$._ValueWrapperOfUserPlatform()));
  }).prototype = method_channel_firebase_auth.MethodChannelFirebaseAuth.prototype;
  dart.addTypeTests(method_channel_firebase_auth.MethodChannelFirebaseAuth);
  dart.addTypeCaches(method_channel_firebase_auth.MethodChannelFirebaseAuth);
  dart.setMethodSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ({
    __proto__: dart.getMethods(method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__),
    [_createBroadcastStream]: dart.gFnType(T => [async.StreamController$(T), []], T => [dart.nullable(core.Object)]),
    [_handleAuthStateChangesListener]: dart.fnType(async.Future$(dart.void), [core.String, core.Map]),
    [_handleIdTokenChangesListener]: dart.fnType(async.Future$(dart.void), [core.String, core.Map]),
    setInitialValues: dart.fnType(method_channel_firebase_auth.MethodChannelFirebaseAuth, [], {currentUser: dart.nullable(messages$46pigeon.PigeonUserDetails), languageCode: dart.nullable(core.String)}, {}),
    verifyPhoneNumber: dart.fnType(async.Future$(dart.void), [], {autoRetrievedSmsCodeForTesting: dart.nullable(core.String), forceResendingToken: dart.nullable(core.int), multiFactorInfo: dart.nullable(platform_interface_multi_factor.MultiFactorInfo), multiFactorSession: dart.nullable(platform_interface_multi_factor.MultiFactorSession), phoneNumber: dart.nullable(core.String), timeout: core.Duration}, {codeAutoRetrievalTimeout: dart.fnType(dart.void, [core.String]), codeSent: dart.fnType(dart.void, [core.String, dart.nullable(core.int)]), verificationCompleted: dart.fnType(dart.void, [phone_auth.PhoneAuthCredential]), verificationFailed: dart.fnType(dart.void, [firebase_auth_exception.FirebaseAuthException])})
  }));
  dart.setGetterSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ({
    __proto__: dart.getGetters(method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__),
    pigeonDefault: messages$46pigeon.PigeonFirebaseApp
  }));
  dart.setStaticGetterSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ['instance']);
  dart.setLibraryUri(method_channel_firebase_auth.MethodChannelFirebaseAuth, I[62]);
  dart.setFieldSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ({
    __proto__: dart.getFields(method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__),
    [_api$]: dart.finalFieldType(messages$46pigeon.FirebaseAuthHostApi),
    currentUser: dart.fieldType(dart.nullable(platform_interface_user.UserPlatform)),
    languageCode: dart.fieldType(dart.nullable(core.String))
  }));
  dart.setStaticFieldSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ['channel', 'methodChannelFirebaseAuthInstances', '_multiFactorInstances', '_authStateChangesListeners', '_idTokenChangesListeners', '_userChangesListeners']);
  dart.defineLazy(method_channel_firebase_auth.MethodChannelFirebaseAuth, {
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth.channel*/get channel() {
      return C[61] || CT.C61;
    },
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances*/get methodChannelFirebaseAuthInstances() {
      return new (T$.IdentityMapOfString$MethodChannelFirebaseAuth()).new();
    },
    set methodChannelFirebaseAuthInstances(value) {},
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances*/get _multiFactorInstances() {
      return new (T$.IdentityMapOfString$MethodChannelMultiFactor()).new();
    },
    set _multiFactorInstances(value) {},
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners*/get _authStateChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform()).new();
    },
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners*/get _idTokenChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform()).new();
    },
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners*/get _userChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform()).new();
    }
  }, false);
  const _is__ValueWrapper_default = Symbol('_is__ValueWrapper_default');
  method_channel_firebase_auth._ValueWrapper$ = dart.generic(T => {
    const value$ = _ValueWrapper_value;
    class _ValueWrapper extends core.Object {
      get value() {
        return this[value$];
      }
      set value(value) {
        super.value = value;
      }
      static ['_#new#tearOff'](T, value) {
        return new (method_channel_firebase_auth._ValueWrapper$(T)).new(value);
      }
      static ['_#absent#tearOff'](T) {
        return new (method_channel_firebase_auth._ValueWrapper$(T)).absent();
      }
    }
    (_ValueWrapper.new = function(value) {
      this[value$] = value;
      ;
    }).prototype = _ValueWrapper.prototype;
    (_ValueWrapper.absent = function() {
      this[value$] = null;
      ;
    }).prototype = _ValueWrapper.prototype;
    dart.addTypeTests(_ValueWrapper);
    _ValueWrapper.prototype[_is__ValueWrapper_default] = true;
    dart.addTypeCaches(_ValueWrapper);
    dart.setLibraryUri(_ValueWrapper, I[62]);
    dart.setFieldSignature(_ValueWrapper, () => ({
      __proto__: dart.getFields(_ValueWrapper.__proto__),
      value: dart.finalFieldType(dart.nullable(T))
    }));
    return _ValueWrapper;
  });
  method_channel_firebase_auth._ValueWrapper = method_channel_firebase_auth._ValueWrapper$();
  dart.addTypeTests(method_channel_firebase_auth._ValueWrapper, _is__ValueWrapper_default);
  var _api$0 = dart.privateName(method_channel_multi_factor, "_api");
  method_channel_multi_factor.MethodChannelMultiFactor = class MethodChannelMultiFactor extends platform_interface_multi_factor.MultiFactorPlatform {
    static ['_#new#tearOff'](auth) {
      return new method_channel_multi_factor.MethodChannelMultiFactor.new(auth);
    }
    get pigeonDefault() {
      return new messages$46pigeon.PigeonFirebaseApp.new({appName: this.auth.app.name, tenantId: this.auth.tenantId});
    }
    getSession() {
      return async.async(platform_interface_multi_factor.MultiFactorSession, (function* getSession() {
        try {
          let pigeonObject = (yield this[_api$0].getSession(this.pigeonDefault));
          return new platform_interface_multi_factor.MultiFactorSession.new(pigeonObject.id);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    enroll(assertion, opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      return async.async(dart.void, (function* enroll() {
        let _assertion = method_channel_multi_factor.MultiFactorAssertion.as(assertion);
        if (phone_auth.PhoneAuthCredential.is(_assertion.credential)) {
          let credential = phone_auth.PhoneAuthCredential.as(_assertion.credential);
          let verificationId = credential.verificationId;
          let verificationCode = credential.smsCode;
          if (verificationCode == null) {
            dart.throw(new core.ArgumentError.new("verificationCode must not be null"));
          }
          if (verificationId == null) {
            dart.throw(new core.ArgumentError.new("verificationId must not be null"));
          }
          try {
            yield this[_api$0].enrollPhone(this.pigeonDefault, new messages$46pigeon.PigeonPhoneMultiFactorAssertion.new({verificationId: verificationId, verificationCode: verificationCode}), displayName);
          } catch (e$) {
            let e = dart.getThrown(e$);
            let stack = dart.stackTrace(e$);
            if (core.Object.is(e)) {
              exception$.convertPlatformException(e, stack);
            } else
              throw e$;
          }
        } else {
          dart.throw(new core.UnimplementedError.new("Credential type " + dart.str(_assertion.credential) + " is not supported yet"));
        }
      }).bind(this));
    }
    unenroll(opts) {
      let factorUid = opts && 'factorUid' in opts ? opts.factorUid : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      return async.async(dart.void, (function* unenroll() {
        let t102, t101;
        let uidToUnenroll = (t101 = factorUid, t101 == null ? (t102 = multiFactorInfo, t102 == null ? null : t102.uid) : t101);
        if (uidToUnenroll == null) {
          dart.throw(new core.ArgumentError.new("Either factorUid or multiFactorInfo must not be null"));
        }
        try {
          yield this[_api$0].unenroll(this.pigeonDefault, uidToUnenroll);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getEnrolledFactors() {
      return async.async(T$.ListOfMultiFactorInfo(), (function* getEnrolledFactors() {
        try {
          let data = (yield this[_api$0].getEnrolledFactors(this.pigeonDefault));
          return pigeon_helper.multiFactorInfoPigeonToObject(data);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (method_channel_multi_factor.MethodChannelMultiFactor.new = function(auth) {
    this[_api$0] = new messages$46pigeon.MultiFactorUserHostApi.new();
    method_channel_multi_factor.MethodChannelMultiFactor.__proto__.new.call(this, auth);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelMultiFactor.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelMultiFactor);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelMultiFactor);
  dart.setGetterSignature(method_channel_multi_factor.MethodChannelMultiFactor, () => ({
    __proto__: dart.getGetters(method_channel_multi_factor.MethodChannelMultiFactor.__proto__),
    pigeonDefault: messages$46pigeon.PigeonFirebaseApp
  }));
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelMultiFactor, I[63]);
  dart.setFieldSignature(method_channel_multi_factor.MethodChannelMultiFactor, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MethodChannelMultiFactor.__proto__),
    [_api$0]: dart.finalFieldType(messages$46pigeon.MultiFactorUserHostApi)
  }));
  var _resolverId = dart.privateName(method_channel_multi_factor, "_resolverId");
  var _auth = dart.privateName(method_channel_multi_factor, "_auth");
  method_channel_multi_factor.MethodChannelMultiFactorResolver = class MethodChannelMultiFactorResolver extends platform_interface_multi_factor.MultiFactorResolverPlatform {
    static ['_#new#tearOff'](hints, session, resolverId, auth) {
      return new method_channel_multi_factor.MethodChannelMultiFactorResolver.new(hints, session, resolverId, auth);
    }
    resolveSignIn(assertion) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* resolveSignIn() {
        let _assertion = method_channel_multi_factor.MultiFactorAssertion.as(assertion);
        if (phone_auth.PhoneAuthCredential.is(_assertion.credential)) {
          let credential = phone_auth.PhoneAuthCredential.as(_assertion.credential);
          let verificationId = credential.verificationId;
          let verificationCode = credential.smsCode;
          if (verificationCode == null) {
            dart.throw(new core.ArgumentError.new("verificationCode must not be null"));
          }
          if (verificationId == null) {
            dart.throw(new core.ArgumentError.new("verificationId must not be null"));
          }
          try {
            let result = (yield this[_api$0].resolveSignIn(this[_resolverId], new messages$46pigeon.PigeonPhoneMultiFactorAssertion.new({verificationId: verificationId, verificationCode: verificationCode})));
            let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this[_auth], result);
            return userCredential;
          } catch (e$) {
            let e = dart.getThrown(e$);
            let stack = dart.stackTrace(e$);
            if (core.Object.is(e)) {
              exception$.convertPlatformException(e, stack);
            } else
              throw e$;
          }
        } else {
          dart.throw(new core.UnimplementedError.new("Credential type " + dart.str(_assertion.credential) + " is not supported yet"));
        }
      }).bind(this));
    }
  };
  (method_channel_multi_factor.MethodChannelMultiFactorResolver.new = function(hints, session, resolverId, auth) {
    this[_api$0] = new messages$46pigeon.MultiFactoResolverHostApi.new();
    this[_resolverId] = resolverId;
    this[_auth] = auth;
    method_channel_multi_factor.MethodChannelMultiFactorResolver.__proto__.new.call(this, hints, session);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelMultiFactorResolver.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelMultiFactorResolver);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelMultiFactorResolver);
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelMultiFactorResolver, I[63]);
  dart.setFieldSignature(method_channel_multi_factor.MethodChannelMultiFactorResolver, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MethodChannelMultiFactorResolver.__proto__),
    [_resolverId]: dart.finalFieldType(core.String),
    [_auth]: dart.finalFieldType(method_channel_firebase_auth.MethodChannelFirebaseAuth),
    [_api$0]: dart.finalFieldType(messages$46pigeon.MultiFactoResolverHostApi)
  }));
  var credential$2 = dart.privateName(method_channel_multi_factor, "MultiFactorAssertion.credential");
  method_channel_multi_factor.MultiFactorAssertion = class MultiFactorAssertion extends platform_interface_multi_factor.MultiFactorAssertionPlatform {
    get credential() {
      return this[credential$2];
    }
    set credential(value) {
      super.credential = value;
    }
    static ['_#new#tearOff'](credential) {
      return new method_channel_multi_factor.MultiFactorAssertion.new(credential);
    }
  };
  (method_channel_multi_factor.MultiFactorAssertion.new = function(credential) {
    this[credential$2] = credential;
    method_channel_multi_factor.MultiFactorAssertion.__proto__.new.call(this);
    ;
  }).prototype = method_channel_multi_factor.MultiFactorAssertion.prototype;
  dart.addTypeTests(method_channel_multi_factor.MultiFactorAssertion);
  dart.addTypeCaches(method_channel_multi_factor.MultiFactorAssertion);
  dart.setLibraryUri(method_channel_multi_factor.MultiFactorAssertion, I[63]);
  dart.setFieldSignature(method_channel_multi_factor.MultiFactorAssertion, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MultiFactorAssertion.__proto__),
    credential: dart.finalFieldType(auth_credential.AuthCredential)
  }));
  method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator = class MethodChannelPhoneMultiFactorGenerator extends platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform {
    getAssertion(credential) {
      return new method_channel_multi_factor.MultiFactorAssertion.new(credential);
    }
    static ['_#new#tearOff']() {
      return new method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.new();
    }
  };
  (method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.new = function() {
    method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.__proto__.new.call(this);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator);
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator, I[63]);
  var scheme$ = dart.privateName(authentication_challenge, "AuthenticationChallenge.scheme");
  var parameters$ = dart.privateName(authentication_challenge, "AuthenticationChallenge.parameters");
  authentication_challenge.AuthenticationChallenge = class AuthenticationChallenge extends core.Object {
    get scheme() {
      return this[scheme$];
    }
    set scheme(value) {
      super.scheme = value;
    }
    get parameters() {
      return this[parameters$];
    }
    set parameters(value) {
      super.parameters = value;
    }
    static parseHeader(header) {
      return utils$0.wrapFormatException(T$.ListOfAuthenticationChallenge(), "authentication header", header, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(header);
        scanner.scan(scan.whitespace);
        let challenges = scan.parseList(authentication_challenge.AuthenticationChallenge, scanner, dart.fn(() => {
          let scheme = authentication_challenge.AuthenticationChallenge._scanScheme(scanner, {whitespaceName: "\" \" or \"=\""});
          let params = new (T$.IdentityMapOfString$String()).new();
          while (scanner.scan(",")) {
            scanner.scan(scan.whitespace);
          }
          authentication_challenge.AuthenticationChallenge._scanAuthParam(scanner, params);
          let beforeComma = scanner.position;
          while (scanner.scan(",")) {
            scanner.scan(scan.whitespace);
            if (scanner.matches(",") || scanner.isDone) continue;
            scanner.expect(scan.token, {name: "a token"});
            let name = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
            scanner.scan(scan.whitespace);
            if (!scanner.scan("=")) {
              scanner.position = beforeComma;
              break;
            }
            scanner.scan(scan.whitespace);
            if (scanner.scan(scan.token)) {
              params[$_set](name, dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)));
            } else {
              params[$_set](name, scan.expectQuotedString(scanner, {name: "a token or a quoted string"}));
            }
            scanner.scan(scan.whitespace);
            beforeComma = scanner.position;
          }
          return new authentication_challenge.AuthenticationChallenge.new(scheme, params);
        }, T$.VoidToAuthenticationChallenge()));
        scanner.expectDone();
        return challenges;
      }, T$.VoidToListOfAuthenticationChallenge()));
    }
    static parse(challenge) {
      return utils$0.wrapFormatException(authentication_challenge.AuthenticationChallenge, "authentication challenge", challenge, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(challenge);
        scanner.scan(scan.whitespace);
        let scheme = authentication_challenge.AuthenticationChallenge._scanScheme(scanner);
        let params = new (T$.IdentityMapOfString$String()).new();
        scan.parseList(dart.void, scanner, dart.fn(() => authentication_challenge.AuthenticationChallenge._scanAuthParam(scanner, params), T$.VoidTovoid()));
        scanner.expectDone();
        return new authentication_challenge.AuthenticationChallenge.new(scheme, params);
      }, T$.VoidToAuthenticationChallenge()));
    }
    static ['_#parse#tearOff'](challenge) {
      return authentication_challenge.AuthenticationChallenge.parse(challenge);
    }
    static _scanScheme(scanner, opts) {
      let whitespaceName = opts && 'whitespaceName' in opts ? opts.whitespaceName : null;
      scanner.expect(scan.token, {name: "a token"});
      let scheme = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))[$toLowerCase]();
      scanner.scan(scan.whitespace);
      if (scanner.lastMatch == null || !dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))[$contains](" ")) {
        scanner.expect(" ", {name: whitespaceName});
      }
      return scheme;
    }
    static _scanAuthParam(scanner, params) {
      scanner.expect(scan.token, {name: "a token"});
      let name = dart.nullCheck(scanner.lastMatch)._get(0);
      scanner.scan(scan.whitespace);
      scanner.expect("=");
      scanner.scan(scan.whitespace);
      if (scanner.scan(scan.token)) {
        params[$_set](name, dart.nullCheck(scanner.lastMatch)._get(0));
      } else {
        params[$_set](name, scan.expectQuotedString(scanner, {name: "a token or a quoted string"}));
      }
      scanner.scan(scan.whitespace);
    }
    static ['_#new#tearOff'](scheme, parameters) {
      return new authentication_challenge.AuthenticationChallenge.new(scheme, parameters);
    }
  };
  (authentication_challenge.AuthenticationChallenge.new = function(scheme, parameters) {
    this[scheme$] = scheme;
    this[parameters$] = new (T$.UnmodifiableMapViewOfString$String()).new(new (T$.CaseInsensitiveMapOfString()).from(parameters));
    ;
  }).prototype = authentication_challenge.AuthenticationChallenge.prototype;
  dart.addTypeTests(authentication_challenge.AuthenticationChallenge);
  dart.addTypeCaches(authentication_challenge.AuthenticationChallenge);
  dart.setStaticMethodSignature(authentication_challenge.AuthenticationChallenge, () => ['parseHeader', 'parse', '_scanScheme', '_scanAuthParam']);
  dart.setLibraryUri(authentication_challenge.AuthenticationChallenge, I[64]);
  dart.setFieldSignature(authentication_challenge.AuthenticationChallenge, () => ({
    __proto__: dart.getFields(authentication_challenge.AuthenticationChallenge.__proto__),
    scheme: dart.finalFieldType(core.String),
    parameters: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  const _is_CaseInsensitiveMap_default = Symbol('_is_CaseInsensitiveMap_default');
  case_insensitive_map.CaseInsensitiveMap$ = dart.generic(V => {
    class CaseInsensitiveMap extends canonicalized_map.CanonicalizedMap$(core.String, core.String, V) {
      static ['_#new#tearOff'](V) {
        return new (case_insensitive_map.CaseInsensitiveMap$(V)).new();
      }
      static ['_#from#tearOff'](V, other) {
        return new (case_insensitive_map.CaseInsensitiveMap$(V)).from(other);
      }
    }
    (CaseInsensitiveMap.new = function() {
      CaseInsensitiveMap.__proto__.new.call(this, dart.fn(key => key[$toLowerCase](), T$.StringToString()));
      ;
    }).prototype = CaseInsensitiveMap.prototype;
    (CaseInsensitiveMap.from = function(other) {
      CaseInsensitiveMap.__proto__.from.call(this, other, dart.fn(key => key[$toLowerCase](), T$.StringToString()));
      ;
    }).prototype = CaseInsensitiveMap.prototype;
    dart.addTypeTests(CaseInsensitiveMap);
    CaseInsensitiveMap.prototype[_is_CaseInsensitiveMap_default] = true;
    dart.addTypeCaches(CaseInsensitiveMap);
    dart.setLibraryUri(CaseInsensitiveMap, I[65]);
    return CaseInsensitiveMap;
  });
  case_insensitive_map.CaseInsensitiveMap = case_insensitive_map.CaseInsensitiveMap$();
  dart.addTypeTests(case_insensitive_map.CaseInsensitiveMap, _is_CaseInsensitiveMap_default);
  chunked_coding.ChunkedCodingCodec = class ChunkedCodingCodec extends convert.Codec$(core.List$(core.int), core.List$(core.int)) {
    get encoder() {
      return encoder.chunkedCodingEncoder;
    }
    get decoder() {
      return decoder.chunkedCodingDecoder;
    }
    static ['_#_#tearOff']() {
      return new chunked_coding.ChunkedCodingCodec.__();
    }
  };
  (chunked_coding.ChunkedCodingCodec.__ = function() {
    chunked_coding.ChunkedCodingCodec.__proto__.new.call(this);
    ;
  }).prototype = chunked_coding.ChunkedCodingCodec.prototype;
  dart.addTypeTests(chunked_coding.ChunkedCodingCodec);
  dart.addTypeCaches(chunked_coding.ChunkedCodingCodec);
  dart.setGetterSignature(chunked_coding.ChunkedCodingCodec, () => ({
    __proto__: dart.getGetters(chunked_coding.ChunkedCodingCodec.__proto__),
    encoder: encoder.ChunkedCodingEncoder,
    decoder: decoder.ChunkedCodingDecoder
  }));
  dart.setLibraryUri(chunked_coding.ChunkedCodingCodec, I[66]);
  dart.defineLazy(chunked_coding, {
    /*chunked_coding.chunkedCoding*/get chunkedCoding() {
      return C[63] || CT.C63;
    }
  }, false);
  http_date.formatHttpDate = function formatHttpDate(date) {
    let t104;
    date = date.toUtc();
    let buffer = (t104 = new core.StringBuffer.new(), (() => {
      t104.write(http_date._weekdays[$_get](date.weekday - 1));
      t104.write(", ");
      t104.write(date.day <= 9 ? "0" : "");
      t104.write(date.day[$toString]());
      t104.write(" ");
      t104.write(http_date._months[$_get](date.month - 1));
      t104.write(" ");
      t104.write(date.year[$toString]());
      t104.write(date.hour <= 9 ? " 0" : " ");
      t104.write(date.hour[$toString]());
      t104.write(date.minute <= 9 ? ":0" : ":");
      t104.write(date.minute[$toString]());
      t104.write(date.second <= 9 ? ":0" : ":");
      t104.write(date.second[$toString]());
      t104.write(" GMT");
      return t104;
    })());
    return buffer.toString();
  };
  http_date.parseHttpDate = function parseHttpDate(date) {
    return utils$0.wrapFormatException(core.DateTime, "HTTP date", date, dart.fn(() => {
      let scanner = new string_scanner.StringScanner.new(date);
      if (scanner.scan(http_date._longWeekdayRegExp)) {
        scanner.expect(", ");
        let day = http_date._parseInt(scanner, 2);
        scanner.expect("-");
        let month = http_date._parseMonth(scanner);
        scanner.expect("-");
        let year = 1900 + http_date._parseInt(scanner, 2);
        scanner.expect(" ");
        let time = http_date._parseTime(scanner);
        scanner.expect(" GMT");
        scanner.expectDone();
        return http_date._makeDateTime(year, month, day, time);
      }
      scanner.expect(http_date._shortWeekdayRegExp);
      if (scanner.scan(", ")) {
        let day = http_date._parseInt(scanner, 2);
        scanner.expect(" ");
        let month = http_date._parseMonth(scanner);
        scanner.expect(" ");
        let year = http_date._parseInt(scanner, 4);
        scanner.expect(" ");
        let time = http_date._parseTime(scanner);
        scanner.expect(" GMT");
        scanner.expectDone();
        return http_date._makeDateTime(year, month, day, time);
      }
      scanner.expect(" ");
      let month = http_date._parseMonth(scanner);
      scanner.expect(" ");
      let day = scanner.scan(" ") ? http_date._parseInt(scanner, 1) : http_date._parseInt(scanner, 2);
      scanner.expect(" ");
      let time = http_date._parseTime(scanner);
      scanner.expect(" ");
      let year = http_date._parseInt(scanner, 4);
      scanner.expectDone();
      return http_date._makeDateTime(year, month, day, time);
    }, T$.VoidToDateTime()));
  };
  http_date._parseMonth = function _parseMonth(scanner) {
    scanner.expect(http_date._monthRegExp);
    return http_date._months[$indexOf](dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))) + 1;
  };
  http_date._parseInt = function _parseInt(scanner, digits) {
    scanner.expect(http_date._digitRegExp);
    if (dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)).length !== digits) {
      scanner.error("expected a " + dart.str(digits) + "-digit number.");
    }
    return core.int.parse(dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)));
  };
  http_date._parseTime = function _parseTime(scanner) {
    let hours = http_date._parseInt(scanner, 2);
    if (hours >= 24) scanner.error("hours may not be greater than 24.");
    scanner.expect(":");
    let minutes = http_date._parseInt(scanner, 2);
    if (minutes >= 60) scanner.error("minutes may not be greater than 60.");
    scanner.expect(":");
    let seconds = http_date._parseInt(scanner, 2);
    if (seconds >= 60) scanner.error("seconds may not be greater than 60.");
    return new core.DateTime.new(1, 1, 1, hours, minutes, seconds);
  };
  http_date._makeDateTime = function _makeDateTime(year, month, day, time) {
    let dateTime = new core.DateTime.utc(year, month, day, time.hour, time.minute, time.second);
    if (dateTime.month !== month) {
      dart.throw(new core.FormatException.new("invalid day '" + dart.str(day) + "' for month '" + dart.str(month) + "'."));
    }
    return dateTime;
  };
  dart.defineLazy(http_date, {
    /*http_date._weekdays*/get _weekdays() {
      return C[64] || CT.C64;
    },
    /*http_date._months*/get _months() {
      return C[65] || CT.C65;
    },
    /*http_date._shortWeekdayRegExp*/get _shortWeekdayRegExp() {
      return core.RegExp.new("Mon|Tue|Wed|Thu|Fri|Sat|Sun");
    },
    /*http_date._longWeekdayRegExp*/get _longWeekdayRegExp() {
      return core.RegExp.new("Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday");
    },
    /*http_date._monthRegExp*/get _monthRegExp() {
      return core.RegExp.new("Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec");
    },
    /*http_date._digitRegExp*/get _digitRegExp() {
      return core.RegExp.new("\\d+");
    }
  }, false);
  var type$ = dart.privateName(media_type, "MediaType.type");
  var subtype$ = dart.privateName(media_type, "MediaType.subtype");
  var parameters$0 = dart.privateName(media_type, "MediaType.parameters");
  media_type.MediaType = class MediaType extends core.Object {
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    get subtype() {
      return this[subtype$];
    }
    set subtype(value) {
      super.subtype = value;
    }
    get parameters() {
      return this[parameters$0];
    }
    set parameters(value) {
      super.parameters = value;
    }
    get mimeType() {
      return this.type + "/" + this.subtype;
    }
    static parse(mediaType) {
      return utils$0.wrapFormatException(media_type.MediaType, "media type", mediaType, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(mediaType);
        scanner.scan(scan.whitespace);
        scanner.expect(scan.token);
        let type = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
        scanner.expect("/");
        scanner.expect(scan.token);
        let subtype = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
        scanner.scan(scan.whitespace);
        let parameters = new (T$.IdentityMapOfString$String()).new();
        while (scanner.scan(";")) {
          scanner.scan(scan.whitespace);
          scanner.expect(scan.token);
          let attribute = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
          scanner.expect("=");
          let value = null;
          if (scanner.scan(scan.token)) {
            value = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
          } else {
            value = scan.expectQuotedString(scanner);
          }
          scanner.scan(scan.whitespace);
          parameters[$_set](attribute, value);
        }
        scanner.expectDone();
        return new media_type.MediaType.new(type, subtype, parameters);
      }, T$.VoidToMediaType()));
    }
    static ['_#parse#tearOff'](mediaType) {
      return media_type.MediaType.parse(mediaType);
    }
    static ['_#new#tearOff'](type, subtype, parameters = null) {
      return new media_type.MediaType.new(type, subtype, parameters);
    }
    change(opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let subtype = opts && 'subtype' in opts ? opts.subtype : null;
      let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let clearParameters = opts && 'clearParameters' in opts ? opts.clearParameters : false;
      if (mimeType != null) {
        if (type != null) {
          dart.throw(new core.ArgumentError.new("You may not pass both [type] and [mimeType]."));
        } else if (subtype != null) {
          dart.throw(new core.ArgumentError.new("You may not pass both [subtype] and " + "[mimeType]."));
        }
        let segments = mimeType[$split]("/");
        if (segments[$length] !== 2) {
          dart.throw(new core.FormatException.new("Invalid mime type \"" + dart.str(mimeType) + "\"."));
        }
        type = segments[$_get](0);
        subtype = segments[$_get](1);
      }
      type == null ? type = this.type : null;
      subtype == null ? subtype = this.subtype : null;
      parameters == null ? parameters = new (T$.IdentityMapOfString$String()).new() : null;
      if (!clearParameters) {
        let newParameters = parameters;
        parameters = T$.LinkedHashMapOfString$String().from(this.parameters);
        parameters[$addAll](newParameters);
      }
      return new media_type.MediaType.new(type, subtype, parameters);
    }
    toString() {
      let t104;
      let buffer = (t104 = new core.StringBuffer.new(), (() => {
        t104.write(this.type);
        t104.write("/");
        t104.write(this.subtype);
        return t104;
      })());
      this.parameters[$forEach](dart.fn((attribute, value) => {
        let t104;
        buffer.write("; " + attribute + "=");
        if (scan.nonToken.hasMatch(value)) {
          t104 = buffer;
          (() => {
            t104.write("\"");
            t104.write(value[$replaceAllMapped](media_type._escapedChar, dart.fn(match => "\\" + dart.str(match._get(0)), T$.MatchToString())));
            t104.write("\"");
            return t104;
          })();
        } else {
          buffer.write(value);
        }
      }, T$.StringAndStringTovoid()));
      return buffer.toString();
    }
  };
  (media_type.MediaType.new = function(type, subtype, parameters = null) {
    this[type$] = type[$toLowerCase]();
    this[subtype$] = subtype[$toLowerCase]();
    this[parameters$0] = new (T$.UnmodifiableMapViewOfString$String()).new(parameters == null ? new (T$.IdentityMapOfString$String()).new() : new (T$.CaseInsensitiveMapOfString()).from(parameters));
    ;
  }).prototype = media_type.MediaType.prototype;
  dart.addTypeTests(media_type.MediaType);
  dart.addTypeCaches(media_type.MediaType);
  dart.setMethodSignature(media_type.MediaType, () => ({
    __proto__: dart.getMethods(media_type.MediaType.__proto__),
    change: dart.fnType(media_type.MediaType, [], {clearParameters: core.bool, mimeType: dart.nullable(core.String), parameters: dart.nullable(core.Map$(core.String, core.String)), subtype: dart.nullable(core.String), type: dart.nullable(core.String)}, {})
  }));
  dart.setStaticMethodSignature(media_type.MediaType, () => ['parse']);
  dart.setGetterSignature(media_type.MediaType, () => ({
    __proto__: dart.getGetters(media_type.MediaType.__proto__),
    mimeType: core.String
  }));
  dart.setLibraryUri(media_type.MediaType, I[67]);
  dart.setFieldSignature(media_type.MediaType, () => ({
    __proto__: dart.getFields(media_type.MediaType.__proto__),
    type: dart.finalFieldType(core.String),
    subtype: dart.finalFieldType(core.String),
    parameters: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  dart.defineExtensionMethods(media_type.MediaType, ['toString']);
  dart.defineLazy(media_type, {
    /*media_type._escapedChar*/get _escapedChar() {
      return core.RegExp.new("[\"\\x00-\\x1F\\x7F]");
    }
  }, false);
  var linkDelegate = dart.privateName(method_channel_url_launcher, "MethodChannelUrlLauncher.linkDelegate");
  method_channel_url_launcher.MethodChannelUrlLauncher = class MethodChannelUrlLauncher extends url_launcher_platform.UrlLauncherPlatform {
    get linkDelegate() {
      return this[linkDelegate];
    }
    set linkDelegate(value) {
      super.linkDelegate = value;
    }
    canLaunch(url) {
      return method_channel_url_launcher._channel.invokeMethod(core.bool, "canLaunch", new (T$.IdentityMapOfString$Object()).from(["url", url])).then(core.bool, dart.fn(value => {
        let t104;
        t104 = value;
        return t104 == null ? false : t104;
      }, T$.boolNTobool()));
    }
    closeWebView() {
      return method_channel_url_launcher._channel.invokeMethod(dart.void, "closeWebView");
    }
    launch(url, opts) {
      let useSafariVC = opts && 'useSafariVC' in opts ? opts.useSafariVC : null;
      let useWebView = opts && 'useWebView' in opts ? opts.useWebView : null;
      let enableJavaScript = opts && 'enableJavaScript' in opts ? opts.enableJavaScript : null;
      let enableDomStorage = opts && 'enableDomStorage' in opts ? opts.enableDomStorage : null;
      let universalLinksOnly = opts && 'universalLinksOnly' in opts ? opts.universalLinksOnly : null;
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
      return method_channel_url_launcher._channel.invokeMethod(core.bool, "launch", new (T$.IdentityMapOfString$Object()).from(["url", url, "useSafariVC", useSafariVC, "useWebView", useWebView, "enableJavaScript", enableJavaScript, "enableDomStorage", enableDomStorage, "universalLinksOnly", universalLinksOnly, "headers", headers])).then(core.bool, dart.fn(value => {
        let t104;
        t104 = value;
        return t104 == null ? false : t104;
      }, T$.boolNTobool()));
    }
    static ['_#new#tearOff']() {
      return new method_channel_url_launcher.MethodChannelUrlLauncher.new();
    }
  };
  (method_channel_url_launcher.MethodChannelUrlLauncher.new = function() {
    this[linkDelegate] = null;
    method_channel_url_launcher.MethodChannelUrlLauncher.__proto__.new.call(this);
    ;
  }).prototype = method_channel_url_launcher.MethodChannelUrlLauncher.prototype;
  dart.addTypeTests(method_channel_url_launcher.MethodChannelUrlLauncher);
  dart.addTypeCaches(method_channel_url_launcher.MethodChannelUrlLauncher);
  dart.setLibraryUri(method_channel_url_launcher.MethodChannelUrlLauncher, I[68]);
  dart.setFieldSignature(method_channel_url_launcher.MethodChannelUrlLauncher, () => ({
    __proto__: dart.getFields(method_channel_url_launcher.MethodChannelUrlLauncher.__proto__),
    linkDelegate: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [link.LinkInfo])))
  }));
  dart.defineLazy(method_channel_url_launcher, {
    /*method_channel_url_launcher._channel*/get _channel() {
      return C[66] || CT.C66;
    }
  }, false);
  _flutterfire_internals['ObjectX|guard'] = function ObjectX$124guard(T, R, $this, cb) {
    if (T.is($this)) return cb(T.as($this));
    return null;
  };
  _flutterfire_internals['ObjectX|get#guard'] = function ObjectX$124get$35guard(T, $this) {
    return dart.fn((R, cb) => _flutterfire_internals['ObjectX|guard'](T, R, $this, cb), dart.gFnType(R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [__t$RN(), [dart.fnType(R, [T])]];
    }, R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [T$.ObjectN()];
    }));
  };
  _flutterfire_internals['ObjectX|safeCast'] = function ObjectX$124safeCast(T, R, $this) {
    if (R.is($this)) return R.as($this);
    return null;
  };
  _flutterfire_internals['ObjectX|get#safeCast'] = function ObjectX$124get$35safeCast(T, $this) {
    return dart.fn(R => _flutterfire_internals['ObjectX|safeCast'](T, R, $this), T$.VoidToRN());
  };
  _flutterfire_internals._firebaseExceptionFromCoreFirebaseError = function _firebaseExceptionFromCoreFirebaseError(firebaseError, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    let code = codeParser(firebaseError.code);
    let message = messageParser != null ? messageParser(code, firebaseError.message) : firebaseError.message[$replaceFirst]("(" + firebaseError.code + ")", "");
    return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, message: message, code: code});
  };
  _flutterfire_internals._testException = function _testException(exception) {
    return dart.packageJSType("FirebaseError", false).is(exception);
  };
  _flutterfire_internals._mapException = function _mapException(exception, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    if (!_flutterfire_internals._testException(exception)) dart.assertFailed(null, I[69], 89, 10, "_testException(exception)");
    if (dart.packageJSType("FirebaseError", false).is(exception)) {
      return _flutterfire_internals._firebaseExceptionFromCoreFirebaseError(exception, {plugin: plugin, codeParser: codeParser, messageParser: messageParser});
    }
    dart.throw(new core.StateError.new("unrecognized error " + dart.str(exception)));
  };
  _flutterfire_internals.guardWebExceptions = function guardWebExceptions(R, cb, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    try {
      let value = cb();
      if (async.Future.is(value)) {
        return R.as(value.catchError(dart.fn((err, stack) => core.Error.throwWithStackTrace(_flutterfire_internals._mapException(err, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), core.StackTrace.as(stack)), T$.dynamicAnddynamicToNever()), {test: C[67] || CT.C67}));
      } else if (async.Stream.is(value)) {
        return R.as(value.handleError(dart.fn((err, stack) => core.Error.throwWithStackTrace(_flutterfire_internals._mapException(err, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), core.StackTrace.as(stack)), T$.dynamicAnddynamicToNever()), {test: C[67] || CT.C67}));
      }
      return value;
    } catch (e) {
      let error = dart.getThrown(e);
      let stack = dart.stackTrace(e);
      if (core.Object.is(error)) {
        if (!_flutterfire_internals._testException(error)) {
          dart.rethrow(e);
        }
        core.Error.throwWithStackTrace(_flutterfire_internals._mapException(error, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), stack);
      } else
        throw e;
    }
  };
  convert_auth_provider.convertToOAuthProvider = function convertToOAuthProvider(authProvider) {
    if (microsoft_auth.MicrosoftAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setScopes(authProvider.scopes);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (github_auth.GithubAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setScopes(authProvider.scopes);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (apple_auth.AppleAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setScopes(authProvider.scopes);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (twitter_auth.TwitterAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    return authProvider;
  };
  var _api$1 = dart.privateName(method_channel_user, "_api");
  const multiFactor$0 = Symbol("multiFactor");
  method_channel_user.MethodChannelUser = class MethodChannelUser extends platform_interface_user.UserPlatform {
    static ['_#new#tearOff'](auth, multiFactor, data) {
      return new method_channel_user.MethodChannelUser.new(auth, multiFactor, data);
    }
    get pigeonDefault() {
      return new messages$46pigeon.PigeonFirebaseApp.new({appName: this.auth.app.name, tenantId: this.auth.tenantId});
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        try {
          yield this[_api$1].delete(this.pigeonDefault);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdToken(forceRefresh) {
      return async.async(T$.StringN(), (function* getIdToken() {
        try {
          let data = (yield this[_api$1].getIdToken(this.pigeonDefault, forceRefresh));
          return data.token;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdTokenResult(forceRefresh) {
      return async.async(id_token_result.IdTokenResult, (function* getIdTokenResult() {
        try {
          let data = (yield this[_api$1].getIdToken(this.pigeonDefault, forceRefresh));
          return new id_token_result.IdTokenResult.new(data);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithCredential() {
        try {
          let result = (yield this[_api$1].linkWithCredential(this.pigeonDefault, credential.asMap()));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithProvider() {
        try {
          let convertedProvider = convert_auth_provider.convertToOAuthProvider(provider);
          let result = (yield this[_api$1].linkWithProvider(this.pigeonDefault, new messages$46pigeon.PigeonSignInProvider.new({providerId: convertedProvider.providerId, scopes: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.scopes : null, customParameters: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.parameters : null})));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithCredential() {
        try {
          let result = (yield this[_api$1].reauthenticateWithCredential(this.pigeonDefault, credential.asMap()));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithProvider() {
        try {
          let convertedProvider = convert_auth_provider.convertToOAuthProvider(provider);
          let result = (yield this[_api$1].reauthenticateWithProvider(this.pigeonDefault, new messages$46pigeon.PigeonSignInProvider.new({providerId: convertedProvider.providerId, scopes: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.scopes : null, customParameters: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.parameters : null})));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reload() {
      return async.async(dart.void, (function* reload() {
        try {
          let result = (yield this[_api$1].reload(this.pigeonDefault));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$0], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendEmailVerification(actionCodeSettings) {
      return async.async(dart.void, (function* sendEmailVerification() {
        try {
          yield this[_api$1].sendEmailVerification(this.pigeonDefault, actionCodeSettings == null ? null : new messages$46pigeon.PigeonActionCodeSettings.new({url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, iOSBundleId: actionCodeSettings.iOSBundleId, androidPackageName: actionCodeSettings.androidPackageName, androidInstallApp: actionCodeSettings.androidInstallApp, androidMinimumVersion: actionCodeSettings.androidMinimumVersion, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    unlink(providerId) {
      return async.async(platform_interface_user.UserPlatform, (function* unlink() {
        try {
          let result = (yield this[_api$1].unlink(this.pigeonDefault, providerId));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          let user = T$.MethodChannelUserN().as(userCredential.user);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
          return dart.nullCheck(user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateEmail(newEmail) {
      return async.async(dart.void, (function* updateEmail() {
        try {
          let result = (yield this[_api$1].updateEmail(this.pigeonDefault, newEmail));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$0], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePassword(newPassword) {
      return async.async(dart.void, (function* updatePassword() {
        try {
          let result = (yield this[_api$1].updatePassword(this.pigeonDefault, newPassword));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$0], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePhoneNumber(phoneCredential) {
      return async.async(dart.void, (function* updatePhoneNumber() {
        try {
          let result = (yield this[_api$1].updatePhoneNumber(this.pigeonDefault, phoneCredential.asMap()));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$0], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateProfile(profile) {
      return async.async(dart.void, (function* updateProfile() {
        try {
          let result = (yield this[_api$1].updateProfile(this.pigeonDefault, new messages$46pigeon.PigeonUserProfile.new({displayName: profile[$_get]("displayName"), photoUrl: profile[$_get]("photoURL"), displayNameChanged: profile[$containsKey]("displayName"), photoUrlChanged: profile[$containsKey]("photoURL")})));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$0], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return async.async(dart.void, (function* verifyBeforeUpdateEmail() {
        try {
          yield this[_api$1].verifyBeforeUpdateEmail(this.pigeonDefault, newEmail, actionCodeSettings == null ? null : new messages$46pigeon.PigeonActionCodeSettings.new({url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, iOSBundleId: actionCodeSettings.iOSBundleId, androidPackageName: actionCodeSettings.androidPackageName, androidInstallApp: actionCodeSettings.androidInstallApp, androidMinimumVersion: actionCodeSettings.androidMinimumVersion, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    get [multiFactor$0]() {
      return super.multiFactor;
    }
  };
  (method_channel_user.MethodChannelUser.new = function(auth, multiFactor, data) {
    this[_api$1] = new messages$46pigeon.FirebaseAuthUserHostApi.new();
    method_channel_user.MethodChannelUser.__proto__.new.call(this, auth, multiFactor, data);
    ;
  }).prototype = method_channel_user.MethodChannelUser.prototype;
  dart.addTypeTests(method_channel_user.MethodChannelUser);
  dart.addTypeCaches(method_channel_user.MethodChannelUser);
  dart.setGetterSignature(method_channel_user.MethodChannelUser, () => ({
    __proto__: dart.getGetters(method_channel_user.MethodChannelUser.__proto__),
    pigeonDefault: messages$46pigeon.PigeonFirebaseApp
  }));
  dart.setLibraryUri(method_channel_user.MethodChannelUser, I[70]);
  dart.setFieldSignature(method_channel_user.MethodChannelUser, () => ({
    __proto__: dart.getFields(method_channel_user.MethodChannelUser.__proto__),
    [_api$1]: dart.finalFieldType(messages$46pigeon.FirebaseAuthUserHostApi)
  }));
  method_channel_user_credential.MethodChannelUserCredential = class MethodChannelUserCredential extends platform_interface_user_credential.UserCredentialPlatform {
    static ['_#new#tearOff'](auth, data) {
      return new method_channel_user_credential.MethodChannelUserCredential.new(auth, data);
    }
  };
  (method_channel_user_credential.MethodChannelUserCredential.new = function(auth, data) {
    let t124;
    method_channel_user_credential.MethodChannelUserCredential.__proto__.new.call(this, {auth: auth, additionalUserInfo: data.additionalUserInfo == null ? null : new additional_user_info.AdditionalUserInfo.new({isNewUser: dart.nullCheck(data.additionalUserInfo).isNewUser, profile: T$.LinkedHashMapOfString$dynamic().from((t124 = dart.nullCheck(data.additionalUserInfo).profile, t124 == null ? new _js_helper.LinkedMap.new() : t124)), providerId: dart.nullCheck(data.additionalUserInfo).providerId, username: dart.nullCheck(data.additionalUserInfo).username}), credential: data.credential == null ? null : new auth_credential.AuthCredential.new({providerId: dart.nullCheck(data.credential).providerId, signInMethod: dart.nullCheck(data.credential).signInMethod, token: dart.nullCheck(data.credential).nativeId, accessToken: dart.nullCheck(data.credential).accessToken}), user: data.user == null ? null : new method_channel_user.MethodChannelUser.new(auth, new method_channel_multi_factor.MethodChannelMultiFactor.new(auth), dart.nullCheck(data.user))});
    ;
  }).prototype = method_channel_user_credential.MethodChannelUserCredential.prototype;
  dart.addTypeTests(method_channel_user_credential.MethodChannelUserCredential);
  dart.addTypeCaches(method_channel_user_credential.MethodChannelUserCredential);
  dart.setLibraryUri(method_channel_user_credential.MethodChannelUserCredential, I[71]);
  exception$.convertPlatformException = function convertPlatformException(exception, stackTrace, opts) {
    let fromPigeon = opts && 'fromPigeon' in opts ? opts.fromPigeon : true;
    if (!message_codec.PlatformException.is(exception)) {
      core.Error.throwWithStackTrace(exception, stackTrace);
    }
    core.Error.throwWithStackTrace(exception$.platformExceptionToFirebaseAuthException(exception, {fromPigeon: fromPigeon}), stackTrace);
  };
  exception$.platformExceptionToFirebaseAuthException = function platformExceptionToFirebaseAuthException(platformException, opts) {
    let t124, t124$, t124$0;
    let fromPigeon = opts && 'fromPigeon' in opts ? opts.fromPigeon : true;
    if (fromPigeon) {
      let code = platformException.code[$replaceAll]("ERROR_", "")[$toLowerCase]()[$replaceAll]("_", "-");
      let customCode = exception$._getCustomCode(T$.MapN().as(platformException.details), platformException.message);
      if (customCode != null) {
        code = customCode;
      }
      if (code[$isNotEmpty]) {
        if (code === "second-factor-required") {
          return exception$.parseMultiFactorError(platformException);
        }
      }
      return new firebase_auth_exception.FirebaseAuthException.new({code: code, message: (t124 = platformException.message, t124 == null ? null : t124[$split](": ")[$last])});
    }
    let details = platformException.details != null ? T$.LinkedHashMapOfString$dynamic().from(core.Map.as(platformException.details)) : null;
    let code = "unknown";
    let message = platformException.message;
    let email = null;
    let credential = null;
    if (details != null) {
      code = core.String.as((t124$ = details[$_get]("code"), t124$ == null ? code : t124$));
      if (code === "second-factor-required") {
        return exception$.parseMultiFactorError(platformException);
      }
      message = T$.StringN().as((t124$0 = details[$_get]("message"), t124$0 == null ? message : t124$0));
      let additionalData = details[$_get]("additionalData");
      if (additionalData != null) {
        if (dart.dsend(additionalData, '_get', ["authCredential"]) != null) {
          credential = new auth_credential.AuthCredential.new({providerId: core.String.as(dart.dsend(dart.dsend(additionalData, '_get', ["authCredential"]), '_get', ["providerId"])), signInMethod: core.String.as(dart.dsend(dart.dsend(additionalData, '_get', ["authCredential"]), '_get', ["signInMethod"])), token: T$.intN().as(dart.dsend(dart.dsend(additionalData, '_get', ["authCredential"]), '_get', ["token"]))});
        }
        if (dart.dsend(additionalData, '_get', ["email"]) != null) {
          email = T$.StringN().as(dart.dsend(additionalData, '_get', ["email"]));
        }
      }
      let customCode = exception$._getCustomCode(T$.MapN().as(additionalData), message);
      if (customCode != null) {
        code = customCode;
      }
    }
    return new firebase_auth_exception.FirebaseAuthException.new({code: code, message: message, email: email, credential: credential});
  };
  exception$._getCustomCode = function _getCustomCode(additionalData, message) {
    let t124, t124$, t124$0;
    let listOfRecognizedCode = T$.JSArrayOfString().of(["INVALID_LOGIN_CREDENTIALS", "BLOCKING_FUNCTION_ERROR_RESPONSE"]);
    for (let recognizedCode of listOfRecognizedCode) {
      if (dart.equals((t124 = additionalData, t124 == null ? null : t124[$_get]("message")), recognizedCode) || dart.test((t124$0 = (t124$ = message, t124$ == null ? null : t124$[$contains](recognizedCode)), t124$0 == null ? false : t124$0))) {
        return recognizedCode;
      }
    }
    return null;
  };
  exception$.parseMultiFactorError = function parseMultiFactorError(exception) {
    let t124;
    let message = exception.message;
    let additionalData = T$.MapNOfObjectN$ObjectN().as(exception.details);
    if (additionalData == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "Can't parse multi factor error", message: message}));
    }
    let pigeonMultiFactorInfo = iterable_extensions['IterableNullableExtension|whereNotNull'](core.Object, (t124 = T$.ListNOfObjectN().as(additionalData[$_get]("multiFactorHints")), t124 == null ? T$.JSArrayOfObjectN().of([]) : t124))[$map](messages$46pigeon.PigeonMultiFactorInfo, C[68] || CT.C68)[$toList]();
    let multiFactorInfo = pigeon_helper.multiFactorInfoPigeonToObject(pigeonMultiFactorInfo);
    let auth = method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[$_get](additionalData[$_get]("appName"));
    if (auth == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "second-factor-required", message: message}));
    }
    let sessionId = T$.StringN().as(additionalData[$_get]("multiFactorSessionId"));
    let resolverId = T$.StringN().as(additionalData[$_get]("multiFactorResolverId"));
    if (sessionId == null || resolverId == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "Can't parse multi factor error", message: message}));
    }
    let multiFactorResolver = new method_channel_multi_factor.MethodChannelMultiFactorResolver.new(multiFactorInfo, new platform_interface_multi_factor.MultiFactorSession.new(sessionId), resolverId, auth);
    return new firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new({code: "second-factor-required", message: message, resolver: multiFactorResolver});
  };
  dart.defineLazy(exception$, {
    /*exception$.kMultiFactorError*/get kMultiFactorError() {
      return "second-factor-required";
    }
  }, false);
  pigeon_helper.multiFactorInfoPigeonToObject = function multiFactorInfoPigeonToObject(pigeonMultiFactorInfo) {
    return iterable_extensions['IterableNullableExtension|whereNotNull'](messages$46pigeon.PigeonMultiFactorInfo, pigeonMultiFactorInfo)[$map](platform_interface_multi_factor.MultiFactorInfo, dart.fn(e => {
      let t124, t124$;
      if (e.phoneNumber != null) {
        return new platform_interface_multi_factor.PhoneMultiFactorInfo.new({displayName: e.displayName, enrollmentTimestamp: e.enrollmentTimestamp, factorId: (t124 = e.factorId, t124 == null ? "phone" : t124), uid: e.uid, phoneNumber: dart.nullCheck(e.phoneNumber)});
      }
      return new platform_interface_multi_factor.MultiFactorInfo.new({displayName: e.displayName, enrollmentTimestamp: e.enrollmentTimestamp, factorId: (t124$ = e.factorId, t124$ == null ? "" : t124$), uid: e.uid});
    }, T$.PigeonMultiFactorInfoToMultiFactorInfo()))[$toList]();
  };
  scan.parseList = function parseList(T, scanner, parseElement) {
    let result = _interceptors.JSArray$(T).of([]);
    while (scanner.scan(",")) {
      scanner.scan(scan.whitespace);
    }
    result[$add](parseElement());
    scanner.scan(scan.whitespace);
    while (scanner.scan(",")) {
      scanner.scan(scan.whitespace);
      if (scanner.matches(",") || scanner.isDone) continue;
      result[$add](parseElement());
      scanner.scan(scan.whitespace);
    }
    return result;
  };
  scan.expectQuotedString = function expectQuotedString(scanner, opts) {
    let name = opts && 'name' in opts ? opts.name : "quoted string";
    scanner.expect(scan._quotedString, {name: name});
    let string = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
    return string[$substring](1, string.length - 1)[$replaceAllMapped](scan._quotedPair, dart.fn(match => dart.nullCheck(match._get(1)), T$.MatchToString()));
  };
  dart.defineLazy(scan, {
    /*scan.token*/get token() {
      return core.RegExp.new("[^()<>@,;:\"\\\\/[\\]?={} \\t\\x00-\\x1F\\x7F]+");
    },
    /*scan._lws*/get _lws() {
      return core.RegExp.new("(?:\\r\\n)?[ \\t]+");
    },
    /*scan._quotedString*/get _quotedString() {
      return core.RegExp.new("\"(?:[^\"\\x00-\\x1F\\x7F]|\\\\.)*\"");
    },
    /*scan._quotedPair*/get _quotedPair() {
      return core.RegExp.new("\\\\(.)");
    },
    /*scan.nonToken*/get nonToken() {
      return core.RegExp.new("[()<>@,;:\"\\\\/\\[\\]?={} \\t\\x00-\\x1F\\x7F]");
    },
    /*scan.whitespace*/get whitespace() {
      return core.RegExp.new("(?:" + scan._lws.pattern + ")*");
    }
  }, false);
  utils$0.wrapFormatException = function wrapFormatException(T, name, value, body) {
    try {
      return body();
    } catch (e) {
      let ex = dart.getThrown(e);
      if (span_exception.SourceSpanFormatException.is(ex)) {
        let error = ex;
        dart.throw(new span_exception.SourceSpanFormatException.new("Invalid " + name + ": " + error.message, error.span, error.source));
      } else if (core.FormatException.is(ex)) {
        let error = ex;
        dart.throw(new core.FormatException.new("Invalid " + name + " \"" + value + "\": " + error.message, error.source, error.offset));
      } else
        throw e;
    }
  };
  var _decode = dart.privateName(decoder, "_decode");
  var _state = dart.privateName(decoder, "_state");
  decoder.ChunkedCodingDecoder = class ChunkedCodingDecoder extends convert.Converter$(core.List$(core.int), core.List$(core.int)) {
    static ['_#_#tearOff']() {
      return new decoder.ChunkedCodingDecoder.__();
    }
    convert(input) {
      T$.ListOfint().as(input);
      let sink = new decoder._Sink.new(T$.StreamControllerOfListOfint().new());
      let output = sink[_decode](input, 0, input[$length]);
      if (sink[_state][$_equals](decoder._State.end)) return output;
      dart.throw(new core.FormatException.new("Input ended unexpectedly.", input, input[$length]));
    }
    startChunkedConversion(sink) {
      T$.SinkOfListOfint().as(sink);
      return new decoder._Sink.new(sink);
    }
  };
  (decoder.ChunkedCodingDecoder.__ = function() {
    decoder.ChunkedCodingDecoder.__proto__.new.call(this);
    ;
  }).prototype = decoder.ChunkedCodingDecoder.prototype;
  dart.addTypeTests(decoder.ChunkedCodingDecoder);
  dart.addTypeCaches(decoder.ChunkedCodingDecoder);
  dart.setMethodSignature(decoder.ChunkedCodingDecoder, () => ({
    __proto__: dart.getMethods(decoder.ChunkedCodingDecoder.__proto__),
    convert: dart.fnType(core.List$(core.int), [dart.nullable(core.Object)]),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(decoder.ChunkedCodingDecoder, I[72]);
  var ___Sink__size = dart.privateName(decoder, "_#_Sink#_size");
  var _sink$ = dart.privateName(decoder, "_sink");
  var _size = dart.privateName(decoder, "_size");
  var _close = dart.privateName(decoder, "_close");
  var _digitForByte = dart.privateName(decoder, "_digitForByte");
  var _State__name = dart.privateName(decoder, "_State._name");
  decoder._Sink = class _Sink extends convert.ByteConversionSinkBase {
    get [_size]() {
      let t126;
      t126 = this[___Sink__size];
      return t126 == null ? dart.throw(new _internal.LateError.fieldNI("_size")) : t126;
    }
    set [_size](_size$35param) {
      this[___Sink__size] = _size$35param;
    }
    static ['_#new#tearOff'](_sink) {
      return new decoder._Sink.new(_sink);
    }
    add(chunk) {
      T$.ListOfint().as(chunk);
      return this.addSlice(chunk, 0, chunk[$length], false);
    }
    addSlice(chunk, start, end, isLast) {
      core.RangeError.checkValidRange(start, end, chunk[$length]);
      let output = this[_decode](chunk, start, end);
      if (output[$isNotEmpty]) this[_sink$].add(output);
      if (isLast) this[_close](chunk, end);
    }
    close() {
      return this[_close]();
    }
    [_close](chunk = null, index = null) {
      if (!this[_state][$_equals](decoder._State.end)) {
        dart.throw(new core.FormatException.new("Input ended unexpectedly.", chunk, index));
      }
      this[_sink$].close();
    }
    [_decode](bytes, start, end) {
      function assertCurrentChar(char, name) {
        if (bytes[$_get](start) !== char) {
          dart.throw(new core.FormatException.new("Expected " + name + ".", bytes, start));
        }
      }
      dart.fn(assertCurrentChar, T$.intAndStringTovoid());
      let buffer = new typed_buffer.Uint8Buffer.new();
      while (start !== end) {
        switch (this[_state]) {
          case C[69] || CT.C69:
            {
              this[_size] = this[_digitForByte](bytes, start);
              this[_state] = decoder._State.size;
              start = start + 1;
              break;
            }
          case C[70] || CT.C70:
            {
              if (bytes[$_get](start) === 13) {
                this[_state] = decoder._State.sizeBeforeLF;
              } else {
                this[_size] = (this[_size] << 4 >>> 0) + this[_digitForByte](bytes, start);
              }
              start = start + 1;
              break;
            }
          case C[71] || CT.C71:
            {
              assertCurrentChar(10, "LF");
              this[_state] = this[_size] === 0 ? decoder._State.endBeforeCR : decoder._State.body;
              start = start + 1;
              break;
            }
          case C[72] || CT.C72:
            {
              let chunkEnd = math.min(core.int, end, start + this[_size]);
              buffer.addAll(bytes, start, chunkEnd);
              this[_size] = this[_size] - (chunkEnd - start);
              start = chunkEnd;
              if (this[_size] === 0) this[_state] = decoder._State.bodyBeforeCR;
              break;
            }
          case C[73] || CT.C73:
            {
              assertCurrentChar(13, "CR");
              this[_state] = decoder._State.bodyBeforeLF;
              start = start + 1;
              break;
            }
          case C[74] || CT.C74:
            {
              assertCurrentChar(10, "LF");
              this[_state] = decoder._State.boundary;
              start = start + 1;
              break;
            }
          case C[75] || CT.C75:
            {
              assertCurrentChar(13, "CR");
              this[_state] = decoder._State.endBeforeLF;
              start = start + 1;
              break;
            }
          case C[76] || CT.C76:
            {
              assertCurrentChar(10, "LF");
              this[_state] = decoder._State.end;
              start = start + 1;
              break;
            }
          case C[77] || CT.C77:
            {
              dart.throw(new core.FormatException.new("Expected no more data.", bytes, start));
            }
        }
      }
      return buffer.buffer[$asUint8List](0, buffer.length);
    }
    [_digitForByte](bytes, index) {
      let byte = bytes[$_get](index);
      let digit = (48 ^ byte) >>> 0;
      if (digit <= 9) {
        if (digit >= 0) return digit;
      } else {
        let letter = (32 | byte) >>> 0;
        if (97 <= letter && letter <= 102) return letter - 97 + 10;
      }
      dart.throw(new core.FormatException.new("Invalid hexadecimal byte 0x" + byte[$toRadixString](16)[$toUpperCase]() + ".", bytes, index));
    }
  };
  (decoder._Sink.new = function(_sink) {
    this[_state] = decoder._State.boundary;
    this[___Sink__size] = null;
    this[_sink$] = _sink;
    decoder._Sink.__proto__.new.call(this);
    ;
  }).prototype = decoder._Sink.prototype;
  dart.addTypeTests(decoder._Sink);
  dart.addTypeCaches(decoder._Sink);
  dart.setMethodSignature(decoder._Sink, () => ({
    __proto__: dart.getMethods(decoder._Sink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    close: dart.fnType(dart.void, []),
    [_close]: dart.fnType(dart.void, [], [dart.nullable(core.List$(core.int)), dart.nullable(core.int)]),
    [_decode]: dart.fnType(typed_data.Uint8List, [core.List$(core.int), core.int, core.int]),
    [_digitForByte]: dart.fnType(core.int, [core.List$(core.int), core.int])
  }));
  dart.setGetterSignature(decoder._Sink, () => ({
    __proto__: dart.getGetters(decoder._Sink.__proto__),
    [_size]: core.int
  }));
  dart.setSetterSignature(decoder._Sink, () => ({
    __proto__: dart.getSetters(decoder._Sink.__proto__),
    [_size]: core.int
  }));
  dart.setLibraryUri(decoder._Sink, I[72]);
  dart.setFieldSignature(decoder._Sink, () => ({
    __proto__: dart.getFields(decoder._Sink.__proto__),
    [_sink$]: dart.finalFieldType(core.Sink$(core.List$(core.int))),
    [_state]: dart.fieldType(decoder._State),
    [___Sink__size]: dart.fieldType(dart.nullable(core.int))
  }));
  var _name$ = dart.privateName(decoder, "_name");
  const _name$0 = _State__name;
  decoder._State = class _State extends core.Object {
    get [_name$]() {
      return this[_name$0];
    }
    set [_name$](value) {
      super[_name$] = value;
    }
    static ['_#_#tearOff'](_name) {
      return new decoder._State.__(_name);
    }
    toString() {
      return this[_name$];
    }
  };
  (decoder._State.__ = function(_name) {
    this[_name$0] = _name;
    ;
  }).prototype = decoder._State.prototype;
  dart.addTypeTests(decoder._State);
  dart.addTypeCaches(decoder._State);
  dart.setLibraryUri(decoder._State, I[72]);
  dart.setFieldSignature(decoder._State, () => ({
    __proto__: dart.getFields(decoder._State.__proto__),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(decoder._State, () => ['boundary', 'size', 'sizeBeforeLF', 'body', 'bodyBeforeCR', 'bodyBeforeLF', 'endBeforeCR', 'endBeforeLF', 'end']);
  dart.defineExtensionMethods(decoder._State, ['toString']);
  dart.defineLazy(decoder._State, {
    /*decoder._State.boundary*/get boundary() {
      return C[69] || CT.C69;
    },
    /*decoder._State.size*/get size() {
      return C[70] || CT.C70;
    },
    /*decoder._State.sizeBeforeLF*/get sizeBeforeLF() {
      return C[71] || CT.C71;
    },
    /*decoder._State.body*/get body() {
      return C[72] || CT.C72;
    },
    /*decoder._State.bodyBeforeCR*/get bodyBeforeCR() {
      return C[73] || CT.C73;
    },
    /*decoder._State.bodyBeforeLF*/get bodyBeforeLF() {
      return C[74] || CT.C74;
    },
    /*decoder._State.endBeforeCR*/get endBeforeCR() {
      return C[75] || CT.C75;
    },
    /*decoder._State.endBeforeLF*/get endBeforeLF() {
      return C[76] || CT.C76;
    },
    /*decoder._State.end*/get end() {
      return C[77] || CT.C77;
    }
  }, false);
  dart.defineLazy(decoder, {
    /*decoder.chunkedCodingDecoder*/get chunkedCodingDecoder() {
      return C[78] || CT.C78;
    }
  }, false);
  encoder.ChunkedCodingEncoder = class ChunkedCodingEncoder extends convert.Converter$(core.List$(core.int), core.List$(core.int)) {
    static ['_#_#tearOff']() {
      return new encoder.ChunkedCodingEncoder.__();
    }
    convert(input) {
      T$.ListOfint().as(input);
      return encoder._convert(input, 0, input[$length], {isLast: true});
    }
    startChunkedConversion(sink) {
      T$.SinkOfListOfint().as(sink);
      return new encoder._Sink.new(sink);
    }
  };
  (encoder.ChunkedCodingEncoder.__ = function() {
    encoder.ChunkedCodingEncoder.__proto__.new.call(this);
    ;
  }).prototype = encoder.ChunkedCodingEncoder.prototype;
  dart.addTypeTests(encoder.ChunkedCodingEncoder);
  dart.addTypeCaches(encoder.ChunkedCodingEncoder);
  dart.setMethodSignature(encoder.ChunkedCodingEncoder, () => ({
    __proto__: dart.getMethods(encoder.ChunkedCodingEncoder.__proto__),
    convert: dart.fnType(core.List$(core.int), [dart.nullable(core.Object)]),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(encoder.ChunkedCodingEncoder, I[73]);
  var _sink$0 = dart.privateName(encoder, "_sink");
  encoder._Sink = class _Sink extends convert.ByteConversionSinkBase {
    static ['_#new#tearOff'](_sink) {
      return new encoder._Sink.new(_sink);
    }
    add(chunk) {
      T$.ListOfint().as(chunk);
      this[_sink$0].add(encoder._convert(chunk, 0, chunk[$length]));
    }
    addSlice(chunk, start, end, isLast) {
      core.RangeError.checkValidRange(start, end, chunk[$length]);
      this[_sink$0].add(encoder._convert(chunk, start, end, {isLast: isLast}));
      if (isLast) this[_sink$0].close();
    }
    close() {
      this[_sink$0].add(encoder._doneChunk);
      this[_sink$0].close();
    }
  };
  (encoder._Sink.new = function(_sink) {
    this[_sink$0] = _sink;
    encoder._Sink.__proto__.new.call(this);
    ;
  }).prototype = encoder._Sink.prototype;
  dart.addTypeTests(encoder._Sink);
  dart.addTypeCaches(encoder._Sink);
  dart.setMethodSignature(encoder._Sink, () => ({
    __proto__: dart.getMethods(encoder._Sink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    close: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(encoder._Sink, I[73]);
  dart.setFieldSignature(encoder._Sink, () => ({
    __proto__: dart.getFields(encoder._Sink.__proto__),
    [_sink$0]: dart.finalFieldType(core.Sink$(core.List$(core.int)))
  }));
  encoder._convert = function _convert(bytes, start, end, opts) {
    let t126, t126$, t126$0, t126$1;
    let isLast = opts && 'isLast' in opts ? opts.isLast : false;
    if (end === start) return isLast ? encoder._doneChunk : C[79] || CT.C79;
    let size = end - start;
    let sizeInHex = size[$toRadixString](16);
    let footerSize = isLast ? encoder._doneChunk[$length] : 0;
    let list = _native_typed_data.NativeUint8List.new(sizeInHex.length + 4 + size + footerSize);
    list[$setRange](0, sizeInHex.length, sizeInHex[$codeUnits]);
    let cursor = sizeInHex.length;
    list[$_set]((t126 = cursor, cursor = t126 + 1, t126), 13);
    list[$_set]((t126$ = cursor, cursor = t126$ + 1, t126$), 10);
    list[$setRange](cursor, cursor + end - start, bytes, start);
    cursor = cursor + (end - start);
    list[$_set]((t126$0 = cursor, cursor = t126$0 + 1, t126$0), 13);
    list[$_set]((t126$1 = cursor, cursor = t126$1 + 1, t126$1), 10);
    if (isLast) {
      list[$setRange](list[$length] - footerSize, list[$length], encoder._doneChunk);
    }
    return list;
  };
  dart.defineLazy(encoder, {
    /*encoder.chunkedCodingEncoder*/get chunkedCodingEncoder() {
      return C[80] || CT.C80;
    },
    /*encoder._doneChunk*/get _doneChunk() {
      return _native_typed_data.NativeUint8List.fromList(T$.JSArrayOfint().of([48, 13, 10, 13, 10]));
    }
  }, false);
  exception$0.convertPlatformExceptionToFirebaseException = function convertPlatformExceptionToFirebaseException(exception, rawStackTrace, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let stackTrace = rawStackTrace;
    if (stackTrace[$_equals](core.StackTrace.empty)) {
      stackTrace = core.StackTrace.current;
    }
    if (!message_codec.PlatformException.is(exception)) {
      core.Error.throwWithStackTrace(exception, stackTrace);
    }
    core.Error.throwWithStackTrace(exception$0.platformExceptionToFirebaseException(exception, {plugin: plugin}), stackTrace);
  };
  exception$0.platformExceptionToFirebaseException = function platformExceptionToFirebaseException(platformException, opts) {
    let t126, t126$, t126$0;
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let details = platformException.details != null ? T$.LinkedHashMapOfString$Object().from(core.Map.as(platformException.details)) : null;
    let code = null;
    let message = (t126 = platformException.message, t126 == null ? "" : t126);
    if (details != null) {
      code = (t126$ = T$.StringN().as(details[$_get]("code")), t126$ == null ? code : t126$);
      message = (t126$0 = T$.StringN().as(details[$_get]("message")), t126$0 == null ? message : t126$0);
    }
    return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, code: code, message: message});
  };
  exception$0['EventChannelExtension|receiveGuardedBroadcastStream'] = function EventChannelExtension$124receiveGuardedBroadcastStream($this, opts) {
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let incomingStackTrace = core.StackTrace.current;
    return $this.receiveBroadcastStream($arguments).handleError(dart.fn(error => onError(error, incomingStackTrace), T$.ObjectTodynamic()));
  };
  exception$0['EventChannelExtension|get#receiveGuardedBroadcastStream'] = function EventChannelExtension$124get$35receiveGuardedBroadcastStream($this) {
    return dart.fn(opts => {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      return exception$0['EventChannelExtension|receiveGuardedBroadcastStream']($this, {arguments: $arguments, onError: onError});
    }, T$.__ToStream());
  };
  dart.defineLazy(charcodes, {
    /*charcodes.$lf*/get $lf() {
      return 10;
    },
    /*charcodes.$cr*/get $cr() {
      return 13;
    },
    /*charcodes.$0*/get $0() {
      return 48;
    },
    /*charcodes.$1*/get $1() {
      return 49;
    },
    /*charcodes.$3*/get $3() {
      return 51;
    },
    /*charcodes.$4*/get $4() {
      return 52;
    },
    /*charcodes.$7*/get $7() {
      return 55;
    },
    /*charcodes.$A*/get $A() {
      return 65;
    },
    /*charcodes.$q*/get $q() {
      return 113;
    },
    /*charcodes.$a*/get $a() {
      return 97;
    },
    /*charcodes.$f*/get $f() {
      return 102;
    }
  }, false);
  var _table = dart.privateName(typed_queue, "_TypedQueue._table");
  var _head = dart.privateName(typed_queue, "_TypedQueue._head");
  var _tail = dart.privateName(typed_queue, "_TypedQueue._tail");
  var _table$ = dart.privateName(typed_queue, "_table");
  var _head$ = dart.privateName(typed_queue, "_head");
  var _tail$ = dart.privateName(typed_queue, "_tail");
  var _createBuffer = dart.privateName(typed_queue, "_createBuffer");
  var _createList = dart.privateName(typed_queue, "_createList");
  var _writeToList = dart.privateName(typed_queue, "_writeToList");
  var _growAtCapacity = dart.privateName(typed_queue, "_growAtCapacity");
  var _growTo = dart.privateName(typed_queue, "_growTo");
  var _defaultValue = dart.privateName(typed_queue, "_defaultValue");
  const _is__TypedQueue_default = Symbol('_is__TypedQueue_default');
  typed_queue._TypedQueue$ = dart.generic((E, L) => {
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(core.Iterable$(E)))();
    var __t$ListOfE = () => (__t$ListOfE = dart.constFn(core.List$(E)))();
    var __t$EN = () => (__t$EN = dart.constFn(dart.nullable(E)))();
    const Object_ListMixin$36 = class Object_ListMixin extends core.Object {};
    (Object_ListMixin$36.new = function() {
    }).prototype = Object_ListMixin$36.prototype;
    dart.applyMixin(Object_ListMixin$36, collection.ListMixin$(E));
    class _TypedQueue extends Object_ListMixin$36 {
      get [_table$]() {
        return this[_table];
      }
      set [_table$](value) {
        this[_table] = value;
      }
      get [_head$]() {
        return this[_head];
      }
      set [_head$](value) {
        this[_head] = value;
      }
      get [_tail$]() {
        return this[_tail];
      }
      set [_tail$](value) {
        this[_tail] = value;
      }
      get length() {
        return (this[_tail$] - this[_head$] & this[_table$][$length] - 1) >>> 0;
      }
      toList(opts) {
        let growable = opts && 'growable' in opts ? opts.growable : true;
        let list = growable ? this[_createBuffer](this.length) : this[_createList](this.length);
        this[_writeToList](list);
        return list;
      }
      cast(T) {
        if (queue_list.QueueList$(T).is(this)) return queue_list.QueueList$(T).as(this);
        dart.throw(new core.UnsupportedError.new(dart.str(this) + " cannot be cast to the desired type."));
      }
      retype(T) {
        return this.cast(T);
      }
      addLast(value) {
        E.as(value);
        this[_table$][$_set](this[_tail$], value);
        this[_tail$] = (this[_tail$] + 1 & this[_table$][$length] - 1) >>> 0;
        if (this[_head$] === this[_tail$]) this[_growAtCapacity]();
      }
      addFirst(value) {
        E.as(value);
        this[_head$] = (this[_head$] - 1 & this[_table$][$length] - 1) >>> 0;
        this[_table$][$_set](this[_head$], value);
        if (this[_head$] === this[_tail$]) this[_growAtCapacity]();
      }
      removeFirst() {
        if (this[_head$] === this[_tail$]) dart.throw(new core.StateError.new("No element"));
        let result = this[_table$][$_get](this[_head$]);
        this[_head$] = (this[_head$] + 1 & this[_table$][$length] - 1) >>> 0;
        return result;
      }
      removeLast() {
        if (this[_head$] === this[_tail$]) dart.throw(new core.StateError.new("No element"));
        this[_tail$] = (this[_tail$] - 1 & this[_table$][$length] - 1) >>> 0;
        return this[_table$][$_get](this[_tail$]);
      }
      add(value) {
        E.as(value);
        return this.addLast(value);
      }
      set length(value) {
        core.RangeError.checkNotNegative(value, "length");
        let delta = value - this.length;
        if (delta >= 0) {
          let needsToGrow = this[_table$][$length] <= value;
          if (needsToGrow) this[_growTo](value);
          this[_tail$] = (this[_tail$] + delta & this[_table$][$length] - 1) >>> 0;
          if (!needsToGrow) this.fillRange(value - delta, value, this[_defaultValue]);
        } else {
          this.removeRange(value, this.length);
        }
      }
      _get(index) {
        core.RangeError.checkValidIndex(index, this, null, this.length);
        return this[_table$][$_get]((this[_head$] + index & this[_table$][$length] - 1) >>> 0);
      }
      _set(index, value$) {
        let value = value$;
        E.as(value);
        core.RangeError.checkValidIndex(index, this);
        this[_table$][$_set]((this[_head$] + index & this[_table$][$length] - 1) >>> 0, value);
        return value$;
      }
      removeRange(start, end) {
        let length = this.length;
        core.RangeError.checkValidRange(start, end, length);
        if (start === 0) {
          this[_head$] = (this[_head$] + end & this[_table$][$length] - 1) >>> 0;
          return;
        }
        let elementsAfter = length - end;
        if (elementsAfter === 0) {
          this[_tail$] = (this[_head$] + start & this[_table$][$length] - 1) >>> 0;
          return;
        }
        let removedElements = end - start;
        if (start < elementsAfter) {
          this.setRange(removedElements, end, this);
          this[_head$] = (this[_head$] + removedElements & this[_table$][$length] - 1) >>> 0;
        } else {
          this.setRange(start, length - removedElements, this, end);
          this[_tail$] = (this[_tail$] - removedElements & this[_table$][$length] - 1) >>> 0;
        }
      }
      setRange(start, end, iterable, skipCount = 0) {
        __t$IterableOfE().as(iterable);
        core.RangeError.checkValidRange(start, end, this.length);
        if (start === end) return;
        let targetStart = (this[_head$] + start & this[_table$][$length] - 1) >>> 0;
        let targetEnd = (this[_head$] + end & this[_table$][$length] - 1) >>> 0;
        let targetIsContiguous = targetStart < targetEnd;
        if (iterable === this) {
          let sourceStart = (this[_head$] + skipCount & this[_table$][$length] - 1) >>> 0;
          let sourceEnd = (sourceStart + (end - start) & this[_table$][$length] - 1) >>> 0;
          if (sourceStart === targetStart) return;
          let sourceIsContiguous = sourceStart < sourceEnd;
          if (targetIsContiguous && sourceIsContiguous) {
            this[_table$][$setRange](targetStart, targetEnd, this[_table$], sourceStart);
          } else if (!targetIsContiguous && !sourceIsContiguous) {
            if (sourceStart > targetStart) {
              let startGap = sourceStart - targetStart;
              let firstEnd = this[_table$][$length] - startGap;
              this[_table$][$setRange](targetStart, firstEnd, this[_table$], sourceStart);
              this[_table$][$setRange](firstEnd, this[_table$][$length], this[_table$]);
              this[_table$][$setRange](0, targetEnd, this[_table$], startGap);
            } else if (sourceEnd < targetEnd) {
              let firstStart = targetEnd - sourceEnd;
              this[_table$][$setRange](firstStart, targetEnd, this[_table$]);
              this[_table$][$setRange](0, firstStart, this[_table$], this[_table$][$length] - firstStart);
              this[_table$][$setRange](targetStart, this[_table$][$length], this[_table$], sourceStart);
            }
          } else if (sourceStart < targetEnd) {
            if (sourceIsContiguous) {
              this[_table$][$setRange](targetStart, this[_table$][$length], this[_table$], sourceStart);
              this[_table$][$setRange](0, targetEnd, this[_table$], sourceStart + (this[_table$][$length] - targetStart));
            } else {
              let firstEnd = this[_table$][$length] - sourceStart;
              this[_table$][$setRange](targetStart, firstEnd, this[_table$], sourceStart);
              this[_table$][$setRange](firstEnd, targetEnd, this[_table$]);
            }
          } else {
            if (sourceIsContiguous) {
              this[_table$][$setRange](0, targetEnd, this[_table$], sourceStart + (this[_table$][$length] - targetStart));
              this[_table$][$setRange](targetStart, this[_table$][$length], this[_table$], sourceStart);
            } else {
              let firstStart = targetEnd - sourceEnd;
              this[_table$][$setRange](firstStart, targetEnd, this[_table$]);
              this[_table$][$setRange](targetStart, firstStart, this[_table$], sourceStart);
            }
          }
        } else if (targetIsContiguous) {
          this[_table$][$setRange](targetStart, targetEnd, iterable, skipCount);
        } else if (__t$ListOfE().is(iterable)) {
          this[_table$][$setRange](targetStart, this[_table$][$length], iterable, skipCount);
          this[_table$][$setRange](0, targetEnd, iterable, skipCount + (this[_table$][$length] - targetStart));
        } else {
          super.setRange(start, end, iterable, skipCount);
        }
      }
      fillRange(start, end, value = null) {
        __t$EN().as(value);
        let startInTable = (this[_head$] + start & this[_table$][$length] - 1) >>> 0;
        let endInTable = (this[_head$] + end & this[_table$][$length] - 1) >>> 0;
        if (startInTable <= endInTable) {
          this[_table$][$fillRange](startInTable, endInTable, value);
        } else {
          this[_table$][$fillRange](startInTable, this[_table$][$length], value);
          this[_table$][$fillRange](0, endInTable, value);
        }
      }
      sublist(start, end = null) {
        let length = this.length;
        let nonNullEnd = core.RangeError.checkValidRange(start, end, length);
        let list = this[_createList](nonNullEnd - start);
        this[_writeToList](list, start, nonNullEnd);
        return list;
      }
      [_writeToList](target, start = null, end = null) {
        start == null ? start = 0 : null;
        end == null ? end = this.length : null;
        if (!(target[$length] >= dart.notNull(end) - dart.notNull(start))) dart.assertFailed(null, I[74], 278, 12, "target.length >= end - start");
        if (!(dart.notNull(start) <= dart.notNull(end))) dart.assertFailed(null, I[74], 279, 12, "start <= end");
        let elementsToWrite = dart.notNull(end) - dart.notNull(start);
        let startInTable = (this[_head$] + dart.notNull(start) & this[_table$][$length] - 1) >>> 0;
        let endInTable = (this[_head$] + dart.notNull(end) & this[_table$][$length] - 1) >>> 0;
        if (startInTable <= endInTable) {
          target[$setRange](0, elementsToWrite, this[_table$], startInTable);
        } else {
          let firstPartSize = this[_table$][$length] - startInTable;
          target[$setRange](0, firstPartSize, this[_table$], startInTable);
          target[$setRange](firstPartSize, firstPartSize + endInTable, this[_table$], 0);
        }
        return elementsToWrite;
      }
      [_growAtCapacity]() {
        if (!(this[_head$] === this[_tail$])) dart.assertFailed(null, I[74], 297, 12, "_head == _tail");
        let newTable = this[_createList](this[_table$][$length] * 2);
        let partitionPoint = this[_table$][$length] - this[_head$];
        newTable[$setRange](0, partitionPoint, this[_table$], this[_head$]);
        if (partitionPoint !== this[_table$][$length]) {
          newTable[$setRange](partitionPoint, this[_table$][$length], this[_table$]);
        }
        this[_head$] = 0;
        this[_tail$] = this[_table$][$length];
        this[_table$] = newTable;
      }
      [_growTo](newElementCount) {
        if (!(newElementCount >= this.length)) dart.assertFailed(null, I[74], 316, 12, "newElementCount >= length");
        newElementCount = newElementCount + newElementCount[$rightShift](1);
        let newTable = this[_createList](typed_queue._nextPowerOf2(newElementCount));
        this[_tail$] = this[_writeToList](newTable);
        this[_table$] = newTable;
        this[_head$] = 0;
      }
    }
    (_TypedQueue.new = function(table) {
      this[_table] = L.as(table);
      this[_head] = 0;
      this[_tail] = 0;
      ;
    }).prototype = _TypedQueue.prototype;
    dart.addTypeTests(_TypedQueue);
    _TypedQueue.prototype[_is__TypedQueue_default] = true;
    dart.addTypeCaches(_TypedQueue);
    dart.setMethodSignature(_TypedQueue, () => ({
      __proto__: dart.getMethods(_TypedQueue.__proto__),
      cast: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      [$cast]: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      retype: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      addLast: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      addFirst: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      removeFirst: dart.fnType(E, []),
      _get: dart.fnType(E, [core.int]),
      [$_get]: dart.fnType(E, [core.int]),
      _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      sublist: dart.fnType(L, [core.int], [dart.nullable(core.int)]),
      [$sublist]: dart.fnType(L, [core.int], [dart.nullable(core.int)]),
      [_writeToList]: dart.fnType(core.int, [core.List$(E)], [dart.nullable(core.int), dart.nullable(core.int)]),
      [_growAtCapacity]: dart.fnType(dart.void, []),
      [_growTo]: dart.fnType(dart.void, [core.int])
    }));
    dart.setGetterSignature(_TypedQueue, () => ({
      __proto__: dart.getGetters(_TypedQueue.__proto__),
      length: core.int,
      [$length]: core.int
    }));
    dart.setSetterSignature(_TypedQueue, () => ({
      __proto__: dart.getSetters(_TypedQueue.__proto__),
      length: core.int,
      [$length]: core.int
    }));
    dart.setLibraryUri(_TypedQueue, I[75]);
    dart.setFieldSignature(_TypedQueue, () => ({
      __proto__: dart.getFields(_TypedQueue.__proto__),
      [_table$]: dart.fieldType(L),
      [_head$]: dart.fieldType(core.int),
      [_tail$]: dart.fieldType(core.int)
    }));
    dart.defineExtensionMethods(_TypedQueue, [
      'toList',
      'cast',
      'removeLast',
      'add',
      '_get',
      '_set',
      'removeRange',
      'setRange',
      'fillRange',
      'sublist'
    ]);
    dart.defineExtensionAccessors(_TypedQueue, ['length']);
    return _TypedQueue;
  });
  typed_queue._TypedQueue = typed_queue._TypedQueue$();
  dart.addTypeTests(typed_queue._TypedQueue, _is__TypedQueue_default);
  const _is__IntQueue_default = Symbol('_is__IntQueue_default');
  typed_queue._IntQueue$ = dart.generic(L => {
    class _IntQueue extends typed_queue._TypedQueue$(core.int, L) {
      get [_defaultValue]() {
        return 0;
      }
    }
    (_IntQueue.new = function(queue) {
      _IntQueue.__proto__.new.call(this, queue);
      ;
    }).prototype = _IntQueue.prototype;
    dart.addTypeTests(_IntQueue);
    _IntQueue.prototype[_is__IntQueue_default] = true;
    dart.addTypeCaches(_IntQueue);
    dart.setGetterSignature(_IntQueue, () => ({
      __proto__: dart.getGetters(_IntQueue.__proto__),
      [_defaultValue]: core.int
    }));
    dart.setLibraryUri(_IntQueue, I[75]);
    return _IntQueue;
  });
  typed_queue._IntQueue = typed_queue._IntQueue$();
  dart.addTypeTests(typed_queue._IntQueue, _is__IntQueue_default);
  const _is__FloatQueue_default = Symbol('_is__FloatQueue_default');
  typed_queue._FloatQueue$ = dart.generic(L => {
    class _FloatQueue extends typed_queue._TypedQueue$(core.double, L) {
      get [_defaultValue]() {
        return 0;
      }
    }
    (_FloatQueue.new = function(queue) {
      _FloatQueue.__proto__.new.call(this, queue);
      ;
    }).prototype = _FloatQueue.prototype;
    dart.addTypeTests(_FloatQueue);
    _FloatQueue.prototype[_is__FloatQueue_default] = true;
    dart.addTypeCaches(_FloatQueue);
    dart.setGetterSignature(_FloatQueue, () => ({
      __proto__: dart.getGetters(_FloatQueue.__proto__),
      [_defaultValue]: core.double
    }));
    dart.setLibraryUri(_FloatQueue, I[75]);
    return _FloatQueue;
  });
  typed_queue._FloatQueue = typed_queue._FloatQueue$();
  dart.addTypeTests(typed_queue._FloatQueue, _is__FloatQueue_default);
  var _add = dart.privateName(typed_queue, "_add");
  var _add$ = dart.privateName(serialization, "_add");
  var _head$0 = dart.privateName(queue_list, "_head");
  var _writeToList$ = dart.privateName(queue_list, "_writeToList");
  var _grow = dart.privateName(typed_queue, "_grow");
  var _grow$ = dart.privateName(queue_list, "_grow");
  var _preGrow = dart.privateName(typed_queue, "_preGrow");
  var _preGrow$ = dart.privateName(queue_list, "_preGrow");
  var _table$0 = dart.privateName(queue_list, "_table");
  var _tail$0 = dart.privateName(queue_list, "_tail");
  var _head_ = dart.privateName(typed_queue, "_head=");
  var _table_ = dart.privateName(typed_queue, "_table=");
  var _tail_ = dart.privateName(typed_queue, "_tail=");
  typed_queue.Uint8Queue = class Uint8Queue extends typed_queue._IntQueue$(typed_data.Uint8List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint8Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t128;
      t128 = new typed_queue.Uint8Queue.new(elements[$length]);
      return (() => {
        t128.addAll(elements);
        return t128;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint8Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeUint8List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint8Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[81] || CT.C81, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[82] || CT.C82)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[83] || CT.C83, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[84] || CT.C84, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[85] || CT.C85, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[86] || CT.C86)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[87] || CT.C87)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[88] || CT.C88, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[89] || CT.C89, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[90] || CT.C90, value)));
    }
  };
  (typed_queue.Uint8Queue.new = function(initialCapacity = null) {
    typed_queue.Uint8Queue.__proto__.new.call(this, _native_typed_data.NativeUint8List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint8Queue.prototype;
  dart.addTypeTests(typed_queue.Uint8Queue);
  dart.addTypeCaches(typed_queue.Uint8Queue);
  typed_queue.Uint8Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint8Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint8List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint8Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint8Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint8Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint8Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint8Queue, I[75]);
  typed_queue.Int8Queue = class Int8Queue extends typed_queue._IntQueue$(typed_data.Int8List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int8Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t128;
      t128 = new typed_queue.Int8Queue.new(elements[$length]);
      return (() => {
        t128.addAll(elements);
        return t128;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int8Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeInt8List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int8Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[81] || CT.C81, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[82] || CT.C82)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[83] || CT.C83, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[84] || CT.C84, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[85] || CT.C85, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[86] || CT.C86)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[87] || CT.C87)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[88] || CT.C88, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[89] || CT.C89, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[90] || CT.C90, value)));
    }
  };
  (typed_queue.Int8Queue.new = function(initialCapacity = null) {
    typed_queue.Int8Queue.__proto__.new.call(this, _native_typed_data.NativeInt8List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int8Queue.prototype;
  dart.addTypeTests(typed_queue.Int8Queue);
  dart.addTypeCaches(typed_queue.Int8Queue);
  typed_queue.Int8Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int8Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int8List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int8Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int8Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int8Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int8Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int8Queue, I[75]);
  typed_queue.Uint8ClampedQueue = class Uint8ClampedQueue extends typed_queue._IntQueue$(typed_data.Uint8ClampedList) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint8ClampedQueue.new(initialCapacity);
    }
    static fromList(elements) {
      let t128;
      t128 = new typed_queue.Uint8ClampedQueue.new(elements[$length]);
      return (() => {
        t128.addAll(elements);
        return t128;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint8ClampedQueue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeUint8ClampedList.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint8ClampedBuffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[81] || CT.C81, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[82] || CT.C82)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[83] || CT.C83, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[84] || CT.C84, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[85] || CT.C85, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[86] || CT.C86)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[87] || CT.C87)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[88] || CT.C88, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[89] || CT.C89, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[90] || CT.C90, value)));
    }
  };
  (typed_queue.Uint8ClampedQueue.new = function(initialCapacity = null) {
    typed_queue.Uint8ClampedQueue.__proto__.new.call(this, _native_typed_data.NativeUint8ClampedList.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint8ClampedQueue.prototype;
  dart.addTypeTests(typed_queue.Uint8ClampedQueue);
  dart.addTypeCaches(typed_queue.Uint8ClampedQueue);
  typed_queue.Uint8ClampedQueue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint8ClampedQueue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint8ClampedList, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint8ClampedBuffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint8ClampedQueue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint8ClampedQueue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint8ClampedQueue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint8ClampedQueue, I[75]);
  typed_queue.Uint16Queue = class Uint16Queue extends typed_queue._IntQueue$(typed_data.Uint16List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint16Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t128;
      t128 = new typed_queue.Uint16Queue.new(elements[$length]);
      return (() => {
        t128.addAll(elements);
        return t128;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint16Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeUint16List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint16Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[81] || CT.C81, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[82] || CT.C82)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[83] || CT.C83, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[84] || CT.C84, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[85] || CT.C85, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[86] || CT.C86)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[87] || CT.C87)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[88] || CT.C88, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[89] || CT.C89, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[90] || CT.C90, value)));
    }
  };
  (typed_queue.Uint16Queue.new = function(initialCapacity = null) {
    typed_queue.Uint16Queue.__proto__.new.call(this, _native_typed_data.NativeUint16List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint16Queue.prototype;
  dart.addTypeTests(typed_queue.Uint16Queue);
  dart.addTypeCaches(typed_queue.Uint16Queue);
  typed_queue.Uint16Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint16Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint16List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint16Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint16Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint16Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint16Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint16Queue, I[75]);
  typed_queue.Int16Queue = class Int16Queue extends typed_queue._IntQueue$(typed_data.Int16List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int16Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t128;
      t128 = new typed_queue.Int16Queue.new(elements[$length]);
      return (() => {
        t128.addAll(elements);
        return t128;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int16Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeInt16List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int16Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[81] || CT.C81, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[82] || CT.C82)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[83] || CT.C83, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[84] || CT.C84, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[85] || CT.C85, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[86] || CT.C86)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[87] || CT.C87)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[88] || CT.C88, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[89] || CT.C89, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[90] || CT.C90, value)));
    }
  };
  (typed_queue.Int16Queue.new = function(initialCapacity = null) {
    typed_queue.Int16Queue.__proto__.new.call(this, _native_typed_data.NativeInt16List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int16Queue.prototype;
  dart.addTypeTests(typed_queue.Int16Queue);
  dart.addTypeCaches(typed_queue.Int16Queue);
  typed_queue.Int16Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int16Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int16List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int16Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int16Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int16Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int16Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int16Queue, I[75]);
  typed_queue.Uint32Queue = class Uint32Queue extends typed_queue._IntQueue$(typed_data.Uint32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t128;
      t128 = new typed_queue.Uint32Queue.new(elements[$length]);
      return (() => {
        t128.addAll(elements);
        return t128;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint32Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeUint32List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint32Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[81] || CT.C81, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[82] || CT.C82)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[83] || CT.C83, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[84] || CT.C84, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[85] || CT.C85, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[86] || CT.C86)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[87] || CT.C87)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[88] || CT.C88, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[89] || CT.C89, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[90] || CT.C90, value)));
    }
  };
  (typed_queue.Uint32Queue.new = function(initialCapacity = null) {
    typed_queue.Uint32Queue.__proto__.new.call(this, _native_typed_data.NativeUint32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint32Queue.prototype;
  dart.addTypeTests(typed_queue.Uint32Queue);
  dart.addTypeCaches(typed_queue.Uint32Queue);
  typed_queue.Uint32Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint32Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint32List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint32Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint32Queue, I[75]);
  typed_queue.Int32Queue = class Int32Queue extends typed_queue._IntQueue$(typed_data.Int32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t128;
      t128 = new typed_queue.Int32Queue.new(elements[$length]);
      return (() => {
        t128.addAll(elements);
        return t128;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int32Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeInt32List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int32Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[81] || CT.C81, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[82] || CT.C82)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[83] || CT.C83, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[84] || CT.C84, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[85] || CT.C85, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[86] || CT.C86)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[87] || CT.C87)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[88] || CT.C88, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[89] || CT.C89, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[90] || CT.C90, value)));
    }
  };
  (typed_queue.Int32Queue.new = function(initialCapacity = null) {
    typed_queue.Int32Queue.__proto__.new.call(this, _native_typed_data.NativeInt32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int32Queue.prototype;
  dart.addTypeTests(typed_queue.Int32Queue);
  dart.addTypeCaches(typed_queue.Int32Queue);
  typed_queue.Int32Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int32Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int32List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int32Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int32Queue, I[75]);
  typed_queue.Uint64Queue = class Uint64Queue extends typed_queue._IntQueue$(typed_data.Uint64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t128;
      t128 = new typed_queue.Uint64Queue.new(elements[$length]);
      return (() => {
        t128.addAll(elements);
        return t128;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint64Queue.fromList(elements);
    }
    [_createList](size) {
      return typed_data.Uint64List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint64Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[81] || CT.C81, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[82] || CT.C82)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[83] || CT.C83, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[84] || CT.C84, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[85] || CT.C85, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[86] || CT.C86)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[87] || CT.C87)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[88] || CT.C88, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[89] || CT.C89, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[90] || CT.C90, value)));
    }
  };
  (typed_queue.Uint64Queue.new = function(initialCapacity = null) {
    typed_queue.Uint64Queue.__proto__.new.call(this, typed_data.Uint64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint64Queue.prototype;
  dart.addTypeTests(typed_queue.Uint64Queue);
  dart.addTypeCaches(typed_queue.Uint64Queue);
  typed_queue.Uint64Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint64Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint64List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint64Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint64Queue, I[75]);
  typed_queue.Int64Queue = class Int64Queue extends typed_queue._IntQueue$(typed_data.Int64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t128;
      t128 = new typed_queue.Int64Queue.new(elements[$length]);
      return (() => {
        t128.addAll(elements);
        return t128;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int64Queue.fromList(elements);
    }
    [_createList](size) {
      return typed_data.Int64List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int64Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[81] || CT.C81, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[82] || CT.C82)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[83] || CT.C83, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[84] || CT.C84, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[85] || CT.C85, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[86] || CT.C86)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[87] || CT.C87)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[88] || CT.C88, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[89] || CT.C89, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[90] || CT.C90, value)));
    }
  };
  (typed_queue.Int64Queue.new = function(initialCapacity = null) {
    typed_queue.Int64Queue.__proto__.new.call(this, typed_data.Int64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int64Queue.prototype;
  dart.addTypeTests(typed_queue.Int64Queue);
  dart.addTypeCaches(typed_queue.Int64Queue);
  typed_queue.Int64Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int64Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int64List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int64Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int64Queue, I[75]);
  typed_queue.Float32Queue = class Float32Queue extends typed_queue._FloatQueue$(typed_data.Float32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t128;
      t128 = new typed_queue.Float32Queue.new(elements[$length]);
      return (() => {
        t128.addAll(elements);
        return t128;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float32Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeFloat32List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Float32Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[81] || CT.C81, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[82] || CT.C82)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[83] || CT.C83, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[84] || CT.C84, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[85] || CT.C85, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[86] || CT.C86)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[87] || CT.C87)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[88] || CT.C88, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[89] || CT.C89, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[90] || CT.C90, value)));
    }
  };
  (typed_queue.Float32Queue.new = function(initialCapacity = null) {
    typed_queue.Float32Queue.__proto__.new.call(this, _native_typed_data.NativeFloat32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float32Queue.prototype;
  dart.addTypeTests(typed_queue.Float32Queue);
  dart.addTypeCaches(typed_queue.Float32Queue);
  typed_queue.Float32Queue[dart.implements] = () => [queue_list.QueueList$(core.double)];
  dart.setMethodSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float32Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Float32List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Float32Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.double]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.double))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.double)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.double)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float32Queue, I[75]);
  typed_queue.Float64Queue = class Float64Queue extends typed_queue._FloatQueue$(typed_data.Float64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t128;
      t128 = new typed_queue.Float64Queue.new(elements[$length]);
      return (() => {
        t128.addAll(elements);
        return t128;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float64Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeFloat64List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Float64Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[81] || CT.C81, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[82] || CT.C82)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[83] || CT.C83, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[84] || CT.C84, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[85] || CT.C85, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[86] || CT.C86)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[87] || CT.C87)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[88] || CT.C88, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[89] || CT.C89, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[90] || CT.C90, value)));
    }
  };
  (typed_queue.Float64Queue.new = function(initialCapacity = null) {
    typed_queue.Float64Queue.__proto__.new.call(this, _native_typed_data.NativeFloat64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float64Queue.prototype;
  dart.addTypeTests(typed_queue.Float64Queue);
  dart.addTypeCaches(typed_queue.Float64Queue);
  typed_queue.Float64Queue[dart.implements] = () => [queue_list.QueueList$(core.double)];
  dart.setMethodSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float64Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Float64List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Float64Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.double]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.double))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.double)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.double)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float64Queue, I[75]);
  typed_queue.Int32x4Queue = class Int32x4Queue extends typed_queue._TypedQueue$(typed_data.Int32x4, typed_data.Int32x4List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int32x4Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t128;
      t128 = new typed_queue.Int32x4Queue.new(elements[$length]);
      return (() => {
        t128.addAll(elements);
        return t128;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int32x4Queue.fromList(elements);
    }
    [_createList](size) {
      return new _native_typed_data.NativeInt32x4List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int32x4Buffer.new(size);
    }
    get [_defaultValue]() {
      return typed_queue.Int32x4Queue._zero;
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[81] || CT.C81, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[82] || CT.C82)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[83] || CT.C83, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[84] || CT.C84, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[85] || CT.C85, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[86] || CT.C86)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[87] || CT.C87)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[88] || CT.C88, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[89] || CT.C89, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[90] || CT.C90, value)));
    }
  };
  (typed_queue.Int32x4Queue.new = function(initialCapacity = null) {
    typed_queue.Int32x4Queue.__proto__.new.call(this, new _native_typed_data.NativeInt32x4List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int32x4Queue.prototype;
  dart.addTypeTests(typed_queue.Int32x4Queue);
  dart.addTypeCaches(typed_queue.Int32x4Queue);
  typed_queue.Int32x4Queue[dart.implements] = () => [queue_list.QueueList$(typed_data.Int32x4)];
  dart.setMethodSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int32x4Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int32x4List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int32x4Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [typed_data.Int32x4]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(typed_data.Int32x4))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int32x4Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int32x4Queue.__proto__),
    [_defaultValue]: typed_data.Int32x4,
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(typed_data.Int32x4)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int32x4Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(typed_data.Int32x4)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int32x4Queue, I[75]);
  dart.setStaticFieldSignature(typed_queue.Int32x4Queue, () => ['_zero']);
  dart.defineLazy(typed_queue.Int32x4Queue, {
    /*typed_queue.Int32x4Queue._zero*/get _zero() {
      return new _native_typed_data.NativeInt32x4.new(0, 0, 0, 0);
    }
  }, false);
  typed_queue.Float32x4Queue = class Float32x4Queue extends typed_queue._TypedQueue$(typed_data.Float32x4, typed_data.Float32x4List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float32x4Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t128;
      t128 = new typed_queue.Float32x4Queue.new(elements[$length]);
      return (() => {
        t128.addAll(elements);
        return t128;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float32x4Queue.fromList(elements);
    }
    [_createList](size) {
      return new _native_typed_data.NativeFloat32x4List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Float32x4Buffer.new(size);
    }
    get [_defaultValue]() {
      return new _native_typed_data.NativeFloat32x4.zero();
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[81] || CT.C81, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[82] || CT.C82)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[83] || CT.C83, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[84] || CT.C84, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[85] || CT.C85, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[86] || CT.C86)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[87] || CT.C87)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[88] || CT.C88, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[89] || CT.C89, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[90] || CT.C90, value)));
    }
  };
  (typed_queue.Float32x4Queue.new = function(initialCapacity = null) {
    typed_queue.Float32x4Queue.__proto__.new.call(this, new _native_typed_data.NativeFloat32x4List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float32x4Queue.prototype;
  dart.addTypeTests(typed_queue.Float32x4Queue);
  dart.addTypeCaches(typed_queue.Float32x4Queue);
  typed_queue.Float32x4Queue[dart.implements] = () => [queue_list.QueueList$(typed_data.Float32x4)];
  dart.setMethodSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float32x4Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Float32x4List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Float32x4Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [typed_data.Float32x4]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(typed_data.Float32x4))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float32x4Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float32x4Queue.__proto__),
    [_defaultValue]: typed_data.Float32x4,
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(typed_data.Float32x4)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float32x4Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(typed_data.Float32x4)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float32x4Queue, I[75]);
  typed_queue._chooseRealInitialCapacity = function _chooseRealInitialCapacity(initialCapacity) {
    if (initialCapacity == null || dart.notNull(initialCapacity) < 16) {
      return 16;
    } else if (!typed_queue._isPowerOf2(initialCapacity)) {
      return typed_queue._nextPowerOf2(initialCapacity);
    } else {
      return initialCapacity;
    }
  };
  typed_queue._isPowerOf2 = function _isPowerOf2(number) {
    return (number & number - 1) === 0;
  };
  typed_queue._nextPowerOf2 = function _nextPowerOf2(number) {
    if (!(number > 0)) dart.assertFailed(null, I[74], 691, 10, "number > 0");
    number = (number << 1 >>> 0) - 1;
    for (;;) {
      let nextNumber = (number & number - 1) >>> 0;
      if (nextNumber === 0) return number;
      number = nextNumber;
    }
  };
  dart.defineLazy(typed_queue, {
    /*typed_queue._defaultInitialCapacity*/get _defaultInitialCapacity() {
      return 16;
    }
  }, false);
  var _buffer = dart.privateName(typed_buffer, "_buffer");
  var _length = dart.privateName(typed_buffer, "_length");
  var _typedBuffer = dart.privateName(typed_buffer, "_typedBuffer");
  var _defaultValue$ = dart.privateName(typed_buffer, "_defaultValue");
  var _createBuffer$ = dart.privateName(typed_buffer, "_createBuffer");
  var _createBiggerBuffer = dart.privateName(typed_buffer, "_createBiggerBuffer");
  var _grow$0 = dart.privateName(typed_buffer, "_grow");
  var _add$0 = dart.privateName(typed_buffer, "_add");
  var _addAll = dart.privateName(typed_buffer, "_addAll");
  var _insertKnownLength = dart.privateName(typed_buffer, "_insertKnownLength");
  var _ensureCapacity = dart.privateName(typed_buffer, "_ensureCapacity");
  var _setRange = dart.privateName(typed_buffer, "_setRange");
  const _is_TypedDataBuffer_default = Symbol('_is_TypedDataBuffer_default');
  typed_buffer.TypedDataBuffer$ = dart.generic(E => {
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(core.Iterable$(E)))();
    var __t$TypedDataBufferOfE = () => (__t$TypedDataBufferOfE = dart.constFn(typed_buffer.TypedDataBuffer$(E)))();
    class TypedDataBuffer extends collection.ListBase$(E) {
      get [_typedBuffer]() {
        return typed_data.TypedData.as(this[_buffer]);
      }
      get length() {
        return this[_length];
      }
      _get(index) {
        if (index >= this.length) dart.throw(new core.IndexError.new(index, this));
        return this[_buffer][$_get](index);
      }
      _set(index, value$) {
        let value = value$;
        E.as(value);
        if (index >= this.length) dart.throw(new core.IndexError.new(index, this));
        this[_buffer][$_set](index, value);
        return value$;
      }
      set length(newLength) {
        if (newLength < this[_length]) {
          let defaultValue = this[_defaultValue$];
          for (let i = newLength; i < this[_length]; i = i + 1) {
            this[_buffer][$_set](i, defaultValue);
          }
        } else if (newLength > this[_buffer][$length]) {
          let newBuffer = null;
          if (this[_buffer][$isEmpty]) {
            newBuffer = this[_createBuffer$](newLength);
          } else {
            newBuffer = this[_createBiggerBuffer](newLength);
          }
          newBuffer[$setRange](0, this[_length], this[_buffer]);
          this[_buffer] = newBuffer;
        }
        this[_length] = newLength;
      }
      [_add$0](value) {
        let t128;
        if (this[_length] === this[_buffer][$length]) this[_grow$0](this[_length]);
        this[_buffer][$_set]((t128 = this[_length], this[_length] = t128 + 1, t128), value);
      }
      add(element) {
        E.as(element);
        this[_add$0](element);
      }
      addAll(values, start = 0, end = null) {
        __t$IterableOfE().as(values);
        core.RangeError.checkNotNegative(start, "start");
        if (end != null && start > dart.notNull(end)) {
          dart.throw(new core.RangeError.range(end, start, null, "end"));
        }
        this[_addAll](values, start, end);
      }
      insertAll(index, values, start = 0, end = null) {
        let t128;
        __t$IterableOfE().as(values);
        core.RangeError.checkValidIndex(index, this, "index", this[_length] + 1);
        core.RangeError.checkNotNegative(start, "start");
        if (end != null) {
          if (start > dart.notNull(end)) {
            dart.throw(new core.RangeError.range(end, start, null, "end"));
          }
          if (start === end) return;
        }
        if (index === this[_length]) {
          this[_addAll](values, start, end);
          return;
        }
        if (end == null && core.List.is(values)) {
          end = values[$length];
        }
        if (end != null) {
          this[_insertKnownLength](index, values, start, end);
          return;
        }
        let writeIndex = this[_length];
        let skipCount = start;
        for (let value of values) {
          if (skipCount > 0) {
            skipCount = skipCount - 1;
            continue;
          }
          if (writeIndex === this[_buffer][$length]) {
            this[_grow$0](writeIndex);
          }
          this[_buffer][$_set]((t128 = writeIndex, writeIndex = t128 + 1, t128), value);
        }
        if (skipCount > 0) {
          dart.throw(new core.StateError.new("Too few elements"));
        }
        if (end != null && writeIndex < dart.notNull(end)) {
          dart.throw(new core.RangeError.range(end, start, writeIndex, "end"));
        }
        typed_buffer.TypedDataBuffer._reverse(this[_buffer], index, this[_length]);
        typed_buffer.TypedDataBuffer._reverse(this[_buffer], this[_length], writeIndex);
        typed_buffer.TypedDataBuffer._reverse(this[_buffer], index, writeIndex);
        this[_length] = writeIndex;
        return;
      }
      static _reverse(buffer, start, end) {
        end = end - 1;
        while (start < end) {
          let first = buffer[$_get](start);
          let last = buffer[$_get](end);
          buffer[$_set](end, first);
          buffer[$_set](start, last);
          start = start + 1;
          end = end - 1;
        }
      }
      [_addAll](values, start = 0, end = null) {
        if (core.List.is(values)) end == null ? end = values[$length] : null;
        if (end != null) {
          this[_insertKnownLength](this[_length], values, start, end);
          return;
        }
        let i = 0;
        for (let value of values) {
          if (i >= start) this.add(value);
          i = i + 1;
        }
        if (i < start) dart.throw(new core.StateError.new("Too few elements"));
      }
      [_insertKnownLength](index, values, start, end) {
        if (core.List.is(values)) {
          if (start > values[$length] || end > values[$length]) {
            dart.throw(new core.StateError.new("Too few elements"));
          }
        }
        let valuesLength = end - start;
        let newLength = this[_length] + valuesLength;
        this[_ensureCapacity](newLength);
        this[_buffer][$setRange](index + valuesLength, this[_length] + valuesLength, this[_buffer], index);
        this[_buffer][$setRange](index, index + valuesLength, values, start);
        this[_length] = newLength;
      }
      insert(index, element) {
        E.as(element);
        if (index < 0 || index > this[_length]) {
          dart.throw(new core.RangeError.range(index, 0, this[_length]));
        }
        if (this[_length] < this[_buffer][$length]) {
          this[_buffer][$setRange](index + 1, this[_length] + 1, this[_buffer], index);
          this[_buffer][$_set](index, element);
          this[_length] = this[_length] + 1;
          return;
        }
        let newBuffer = this[_createBiggerBuffer](null);
        newBuffer[$setRange](0, index, this[_buffer]);
        newBuffer[$setRange](index + 1, this[_length] + 1, this[_buffer], index);
        newBuffer[$_set](index, element);
        this[_length] = this[_length] + 1;
        this[_buffer] = newBuffer;
      }
      [_ensureCapacity](requiredCapacity) {
        if (requiredCapacity <= this[_buffer][$length]) return;
        let newBuffer = this[_createBiggerBuffer](requiredCapacity);
        newBuffer[$setRange](0, this[_length], this[_buffer]);
        this[_buffer] = newBuffer;
      }
      [_createBiggerBuffer](requiredCapacity) {
        let newLength = this[_buffer][$length] * 2;
        if (requiredCapacity != null && dart.notNull(newLength) < dart.notNull(requiredCapacity)) {
          newLength = requiredCapacity;
        } else if (dart.notNull(newLength) < 8) {
          newLength = 8;
        }
        return this[_createBuffer$](newLength);
      }
      [_grow$0](length) {
        let t128;
        this[_buffer] = (t128 = this[_createBiggerBuffer](null), (() => {
          t128[$setRange](0, length, this[_buffer]);
          return t128;
        })());
      }
      setRange(start, end, iterable, skipCount = 0) {
        __t$IterableOfE().as(iterable);
        if (end > this[_length]) dart.throw(new core.RangeError.range(end, 0, this[_length]));
        this[_setRange](start, end, iterable, skipCount);
      }
      [_setRange](start, end, source, skipCount) {
        if (__t$TypedDataBufferOfE().is(source)) {
          this[_buffer][$setRange](start, end, source[_buffer], skipCount);
        } else {
          this[_buffer][$setRange](start, end, source, skipCount);
        }
      }
      get elementSizeInBytes() {
        return this[_typedBuffer][$elementSizeInBytes];
      }
      get lengthInBytes() {
        return this[_length] * this[_typedBuffer][$elementSizeInBytes];
      }
      get offsetInBytes() {
        return this[_typedBuffer][$offsetInBytes];
      }
      get buffer() {
        return this[_typedBuffer][$buffer];
      }
    }
    (TypedDataBuffer.new = function(buffer) {
      this[_buffer] = buffer;
      this[_length] = buffer[$length];
      ;
    }).prototype = TypedDataBuffer.prototype;
    dart.addTypeTests(TypedDataBuffer);
    TypedDataBuffer.prototype[_is_TypedDataBuffer_default] = true;
    dart.addTypeCaches(TypedDataBuffer);
    dart.setMethodSignature(TypedDataBuffer, () => ({
      __proto__: dart.getMethods(TypedDataBuffer.__proto__),
      _get: dart.fnType(E, [core.int]),
      [$_get]: dart.fnType(E, [core.int]),
      _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [_add$0]: dart.fnType(dart.void, [E]),
      addAll: dart.fnType(dart.void, [dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [$addAll]: dart.fnType(dart.void, [dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      insertAll: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [$insertAll]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [_addAll]: dart.fnType(dart.void, [core.Iterable$(E)], [core.int, dart.nullable(core.int)]),
      [_insertKnownLength]: dart.fnType(dart.void, [core.int, core.Iterable$(E), core.int, core.int]),
      [_ensureCapacity]: dart.fnType(dart.void, [core.int]),
      [_createBiggerBuffer]: dart.fnType(core.List$(E), [dart.nullable(core.int)]),
      [_grow$0]: dart.fnType(dart.void, [core.int]),
      [_setRange]: dart.fnType(dart.void, [core.int, core.int, core.Iterable$(E), core.int])
    }));
    dart.setStaticMethodSignature(TypedDataBuffer, () => ['_reverse']);
    dart.setGetterSignature(TypedDataBuffer, () => ({
      __proto__: dart.getGetters(TypedDataBuffer.__proto__),
      [_typedBuffer]: typed_data.TypedData,
      length: core.int,
      [$length]: core.int,
      elementSizeInBytes: core.int,
      lengthInBytes: core.int,
      offsetInBytes: core.int,
      buffer: typed_data.ByteBuffer
    }));
    dart.setSetterSignature(TypedDataBuffer, () => ({
      __proto__: dart.getSetters(TypedDataBuffer.__proto__),
      length: core.int,
      [$length]: core.int
    }));
    dart.setLibraryUri(TypedDataBuffer, I[76]);
    dart.setFieldSignature(TypedDataBuffer, () => ({
      __proto__: dart.getFields(TypedDataBuffer.__proto__),
      [_buffer]: dart.fieldType(core.List$(E)),
      [_length]: dart.fieldType(core.int)
    }));
    dart.setStaticFieldSignature(TypedDataBuffer, () => ['_initialLength']);
    dart.defineExtensionMethods(TypedDataBuffer, [
      '_get',
      '_set',
      'add',
      'addAll',
      'insertAll',
      'insert',
      'setRange'
    ]);
    dart.defineExtensionAccessors(TypedDataBuffer, ['length']);
    return TypedDataBuffer;
  });
  typed_buffer.TypedDataBuffer = typed_buffer.TypedDataBuffer$();
  dart.defineLazy(typed_buffer.TypedDataBuffer, {
    /*typed_buffer.TypedDataBuffer._initialLength*/get _initialLength() {
      return 8;
    }
  }, false);
  dart.addTypeTests(typed_buffer.TypedDataBuffer, _is_TypedDataBuffer_default);
  typed_buffer._IntBuffer = class _IntBuffer extends typed_buffer.TypedDataBuffer$(core.int) {
    get [_defaultValue$]() {
      return 0;
    }
  };
  (typed_buffer._IntBuffer.new = function(buffer) {
    typed_buffer._IntBuffer.__proto__.new.call(this, buffer);
    ;
  }).prototype = typed_buffer._IntBuffer.prototype;
  dart.addTypeTests(typed_buffer._IntBuffer);
  dart.addTypeCaches(typed_buffer._IntBuffer);
  dart.setGetterSignature(typed_buffer._IntBuffer, () => ({
    __proto__: dart.getGetters(typed_buffer._IntBuffer.__proto__),
    [_defaultValue$]: core.int
  }));
  dart.setLibraryUri(typed_buffer._IntBuffer, I[76]);
  typed_buffer._FloatBuffer = class _FloatBuffer extends typed_buffer.TypedDataBuffer$(core.double) {
    get [_defaultValue$]() {
      return 0;
    }
  };
  (typed_buffer._FloatBuffer.new = function(buffer) {
    typed_buffer._FloatBuffer.__proto__.new.call(this, buffer);
    ;
  }).prototype = typed_buffer._FloatBuffer.prototype;
  dart.addTypeTests(typed_buffer._FloatBuffer);
  dart.addTypeCaches(typed_buffer._FloatBuffer);
  dart.setGetterSignature(typed_buffer._FloatBuffer, () => ({
    __proto__: dart.getGetters(typed_buffer._FloatBuffer.__proto__),
    [_defaultValue$]: core.double
  }));
  dart.setLibraryUri(typed_buffer._FloatBuffer, I[76]);
  typed_buffer.Uint8Buffer = class Uint8Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint8Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeUint8List.new(size);
    }
  };
  (typed_buffer.Uint8Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint8Buffer.__proto__.new.call(this, _native_typed_data.NativeUint8List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint8Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint8Buffer);
  dart.addTypeCaches(typed_buffer.Uint8Buffer);
  dart.setMethodSignature(typed_buffer.Uint8Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint8Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint8List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint8Buffer, I[76]);
  typed_buffer.Int8Buffer = class Int8Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int8Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeInt8List.new(size);
    }
  };
  (typed_buffer.Int8Buffer.new = function(initialLength = 0) {
    typed_buffer.Int8Buffer.__proto__.new.call(this, _native_typed_data.NativeInt8List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int8Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int8Buffer);
  dart.addTypeCaches(typed_buffer.Int8Buffer);
  dart.setMethodSignature(typed_buffer.Int8Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int8Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int8List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int8Buffer, I[76]);
  typed_buffer.Uint8ClampedBuffer = class Uint8ClampedBuffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint8ClampedBuffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeUint8ClampedList.new(size);
    }
  };
  (typed_buffer.Uint8ClampedBuffer.new = function(initialLength = 0) {
    typed_buffer.Uint8ClampedBuffer.__proto__.new.call(this, _native_typed_data.NativeUint8ClampedList.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint8ClampedBuffer.prototype;
  dart.addTypeTests(typed_buffer.Uint8ClampedBuffer);
  dart.addTypeCaches(typed_buffer.Uint8ClampedBuffer);
  dart.setMethodSignature(typed_buffer.Uint8ClampedBuffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint8ClampedBuffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint8ClampedList, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint8ClampedBuffer, I[76]);
  typed_buffer.Uint16Buffer = class Uint16Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint16Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeUint16List.new(size);
    }
  };
  (typed_buffer.Uint16Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint16Buffer.__proto__.new.call(this, _native_typed_data.NativeUint16List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint16Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint16Buffer);
  dart.addTypeCaches(typed_buffer.Uint16Buffer);
  dart.setMethodSignature(typed_buffer.Uint16Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint16Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint16List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint16Buffer, I[76]);
  typed_buffer.Int16Buffer = class Int16Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int16Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeInt16List.new(size);
    }
  };
  (typed_buffer.Int16Buffer.new = function(initialLength = 0) {
    typed_buffer.Int16Buffer.__proto__.new.call(this, _native_typed_data.NativeInt16List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int16Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int16Buffer);
  dart.addTypeCaches(typed_buffer.Int16Buffer);
  dart.setMethodSignature(typed_buffer.Int16Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int16Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int16List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int16Buffer, I[76]);
  typed_buffer.Uint32Buffer = class Uint32Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint32Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeUint32List.new(size);
    }
  };
  (typed_buffer.Uint32Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint32Buffer.__proto__.new.call(this, _native_typed_data.NativeUint32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint32Buffer);
  dart.addTypeCaches(typed_buffer.Uint32Buffer);
  dart.setMethodSignature(typed_buffer.Uint32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint32Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint32Buffer, I[76]);
  typed_buffer.Int32Buffer = class Int32Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int32Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeInt32List.new(size);
    }
  };
  (typed_buffer.Int32Buffer.new = function(initialLength = 0) {
    typed_buffer.Int32Buffer.__proto__.new.call(this, _native_typed_data.NativeInt32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int32Buffer);
  dart.addTypeCaches(typed_buffer.Int32Buffer);
  dart.setMethodSignature(typed_buffer.Int32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int32Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int32Buffer, I[76]);
  typed_buffer.Uint64Buffer = class Uint64Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint64Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return typed_data.Uint64List.new(size);
    }
  };
  (typed_buffer.Uint64Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint64Buffer.__proto__.new.call(this, typed_data.Uint64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint64Buffer);
  dart.addTypeCaches(typed_buffer.Uint64Buffer);
  dart.setMethodSignature(typed_buffer.Uint64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint64Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint64Buffer, I[76]);
  typed_buffer.Int64Buffer = class Int64Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int64Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return typed_data.Int64List.new(size);
    }
  };
  (typed_buffer.Int64Buffer.new = function(initialLength = 0) {
    typed_buffer.Int64Buffer.__proto__.new.call(this, typed_data.Int64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int64Buffer);
  dart.addTypeCaches(typed_buffer.Int64Buffer);
  dart.setMethodSignature(typed_buffer.Int64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int64Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int64Buffer, I[76]);
  typed_buffer.Float32Buffer = class Float32Buffer extends typed_buffer._FloatBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float32Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeFloat32List.new(size);
    }
  };
  (typed_buffer.Float32Buffer.new = function(initialLength = 0) {
    typed_buffer.Float32Buffer.__proto__.new.call(this, _native_typed_data.NativeFloat32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float32Buffer);
  dart.addTypeCaches(typed_buffer.Float32Buffer);
  dart.setMethodSignature(typed_buffer.Float32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float32Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Float32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Float32Buffer, I[76]);
  typed_buffer.Float64Buffer = class Float64Buffer extends typed_buffer._FloatBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float64Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeFloat64List.new(size);
    }
  };
  (typed_buffer.Float64Buffer.new = function(initialLength = 0) {
    typed_buffer.Float64Buffer.__proto__.new.call(this, _native_typed_data.NativeFloat64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float64Buffer);
  dart.addTypeCaches(typed_buffer.Float64Buffer);
  dart.setMethodSignature(typed_buffer.Float64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float64Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Float64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Float64Buffer, I[76]);
  typed_buffer.Int32x4Buffer = class Int32x4Buffer extends typed_buffer.TypedDataBuffer$(typed_data.Int32x4) {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int32x4Buffer.new(initialLength);
    }
    get [_defaultValue$]() {
      return typed_buffer.Int32x4Buffer._zero;
    }
    [_createBuffer$](size) {
      return new _native_typed_data.NativeInt32x4List.new(size);
    }
  };
  (typed_buffer.Int32x4Buffer.new = function(initialLength = 0) {
    typed_buffer.Int32x4Buffer.__proto__.new.call(this, new _native_typed_data.NativeInt32x4List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int32x4Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int32x4Buffer);
  dart.addTypeCaches(typed_buffer.Int32x4Buffer);
  dart.setMethodSignature(typed_buffer.Int32x4Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int32x4Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int32x4List, [core.int])
  }));
  dart.setGetterSignature(typed_buffer.Int32x4Buffer, () => ({
    __proto__: dart.getGetters(typed_buffer.Int32x4Buffer.__proto__),
    [_defaultValue$]: typed_data.Int32x4
  }));
  dart.setLibraryUri(typed_buffer.Int32x4Buffer, I[76]);
  dart.setStaticFieldSignature(typed_buffer.Int32x4Buffer, () => ['_zero']);
  dart.defineLazy(typed_buffer.Int32x4Buffer, {
    /*typed_buffer.Int32x4Buffer._zero*/get _zero() {
      return new _native_typed_data.NativeInt32x4.new(0, 0, 0, 0);
    }
  }, false);
  typed_buffer.Float32x4Buffer = class Float32x4Buffer extends typed_buffer.TypedDataBuffer$(typed_data.Float32x4) {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float32x4Buffer.new(initialLength);
    }
    get [_defaultValue$]() {
      return new _native_typed_data.NativeFloat32x4.zero();
    }
    [_createBuffer$](size) {
      return new _native_typed_data.NativeFloat32x4List.new(size);
    }
  };
  (typed_buffer.Float32x4Buffer.new = function(initialLength = 0) {
    typed_buffer.Float32x4Buffer.__proto__.new.call(this, new _native_typed_data.NativeFloat32x4List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float32x4Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float32x4Buffer);
  dart.addTypeCaches(typed_buffer.Float32x4Buffer);
  dart.setMethodSignature(typed_buffer.Float32x4Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float32x4Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Float32x4List, [core.int])
  }));
  dart.setGetterSignature(typed_buffer.Float32x4Buffer, () => ({
    __proto__: dart.getGetters(typed_buffer.Float32x4Buffer.__proto__),
    [_defaultValue$]: typed_data.Float32x4
  }));
  dart.setLibraryUri(typed_buffer.Float32x4Buffer, I[76]);
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:firebase_auth_web/firebase_auth_web.dart": firebase_auth_web,
    "package:firebase_core_web/firebase_core_web.dart": firebase_core_web,
    "package:url_launcher_web/url_launcher_web.dart": url_launcher_web,
    "package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart": firebase_auth_platform_interface,
    "package:firebase_auth_web/src/firebase_auth_web_multi_factor.dart": firebase_auth_web_multi_factor,
    "package:firebase_auth_web/src/interop/utils/utils.dart": utils,
    "package:firebase_auth_web/src/utils/web_utils.dart": web_utils,
    "package:firebase_core/firebase_core.dart": firebase_core,
    "package:firebase_core_web/firebase_core_web_interop.dart": firebase_core_web_interop,
    "package:firebase_auth_web/src/firebase_auth_web_confirmation_result.dart": firebase_auth_web_confirmation_result,
    "package:firebase_auth_web/src/firebase_auth_web_recaptcha_verifier_factory.dart": firebase_auth_web_recaptcha_verifier_factory,
    "package:firebase_auth_web/src/firebase_auth_web_user.dart": firebase_auth_web_user,
    "package:firebase_auth_web/src/firebase_auth_web_user_credential.dart": firebase_auth_web_user_credential,
    "package:firebase_auth_web/src/interop/auth.dart": auth$,
    "package:firebase_auth_web/src/interop/multi_factor.dart": multi_factor,
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart": firebase_core_platform_interface,
    "package:firebase_core_web/src/interop/js.dart": js$,
    "package:firebase_core_web/src/interop/core.dart": core$,
    "package:url_launcher_platform_interface/link.dart": link,
    "package:url_launcher_platform_interface/url_launcher_platform_interface.dart": url_launcher_platform_interface,
    "package:url_launcher_web/src/link.dart": link$,
    "package:url_launcher_web/src/shims/dart_ui.dart": dart_ui,
    "package:firebase_auth_platform_interface/src/action_code_info.dart": action_code_info,
    "package:firebase_auth_platform_interface/src/action_code_settings.dart": action_code_settings,
    "package:firebase_auth_platform_interface/src/additional_user_info.dart": additional_user_info,
    "package:firebase_auth_platform_interface/src/auth_credential.dart": auth_credential,
    "package:firebase_auth_platform_interface/src/auth_provider.dart": auth_provider,
    "package:firebase_auth_platform_interface/src/firebase_auth_exception.dart": firebase_auth_exception,
    "package:firebase_auth_platform_interface/src/firebase_auth_multi_factor_exception.dart": firebase_auth_multi_factor_exception,
    "package:firebase_auth_platform_interface/src/id_token_result.dart": id_token_result,
    "package:firebase_auth_platform_interface/src/pigeon/messages.pigeon.dart": messages$46pigeon,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_confirmation_result.dart": platform_interface_confirmation_result,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_firebase_auth.dart": platform_interface_firebase_auth,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_multi_factor.dart": platform_interface_multi_factor,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_recaptcha_verifier_factory.dart": platform_interface_recaptcha_verifier_factory,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user.dart": platform_interface_user,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user_credential.dart": platform_interface_user_credential,
    "package:firebase_auth_platform_interface/src/providers/apple_auth.dart": apple_auth,
    "package:firebase_auth_platform_interface/src/providers/email_auth.dart": email_auth,
    "package:firebase_auth_platform_interface/src/providers/facebook_auth.dart": facebook_auth,
    "package:firebase_auth_platform_interface/src/providers/github_auth.dart": github_auth,
    "package:firebase_auth_platform_interface/src/providers/google_auth.dart": google_auth,
    "package:firebase_auth_platform_interface/src/providers/microsoft_auth.dart": microsoft_auth,
    "package:firebase_auth_platform_interface/src/providers/oauth.dart": oauth,
    "package:firebase_auth_platform_interface/src/providers/phone_auth.dart": phone_auth,
    "package:firebase_auth_platform_interface/src/providers/saml_auth.dart": saml_auth,
    "package:firebase_auth_platform_interface/src/providers/twitter_auth.dart": twitter_auth,
    "package:firebase_auth_platform_interface/src/providers/yahoo_auth.dart": yahoo_auth,
    "package:firebase_auth_platform_interface/src/types.dart": types,
    "package:firebase_auth_platform_interface/src/user_info.dart": user_info,
    "package:firebase_auth_platform_interface/src/user_metadata.dart": user_metadata,
    "package:firebase_core_web/src/interop/utils/es6_interop.dart": es6_interop,
    "package:firebase_core_web/src/interop/utils/func.dart": func,
    "package:firebase_core_web/src/interop/utils/js.dart": js$0,
    "package:firebase_core_web/src/interop/utils/js_interop.dart": js_interop,
    "package:firebase_core_web/src/interop/utils/utils.dart": utils$,
    "package:http_parser/http_parser.dart": http_parser,
    "package:firebase_auth_web/src/interop/auth_interop.dart": auth_interop,
    "package:firebase_core_platform_interface/src/pigeon/messages.pigeon.dart": messages$46pigeon$,
    "package:plugin_platform_interface/plugin_platform_interface.dart": plugin_platform_interface,
    "package:firebase_core_platform_interface/src/pigeon/mocks.dart": mocks,
    "package:firebase_core_platform_interface/src/pigeon/test_api.dart": test_api,
    "package:firebase_core_web/src/interop/app.dart": app$,
    "package:firebase_core_web/src/interop/core_interop.dart": core_interop,
    "package:firebase_core_web/src/interop/app_interop.dart": app_interop,
    "package:url_launcher_platform_interface/src/types.dart": types$,
    "package:url_launcher_platform_interface/src/url_launcher_platform.dart": url_launcher_platform,
    "package:url_launcher_web/src/shims/dart_ui_real.dart": dart_ui_real,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_firebase_auth.dart": method_channel_firebase_auth,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_multi_factor.dart": method_channel_multi_factor,
    "package:http_parser/src/authentication_challenge.dart": authentication_challenge,
    "package:http_parser/src/case_insensitive_map.dart": case_insensitive_map,
    "package:http_parser/src/chunked_coding.dart": chunked_coding,
    "package:http_parser/src/http_date.dart": http_date,
    "package:http_parser/src/media_type.dart": media_type,
    "package:url_launcher_platform_interface/method_channel_url_launcher.dart": method_channel_url_launcher,
    "package:_flutterfire_internals/_flutterfire_internals.dart": _flutterfire_internals,
    "package:firebase_auth_platform_interface/src/method_channel/utils/convert_auth_provider.dart": convert_auth_provider,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user.dart": method_channel_user,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user_credential.dart": method_channel_user_credential,
    "package:firebase_auth_platform_interface/src/method_channel/utils/exception.dart": exception$,
    "package:firebase_auth_platform_interface/src/method_channel/utils/pigeon_helper.dart": pigeon_helper,
    "package:http_parser/src/scan.dart": scan,
    "package:http_parser/src/utils.dart": utils$0,
    "package:http_parser/src/chunked_coding/decoder.dart": decoder,
    "package:http_parser/src/chunked_coding/encoder.dart": encoder,
    "package:_flutterfire_internals/src/exception.dart": exception$0,
    "package:typed_data/typed_data.dart": typed_data$,
    "package:http_parser/src/chunked_coding/charcodes.dart": charcodes,
    "package:typed_data/src/typed_queue.dart": typed_queue,
    "package:typed_data/typed_buffers.dart": typed_buffers,
    "package:typed_data/src/typed_buffer.dart": typed_buffer
  }, {
    "package:firebase_core_web/firebase_core_web.dart": ["src/firebase_app_web.dart", "src/firebase_core_web.dart", "src/firebase_sdk_version.dart"],
    "package:firebase_core/firebase_core.dart": ["src/firebase_app.dart", "src/firebase.dart"],
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart": ["src/firebase_core_exceptions.dart", "src/firebase_exception.dart", "src/firebase_options.dart", "src/method_channel/method_channel_firebase.dart", "src/method_channel/method_channel_firebase_app.dart", "src/platform_interface/platform_interface_firebase.dart", "src/platform_interface/platform_interface_firebase_app.dart", "src/platform_interface/platform_interface_firebase_plugin.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.5/lib/plugin_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/platform_interface/platform_interface_firebase_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.6.1/lib/firebase_auth_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.8.0/lib/src/platform_interface/platform_interface_firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.6.0/lib/src/firebase_app_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.6.0/lib/src/firebase_core_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.8.0/lib/src/platform_interface/platform_interface_firebase.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.6.0/lib/firebase_core_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.6.0/lib/src/firebase_sdk_version.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher_platform_interface-2.1.3/lib/src/url_launcher_platform.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher_web-2.0.18/lib/url_launcher_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/platform_interface/platform_interface_multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.6.1/lib/src/firebase_auth_web_multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.6.1/lib/src/interop/utils/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.6.1/lib/src/utils/web_utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core-2.15.0/lib/src/firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core-2.15.0/lib/src/firebase.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/platform_interface/platform_interface_confirmation_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.6.1/lib/src/firebase_auth_web_confirmation_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/platform_interface/platform_interface_recaptcha_verifier_factory.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.6.1/lib/src/firebase_auth_web_recaptcha_verifier_factory.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/platform_interface/platform_interface_user.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.6.1/lib/src/firebase_auth_web_user.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/platform_interface/platform_interface_user_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.6.1/lib/src/firebase_auth_web_user_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.6.0/lib/src/interop/utils/js.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.6.1/lib/src/interop/auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.6.1/lib/src/interop/multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.8.0/lib/src/firebase_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.8.0/lib/src/firebase_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.8.0/lib/src/method_channel/method_channel_firebase.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.8.0/lib/src/method_channel/method_channel_firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.8.0/lib/src/platform_interface/platform_interface_firebase_plugin.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.8.0/lib/src/firebase_core_exceptions.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.8.0/lib/firebase_core_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.6.0/lib/src/interop/js.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.6.0/lib/src/interop/core.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher_platform_interface-2.1.3/lib/link.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher_web-2.0.18/lib/src/link.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/action_code_info.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/action_code_settings.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/additional_user_info.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/auth_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/auth_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/firebase_auth_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/firebase_auth_multi_factor_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/id_token_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/pigeon/messages.pigeon.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/providers/apple_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/providers/oauth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/providers/email_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/providers/facebook_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/providers/github_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/providers/google_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/providers/microsoft_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/providers/phone_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/providers/saml_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/providers/twitter_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/providers/yahoo_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/types.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/user_info.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/user_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.6.0/lib/src/interop/utils/js_interop.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.6.0/lib/src/interop/utils/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.8.0/lib/src/pigeon/messages.pigeon.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.8.0/lib/src/pigeon/mocks.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-4.8.0/lib/src/pigeon/test_api.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.6.0/lib/src/interop/app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher_platform_interface-2.1.3/lib/src/types.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/method_channel/method_channel_firebase_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/method_channel/method_channel_multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/authentication_challenge.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/case_insensitive_map.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/http_date.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/media_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher_platform_interface-2.1.3/lib/method_channel_url_launcher.dart","/zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.3.4/lib/_flutterfire_internals.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/method_channel/utils/convert_auth_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/method_channel/method_channel_user.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/method_channel/method_channel_user_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/method_channel/utils/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-6.16.0/lib/src/method_channel/utils/pigeon_helper.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/scan.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/decoder.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/encoder.dart","/zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.3.4/lib/src/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/charcodes.dart","/zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_queue.dart","/zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_buffer.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    firebase_auth_web: firebase_auth_web,
    firebase_core_web: firebase_core_web,
    url_launcher_web: url_launcher_web,
    firebase_auth_platform_interface: firebase_auth_platform_interface,
    src__firebase_auth_web_multi_factor: firebase_auth_web_multi_factor,
    src__interop__utils__utils: utils,
    src__utils__web_utils: web_utils,
    firebase_core: firebase_core,
    firebase_core_web_interop: firebase_core_web_interop,
    src__firebase_auth_web_confirmation_result: firebase_auth_web_confirmation_result,
    src__firebase_auth_web_recaptcha_verifier_factory: firebase_auth_web_recaptcha_verifier_factory,
    src__firebase_auth_web_user: firebase_auth_web_user,
    src__firebase_auth_web_user_credential: firebase_auth_web_user_credential,
    src__interop__auth: auth$,
    src__interop__multi_factor: multi_factor,
    firebase_core_platform_interface: firebase_core_platform_interface,
    src__interop__js: js$,
    src__interop__core: core$,
    link: link,
    url_launcher_platform_interface: url_launcher_platform_interface,
    src__link: link$,
    src__shims__dart_ui: dart_ui,
    src__action_code_info: action_code_info,
    src__action_code_settings: action_code_settings,
    src__additional_user_info: additional_user_info,
    src__auth_credential: auth_credential,
    src__auth_provider: auth_provider,
    src__firebase_auth_exception: firebase_auth_exception,
    src__firebase_auth_multi_factor_exception: firebase_auth_multi_factor_exception,
    src__id_token_result: id_token_result,
    src__pigeon__messages$46pigeon: messages$46pigeon,
    src__platform_interface__platform_interface_confirmation_result: platform_interface_confirmation_result,
    src__platform_interface__platform_interface_firebase_auth: platform_interface_firebase_auth,
    src__platform_interface__platform_interface_multi_factor: platform_interface_multi_factor,
    src__platform_interface__platform_interface_recaptcha_verifier_factory: platform_interface_recaptcha_verifier_factory,
    src__platform_interface__platform_interface_user: platform_interface_user,
    src__platform_interface__platform_interface_user_credential: platform_interface_user_credential,
    src__providers__apple_auth: apple_auth,
    src__providers__email_auth: email_auth,
    src__providers__facebook_auth: facebook_auth,
    src__providers__github_auth: github_auth,
    src__providers__google_auth: google_auth,
    src__providers__microsoft_auth: microsoft_auth,
    src__providers__oauth: oauth,
    src__providers__phone_auth: phone_auth,
    src__providers__saml_auth: saml_auth,
    src__providers__twitter_auth: twitter_auth,
    src__providers__yahoo_auth: yahoo_auth,
    src__types: types,
    src__user_info: user_info,
    src__user_metadata: user_metadata,
    src__interop__utils__es6_interop: es6_interop,
    src__interop__utils__func: func,
    src__interop__utils__js: js$0,
    src__interop__utils__js_interop: js_interop,
    src__interop__utils__utils: utils$,
    http_parser: http_parser,
    src__interop__auth_interop: auth_interop,
    src__pigeon__messages$46pigeon: messages$46pigeon$,
    plugin_platform_interface: plugin_platform_interface,
    src__pigeon__mocks: mocks,
    src__pigeon__test_api: test_api,
    src__interop__app: app$,
    src__interop__core_interop: core_interop,
    src__interop__app_interop: app_interop,
    src__types: types$,
    src__url_launcher_platform: url_launcher_platform,
    src__shims__dart_ui_real: dart_ui_real,
    src__method_channel__method_channel_firebase_auth: method_channel_firebase_auth,
    src__method_channel__method_channel_multi_factor: method_channel_multi_factor,
    src__authentication_challenge: authentication_challenge,
    src__case_insensitive_map: case_insensitive_map,
    src__chunked_coding: chunked_coding,
    src__http_date: http_date,
    src__media_type: media_type,
    method_channel_url_launcher: method_channel_url_launcher,
    _flutterfire_internals: _flutterfire_internals,
    src__method_channel__utils__convert_auth_provider: convert_auth_provider,
    src__method_channel__method_channel_user: method_channel_user,
    src__method_channel__method_channel_user_credential: method_channel_user_credential,
    src__method_channel__utils__exception: exception$,
    src__method_channel__utils__pigeon_helper: pigeon_helper,
    src__scan: scan,
    src__utils: utils$0,
    src__chunked_coding__decoder: decoder,
    src__chunked_coding__encoder: encoder,
    src__exception: exception$0,
    typed_data: typed_data$,
    src__chunked_coding__charcodes: charcodes,
    src__typed_queue: typed_queue,
    typed_buffers: typed_buffers,
    src__typed_buffer: typed_buffer
  };
}));

//# sourceMappingURL=main.js.map
